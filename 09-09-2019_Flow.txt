[{"id":"30fd20d3.c3e52","type":"function","z":"be0109da.569e68","name":"Output Matrix","func":"let status = context.get('status') || 0;\nlet isFirst = flow.get('initial');\nif (typeof(msg.payload) === 'object') {\n    if(isFirst === 1) {\n        flow.set('templ_counter_metal', []);\n        flow.set('templ_counter_nonmetal', []);\n        flow.set('templ_counter_counter', []);\n        let metalCounter = global.get('counter_metal') || [];\n        let nonmetalCounter = global.get('counter_nonmetal') || [];\n        let totalCounter = global.get('counter_total') || [];\n        let metal = metalCounter.length;\n        let nonmetal = nonmetalCounter.length;\n        let total = totalCounter.length;\n        context.set('status', 1);\n        msg.metal_count = metal;\n        msg.nonmetal_count = nonmetal;\n        msg.total_count = total;\n        return [msg, msg, msg, null, null, null];\n    }\n}\n/*let topics = [\"reset\", \"enable\", \"auto\", \"start\", \"metal\", \"nonmetal\", \"counter\", \"out\" ];\nlet topic = msg.topic;\nif(topics.includes(topic)) {\n    let statusEnable = global.get('enable') || 0;\n    let statusAuto = global.get('auto') || 0;\n    let statusMain = global.get('main') || 0;\n    let statusMetal = flow.get('metal') || 0;\n    let totalCount = flow.get('totalcounter') || 0;\n    let statusNonmetal = flow.get('nonmetal') || [];\n    let nonmetalCounter = global.get('nonmetalcounter') || [];\n    let metalCounter = global.get('metalcounter') || [];\n    let payload;\n    let color = \"\";\n    let input;\n    switch(topic) {\n        case 'reset':\n            statusNonmetal = [];\n            nonmetalCounter = [];\n            metalCounter = [];\n            totalCount = 0;\n            flow.set('nonmetal', statusNonmetal);\n            global.set('nonmetalcounter', nonmetalCounter);\n            global.set('metalcounter', metalCounter);\n            flow.set('totalcounter', totalCount);\n            msg.count = 0;\n            msg.countmetal = 0;\n            msg.countnonmetal = 0;\n            return [msg, msg, msg, msg, msg, msg, msg, null];\n        case 'enable':\n            if(statusEnable === 1) {\n                statusEnable = 0;\n                //color = \"red\";\n                payload = 0;\n            }\n            else {\n                statusEnable = 1;\n                //color = \"lime\";\n                payload = 1;\n            }\n            \n            //msg.color = color;\n            msg.payload = payload;\n                \n            return [null, null, null, null, null, null, null, msg];\n            \n        case 'auto':\n            input = msg.payload;\n            if(input === 1) {\n                if(statusAuto === 1) {\n                    statusAuto = 0;\n                    color = \"red\";\n                }\n                else if(statusAuto === 0) {\n                    statusAuto = 1;\n                    color = \"lime\";\n                }\n                \n                global.set('auto', statusAuto);\n                \n                msg.color = color;\n                \n                return [null, null, null, msg, null, null, null, null];\n            }\n            return null;\n        case 'start':\nif(flow.get('auto') === 1) {\n    if(flow.get('output_main') === 0) {\n        let first = context.get('first') || false;\n        if (typeof(msg.payload) == 'object') {\n            let input = msg.payload[4];\n            //if(flow.get('status_start') === 1) {\n            if(input === 1 && first === false) {\n                msg.payload = {\n                    value: 1,\n                    'fc': 6,\n                    'unitid': 1,\n                    'address': 16385 ,\n                    'quantity': 1\n                }\n                //flow.set('status_start', 0);\n                context.set('first', true);\n                msg.topic = \"server/start\";\n                //return msg;\n            }\n            //}    \n            if(input === 0 && first === true) {\n                context.set('first', false);\n            }\n        }\n    }\n}\n            if(statusAuto === 1) {\n                status = 1;\n                global.set('main', status);\n                return [msg, null, null, null, null, null, null, null];\n            }\n            break;\n        case 'metal':\n    \n            //}\n            else {\n                msg.payload = \"ON\";\n                msg.color = \"lime\";\n                flow.set('sensor_metal', 1);\n                context.set('status', 0);\n                return msg;\n            //}\n        }\n    if(input === 1 && status === 1) {\n        msg.payload = \"ON\";\n        msg.color = \"lime\";\n        context.set('status', 0);\n        flow.set('sensor_metal', 1);\n        return msg;\n    }\n    else if(input === 0 && status === 0) {\n        msg.payload = \"OFF\";\n        msg.color = \"red\";\n        context.set('status', 1);\n        flow.set('sensor_metal', 0);\n        return msg;\n    }\n} \n//return null;\n    return [null, msg, null, null, null, null, null, null];\n}\n        case 'nonmetal':\n            statusNonmetal.push(statusMetal);\n            flow.set('nonmetal', statusNonmetal);\n            statusMetal = 0;\n            flow.set('metal', statusMetal);\n            return [null, msg, null, null, null, null, null, null];\n        case 'counter':\n            if(statusAuto === 1) {\n                status = 0;\n                global.set('main', status);\n                if(statusNonmetal.length > 0) {\n                    let current = statusNonmetal.shift();\n                    flow.set('nonmetal', statusNonmetal);\n                    let next = statusNonmetal[0];\n                    if(current === 1) {\n                        metalCounter.push(current);\n                        global.set('metalcounter', metalCounter);\n                    }\n                    else {\n                        nonmetalCounter.push(current);\n                        global.set('nonmetalcounter', nonmetalCounter);\n                    }\n                    totalCount ++;\n                    flow.set('totalcounter', totalCount);\n                    msg.count = totalCount;\n                    msg.countmetal = metalCounter.length;\n                    msg.countnonmetal = nonmetalCounter.length;\n                    return [msg, null, null, null, msg, msg, msg, null]; \n                }\n                return [msg, null, null, null, msg, msg, msg, null]; \n            }\n            break;\n        case 'out':\n            \n            break;\n        \n          \n        default:\n        return null;\n    }\n}\nreturn null;*/\n\n","outputs":6,"noerr":0,"x":560,"y":500,"wires":[["3a6c4135.1f721e"],["9a90850.979d578"],["c255c282.23f4d"],["d62bbd41.48945"],["7fc3ce0e.72aa4"],["7ca2b06.68c425"]]}]