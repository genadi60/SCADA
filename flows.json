[{"id":"be0109da.569e68","type":"tab","label":"LentaModbusTest","disabled":false,"info":""},{"id":"3d27bcb7.492aa4","type":"function","z":"be0109da.569e68","name":"Float(CD AB)","func":"//Create a buffer\nlet buf = new ArrayBuffer(4);\n//Create a 16-bit int view of it\nlet ints = new Uint16Array(buf);\n\n//Read input in format \"CD AB\": [6025, 16831]\nlet data = msg.values;\ndata.forEach(function(b, i) {\n    ints[i] = b;\n});\n\n//Create a 32-bit float view of it\nlet floats = new Float32Array(buf);\n//Read the bits as a float;note that by doing this, we're implicitly\n// converting it from a 32-bit float into JavaScript's native 64-bit double\nmsg.result = floats[0];\n//Done\nreturn msg;\n//stackoverflow.com/40970739","outputs":1,"noerr":0,"x":710,"y":20,"wires":[[]]},{"id":"84cd4e46.3abcc","type":"function","z":"be0109da.569e68","name":"CS Enable","func":"let status = context.get('status') || 0;\nlet isFirst = flow.get('initial');\nif (typeof(msg.payload) === 'object') {\n    let input = msg.payload[0];\n    if(isFirst === 1) {\n        if(input === 0) {\n            msg.payload = \"OFF\";\n            msg.color = \"red\";\n            let a = flow.get('output_enable');\n            a = 0;\n            flow.set('output_enable', a);\n            context.set('status', 0);\n            return msg;\n        }\n        else {\n            msg.payload = \"ON\";\n            msg.color = \"lime\";\n            let a = flow.get('output_enable');\n            a = 1;\n            flow.set('output_enable', a);\n            context.set('status', 1);\n            return msg;\n        }\n    }\n    else {\n        if(input === status) {\n            return null;\n        }\n        else if(input === 1) {\n           msg.payload = \"ON\";\n            msg.color = \"lime\";\n            context.set('status', 1);\n            let a = flow.get('output_enable');\n            a = 1;\n            flow.set('output_enable', a);\n            return msg; \n        }\n        \n        else {\n            msg.payload = \"OFF\";\n            msg.color = \"red\";\n            context.set('status', 0);\n            let a = flow.get('output_enable');\n            a = 0;\n            flow.set('output_enable', a);\n            return msg;\n        }\n    }\n} \nreturn null;","outputs":1,"noerr":0,"x":750,"y":100,"wires":[["86f7d946.0d2228"]]},{"id":"ff5e3785.68c1b8","type":"function","z":"be0109da.569e68","name":"CS Main","func":"let status = context.get('status') || 0;\nlet isFirst = flow.get('initial');\nif (typeof(msg.payload) === 'object') {\n    let input = msg.payload[1];\n    if(isFirst === 1) {\n        if(input === 0) {\n            msg.payload = \"OFF\";\n            msg.color = \"red\";\n            let a = flow.get('output_main');\n            a = 0;\n            flow.set('output_main', a);\n            context.set('status', 0);\n            return msg;\n        }\n        else {\n            msg.payload = \"ON\";\n            msg.color = \"lime\";\n            let a = flow.get('output_main');\n            a = 1;\n            flow.set('output_main', a);\n            context.set('status', 1);\n            return msg;\n        }\n    }\n    else {\n        if(input === status) {\n            return null;\n        }\n        else if(input === 1) {\n           msg.payload = \"ON\";\n            msg.color = \"lime\";\n            context.set('status', 1);\n            let a = flow.get('output_main');\n            a = 1;\n            flow.set('output_main', a);\n            return msg; \n        }\n        \n        else {\n            msg.payload = \"OFF\";\n            msg.color = \"red\";\n            context.set('status', 0);\n            let a = flow.get('output_main');\n            a = 0;\n            flow.set('output_main', a);\n            return msg;\n        }\n    }\n} \nreturn null;","outputs":1,"noerr":0,"x":740,"y":140,"wires":[["d6d84df7.fa5b6"]]},{"id":"21cf992a.c55046","type":"function","z":"be0109da.569e68","name":"CS Forward","func":"let status = context.get('status') || 0;\nlet isFirst = flow.get('initial');\nif (typeof(msg.payload) === 'object') {\n    let input = msg.payload[2];\n    if(isFirst === 1) {\n        if(input === 0) {\n            msg.payload = \"OFF\";\n            msg.color = \"red\";\n            let a = flow.get('output_forward');\n            a = 0;\n            flow.set('output_forward', a);\n            context.set('status', 0);\n            return msg;\n        }\n        else {\n            msg.payload = \"ON\";\n            msg.color = \"lime\";\n            let a = flow.get('output_forward');\n            a = 1;\n            flow.set('output_forward', a);\n            context.set('status', 1);\n            return msg;\n        }\n    }\n    else {\n        if(input === status) {\n            return null;\n        }\n        else if(input === 1) {\n           msg.payload = \"ON\";\n            msg.color = \"lime\";\n            context.set('status', 1);\n            let a = flow.get('output_forward');\n            a = 1;\n            flow.set('output_forward', a);\n            return msg; \n        }\n        \n        else {\n            msg.payload = \"OFF\";\n            msg.color = \"red\";\n            context.set('status', 0);\n            let a = flow.get('output_forward');\n            a = 0;\n            flow.set('output_forward', a);\n            return msg;\n        }\n    }\n} \nreturn null;","outputs":1,"noerr":0,"x":750,"y":180,"wires":[["aeab85fd.59c748"]]},{"id":"fcecab99.021d18","type":"function","z":"be0109da.569e68","name":"CS Backward","func":"let status = context.get('status') || 0;\nlet isFirst = flow.get('initial');\nif (typeof(msg.payload) === 'object') {\n    let input = msg.payload[3];\n    if(isFirst === 1) {\n        if(input === 0) {\n            msg.payload = \"OFF\";\n            msg.color = \"red\";\n            let a = flow.get('output_backward');\n            a = 0;\n            flow.set('output_backward', a);\n            context.set('status', 0);\n            return msg;\n        }\n        else {\n            msg.payload = \"ON\";\n            msg.color = \"lime\";\n            let a = flow.get('output_backward');\n            a = 1;\n            flow.set('output_backward', a);\n            context.set('status', 1);\n            return msg;\n        }\n    }\n    else {\n        if(input === status) {\n            return null;\n        }\n        else if(input === 1) {\n           msg.payload = \"ON\";\n            msg.color = \"lime\";\n            context.set('status', 1);\n            let a = flow.get('output_backward');\n            a = 1;\n            flow.set('output_backward', a);\n            return msg; \n        }\n        \n        else {\n            msg.payload = \"OFF\";\n            msg.color = \"red\";\n            context.set('status', 0);\n            let a = flow.get('output_backward');\n            a = 0;\n            flow.set('output_backward', a);\n            return msg;\n        }\n    }\n} \nreturn null;","outputs":1,"noerr":0,"x":760,"y":220,"wires":[["ed8bf83.9926608"]]},{"id":"2b6e9602.8230ca","type":"function","z":"be0109da.569e68","name":"CS Start","func":"let status = context.get('status') || 0;\nlet isFirst = flow.get('initial');\nif (typeof(msg.payload) === 'object') {\n    let input = msg.payload[4];\n    if(isFirst === 1) {\n        if(input === 0) {\n            msg.payload = \"OFF\";\n            msg.color = \"red\";\n            let a = flow.get('sensor_start');\n            a = 0;\n            flow.set('sensor_start', a);\n            context.set('status', 0);\n            return msg;\n        }\n        else {\n            msg.payload = \"ON\";\n            msg.color = \"lime\";\n            let a = flow.get('sensor_start');\n            a = 1;\n            flow.set('sensor_start', a);\n            context.set('status', 1);\n            return msg;\n        }\n    }\n    else {\n        if(input === status) {\n            return null;\n        }\n        else if(input === 1) {\n           msg.payload = \"ON\";\n            msg.color = \"lime\";\n            context.set('status', 1);\n            let a = flow.get('sensor_start');\n            a = 1;\n            flow.set('sensor_start', a);\n            return msg; \n        }\n        \n        else {\n            msg.payload = \"OFF\";\n            msg.color = \"red\";\n            context.set('status', 0);\n            let a = flow.get('sensor_start');\n            a = 0;\n            flow.set('sensor_start', a);\n            return msg;\n        }\n    }\n} \nreturn null;","outputs":1,"noerr":0,"x":740,"y":260,"wires":[["992f07ee.152c38"]]},{"id":"dc3ec576.3c3e48","type":"function","z":"be0109da.569e68","name":"CS Metal","func":"let status = context.get('status') || 0;\nlet isFirst = flow.get('initial');\nif (typeof(msg.payload) === 'object') {\n    let input = msg.payload[5];\n    if(isFirst === 1) {\n        if(input === 0) {\n            msg.payload = \"OFF\";\n            msg.color = \"red\";\n            let a = flow.get('sensor_metal');\n            a = 0;\n            flow.set('sensor_metal', a);\n            context.set('status', 0);\n            return msg;\n        }\n        else {\n            msg.payload = \"ON\";\n            msg.color = \"lime\";\n            let a = flow.get('sensor_metal');\n            a = 1;\n            flow.set('sensor_metal', a);\n            context.set('status', 1);\n            return msg;\n        }\n    }\n    else {\n        if(input === status) {\n            return null;\n        }\n        else if(input === 1) {\n           msg.payload = \"ON\";\n            msg.color = \"lime\";\n            context.set('status', 1);\n            let a = flow.get('sensor_metal');\n            a = 1;\n            flow.set('sensor_metal', a);\n            return msg; \n        }\n        \n        else {\n            msg.payload = \"OFF\";\n            msg.color = \"red\";\n            context.set('status', 0);\n            let a = flow.get('sensor_metal');\n            a = 0;\n            flow.set('sensor_metal', a);\n            return msg;\n        }\n    }\n} \nreturn null;","outputs":1,"noerr":0,"x":740,"y":300,"wires":[["7e71edd3.8dcad4"]]},{"id":"26b3e8fb.43c118","type":"function","z":"be0109da.569e68","name":"CS Nonmetal","func":"let status = context.get('status') || 0;\nlet isFirst = flow.get('initial');\nif (typeof(msg.payload) === 'object') {\n    let input = msg.payload[6];\n    if(isFirst === 1) {\n        if(input === 0) {\n            msg.payload = \"OFF\";\n            msg.color = \"red\";\n            let a = flow.get('sensor_nonmetal');\n            a = 0;\n            flow.set('sensor_nonmetal', a);\n            context.set('status', 0);\n            return msg;\n        }\n        else {\n            msg.payload = \"ON\";\n            msg.color = \"lime\";\n            let a = flow.get('sensor_nonmetal');\n            a = 1;\n            flow.set('sensor_nonmetal', a);\n            context.set('status', 1);\n            return msg;\n        }\n    }\n    else {\n        if(input === status) {\n            return null;\n        }\n        else if(input === 1) {\n           msg.payload = \"ON\";\n            msg.color = \"lime\";\n            context.set('status', 1);\n            let a = flow.get('sensor_nonmetal');\n            a = 1;\n            flow.set('sensor_nonmetal', a);\n            return msg; \n        }\n        \n        else {\n            msg.payload = \"OFF\";\n            msg.color = \"red\";\n            context.set('status', 0);\n            let a = flow.get('sensor_nonmetal');\n            a = 0;\n            flow.set('sensor_nonmetal', a);\n            return msg;\n        }\n    }\n} \nreturn null;","outputs":1,"noerr":0,"x":750,"y":340,"wires":[["d2d1b46b.4b8a08"]]},{"id":"7c3c590d.e5d738","type":"function","z":"be0109da.569e68","name":"CS Counter","func":"let status = context.get('status') || 0;\nlet isFirst = flow.get('initial');\nif (typeof(msg.payload) === 'object') {\n    let input = msg.payload[7];\n    if(isFirst === 1) {\n        if(input === 0) {\n            msg.payload = \"OFF\";\n            msg.color = \"red\";\n            let a = flow.get('sensor_counter');\n            a = 0;\n            flow.set('sensor_counter', a);\n            context.set('status', 0);\n            return msg;\n        }\n        else {\n            msg.payload = \"ON\";\n            msg.color = \"lime\";\n            let a = flow.get('sensor_counter');\n            a = 1;\n            flow.set('sensor_counter', a);\n            context.set('status', 1);\n            return msg;\n        }\n    }\n    else {\n        if(input === status) {\n            return null;\n        }\n        else if(input === 1) {\n           msg.payload = \"ON\";\n            msg.color = \"lime\";\n            context.set('status', 1);\n            let a = flow.get('sensor_counter');\n            a = 1;\n            flow.set('sensor_counter', a);\n            return msg; \n        }\n        \n        else {\n            msg.payload = \"OFF\";\n            msg.color = \"red\";\n            context.set('status', 0);\n            let a = flow.get('sensor_counter');\n            a = 0;\n            flow.set('sensor_counter', a);\n            return msg;\n        }\n    }\n} \nreturn null;","outputs":1,"noerr":0,"x":750,"y":380,"wires":[["52103dfe.0e5404"]]},{"id":"c3954f32.7211e","type":"function","z":"be0109da.569e68","name":"CS Out","func":"let status = context.get('status') || 0;\nlet isFirst = flow.get('initial');\nif (typeof(msg.payload) === 'object') {\n    let input = msg.payload[8];\n    if(isFirst === 1) {\n        if(input === 0) {\n            msg.payload = \"OFF\";\n            msg.color = \"red\";\n            let a = flow.get('sensor_out');\n            a = 0;\n            flow.set('sensor_out', a);\n            context.set('status', 0);\n            return msg;\n        }\n        else {\n            msg.payload = \"ON\";\n            msg.color = \"lime\";\n            let a = flow.get('sensor_out');\n            a = 1;\n            flow.set('sensor_out', a);\n            context.set('status', 1);\n            return msg;\n        }\n    }\n    else {\n        if(input === status) {\n            return null;\n        }\n        else if(input === 1) {\n           msg.payload = \"ON\";\n            msg.color = \"lime\";\n            context.set('status', 1);\n            let a = flow.get('sensor_out');\n            a = 1;\n            flow.set('sensor_out', a);\n            return msg; \n        }\n        \n        else {\n            msg.payload = \"OFF\";\n            msg.color = \"red\";\n            context.set('status', 0);\n            let a = flow.get('sensor_out');\n            a = 0;\n            flow.set('sensor_out', a);\n            return msg;\n        }\n    }\n} \nreturn null;","outputs":1,"noerr":0,"x":740,"y":420,"wires":[["f96291f.a02bc7"]]},{"id":"948befb9.6ca9a","type":"function","z":"be0109da.569e68","name":"Queue","func":"let que = context.get('queue') || [false,false,true,false];\nif(que.length === 0){\n    msg.payload = \"EMPTY QUEUE!\";\n    que = [false,false,true,false];\n    context.set('queue', que);\n    return msg;\n}\nlet out = que.shift();\ncontext.set('queue', que);\nmsg.payload = out;\nreturn msg;\n//que.push(<entity>) => \n//adds element to the end of an array\n//returns length of an array\n//\n//que.pop() => removes last element from an array\n//returns last element from an array\n//\n//que.shift() => remove first element from an array\n//returns first element from an array\n//\n//que.ushift(<entity>) => \n//adds element to the beginning of an array\n//returns length of an array","outputs":1,"noerr":0,"x":890,"y":20,"wires":[[]]},{"id":"167ff9f0.445346","type":"ui_button","z":"be0109da.569e68","name":"enable","group":"3fe6e50d.99024a","order":2,"width":"3","height":"1","passthru":false,"label":"ENABLE","tooltip":"","color":"black","bgcolor":"orange","icon":"","payload":"1","payloadType":"num","topic":"button/enable","x":70,"y":1120,"wires":[["1295700d.a3aeb"]]},{"id":"a6aafe3e.306b2","type":"ui_button","z":"be0109da.569e68","name":"backward","group":"3fe6e50d.99024a","order":15,"width":"3","height":"1","passthru":false,"label":"BACKWARD","tooltip":"","color":"","bgcolor":"","icon":"","payload":"1","payloadType":"num","topic":"button/backward","x":80,"y":1320,"wires":[["e454741a.4c4cb8"]]},{"id":"e1f8a77e.3841f8","type":"ui_button","z":"be0109da.569e68","name":"forward","group":"3fe6e50d.99024a","order":13,"width":"3","height":"1","passthru":false,"label":"FORWARD","tooltip":"","color":"","bgcolor":"","icon":"","payload":"1","payloadType":"num","topic":"button/forward","x":80,"y":1280,"wires":[["351e77c6.003888"]]},{"id":"3630ffd5.bd62f","type":"ui_button","z":"be0109da.569e68","name":"main","group":"3fe6e50d.99024a","order":11,"width":"3","height":"1","passthru":true,"label":"MAIN","tooltip":"","color":"","bgcolor":"","icon":"","payload":"1","payloadType":"num","topic":"button/main","x":70,"y":1080,"wires":[["c1f2ae2b.c5455"]]},{"id":"351e77c6.003888","type":"function","z":"be0109da.569e68","name":"Distribution Forward","func":"let current = flow.get('output_forward');\n\n/*if(msg.topic === \"reset/system\") {\n    msg.payload = {\n            value: 0,\n            'fc': 6,\n            'unitid': 1,\n            'address': 16386 ,\n            'quantity': 1\n        }\n        return msg;\n}*/\nif(flow.get('auto') === 0 && flow.get('output_backward') === 0) {\n    if(current === 1) {\n        msg.payload = {\n            value: 0,\n            'fc': 6,\n            'unitid': 1,\n            'address': 16386 ,\n            'quantity': 1\n        }\n        flow.set('output_forward', 0);\n        return msg;\n    }\n    else {\n        msg.payload = {\n            value: 1,\n            'fc': 6,\n            'unitid': 1,\n            'address': 16386 ,\n            'quantity': 1\n        }\n        flow.set('output_forward', 1);\n        return msg;\n    }\n}\n\nif(flow.get('auto') === 1 && msg.forward === 1) {\n    if(current === 0) {\n        msg.payload = {\n            value: 1,\n            'fc': 6,\n            'unitid': 1,\n            'address': 16386 ,\n            'quantity': 1\n        }\n        flow.set('output_forward', 1);\n        return msg;\n    }\n}\n\nif(flow.get('auto') === 1 && msg.forward === 0) {\n    if(current === 1) {\n        msg.payload = {\n            value: 0,\n            'fc': 6,\n            'unitid': 1,\n            'address': 16386 ,\n            'quantity': 1\n        }\n        flow.set('output_forward', 0);\n        return msg;\n    }\n}","outputs":1,"noerr":0,"x":300,"y":1280,"wires":[["3d824424.dea4ec"]]},{"id":"c1f2ae2b.c5455","type":"function","z":"be0109da.569e68","name":"Main Button","func":"let current = flow.get('output_main');\n/*if(msg.topic === \"reset/system\") {\n   flow.set('status_sensor', 0);\n        msg.payload = {\n            value: 0,\n            'fc': 6,\n            'unitid': 1,\n            'address': 16385 ,\n            'quantity': 1\n        }\n        return msg; \n}*/\nlet auto = flow.get('auto');\nif(auto === 0) {\n    if(current === 1) {\n        //flow.set('status_sensor', 0);\n        msg.payload = {\n            value: 0,\n            'fc': 6,\n            'unitid': 1,\n            'address': 16385 ,\n            'quantity': 1\n        }\n        flow.set('output_main', 0);\n        return msg;\n    }\n    else {\n        msg.payload = {\n            value: 1,\n            'fc': 6,\n            'unitid': 1,\n            'address': 16385 ,\n            'quantity': 1\n        }\n        flow.set('output_main', 1);\n        return msg;\n    }\n}\nif(msg.topic === \"server/main_start\" && auto === 1 && msg.main === 1) {\n    if(current === 0) {\n        msg.payload = {\n            value: 1,\n            'fc': 6,\n            'unitid': 1,\n            'address': 16385 ,\n            'quantity': 1\n        }\n        flow.set('output_main', 1);\n        return msg;\n    }\n}\nif(msg.topic === \"server/main_stop\" && msg.main === 0 && auto === 1) {\n    if(current === 1) {\n        msg.payload = {\n            value: 0,\n            'fc': 6,\n            'unitid': 1,\n            'address': 16385 ,\n            'quantity': 1\n        }\n        flow.set('output_main', 0);\n        return msg;\n    }\n}","outputs":1,"noerr":0,"x":270,"y":1080,"wires":[["3d824424.dea4ec"]]},{"id":"ec44da67.eca5e8","type":"function","z":"be0109da.569e68","name":"Start Sensor","func":"let counter = flow.get('sensor_start') || 0;\n\nif(counter === 0) {\n    msg.payload = {\n        'value': 1,\n        'fc': 6,\n        'unitid': 1,\n        'address': 16388,\n        'quantity': 1\n    }\n    return msg;\n}\nelse {\n    msg.payload = {\n        'value': 0,\n        'fc': 6,\n        'unitid': 1,\n        'address': 16388,\n        'quantity': 1\n    }\n    return msg;\n}","outputs":1,"noerr":0,"x":270,"y":440,"wires":[["3d824424.dea4ec"]]},{"id":"2221ba3e.a82a16","type":"function","z":"be0109da.569e68","name":"Metal Sensor","func":"let counter = flow.get('sensor_metal');\nif(counter === 0) {\n    msg.payload = {\n        'value': 1,\n        'fc': 6,\n        'unitid': 1,\n        'address': 16389,\n        'quantity': 1\n        }\n    return msg;\n}\nelse {\n    msg.payload = {\n        'value': 0,\n        'fc': 6,\n        'unitid': 1,\n        'address': 16389,\n        'quantity': 1\n    }\n    return msg;\n}","outputs":1,"noerr":0,"x":270,"y":480,"wires":[["3d824424.dea4ec"]]},{"id":"3ae105c1.2e041a","type":"function","z":"be0109da.569e68","name":"NonMetal Sensor","func":"let counter = flow.get('sensor_nonmetal');\nif(counter === 0) {\n    msg.payload = {\n        'value': 1,\n        'fc': 6,\n        'unitid': 1,\n        'address': 16390,\n        'quantity': 1\n        }\n    return msg;\n}\nelse {\n    msg.payload = {\n        'value': 0,\n        'fc': 6,\n        'unitid': 1,\n        'address': 16390,\n        'quantity': 1\n    }\n    return msg;\n}","outputs":1,"noerr":0,"x":290,"y":520,"wires":[["3d824424.dea4ec"]]},{"id":"42c438d.791d5c8","type":"function","z":"be0109da.569e68","name":"Counter Sensor","func":"let counter = flow.get('sensor_counter');\nif(counter === 0) {\n    msg.payload = {\n        'value': 1,\n        'fc': 6,\n        'unitid': 1,\n        'address': 16391,\n        'quantity': 1\n        }\n    return msg;\n}\nelse {\n    msg.payload = {\n        'value': 0,\n        'fc': 6,\n        'unitid': 1,\n        'address': 16391,\n        'quantity': 1\n    }\n    return msg;\n}","outputs":1,"noerr":0,"x":280,"y":560,"wires":[["3d824424.dea4ec"]]},{"id":"e528d039.10e8e","type":"function","z":"be0109da.569e68","name":"Out Sensor","func":"let counter = flow.get('sensor_out');\nif(counter === 0) {\n    msg.payload = {\n        'value': 1,\n        'fc': 6,\n        'unitid': 1,\n        'address': 16392,\n        'quantity': 1\n        }\n    return msg;\n}\nelse{\n    msg.payload = {\n        'value': 0,\n        'fc': 6,\n        'unitid': 1,\n        'address': 16392,\n        'quantity': 1\n    }\n    return msg;\n}","outputs":1,"noerr":0,"x":270,"y":600,"wires":[["3d824424.dea4ec"]]},{"id":"86f7d946.0d2228","type":"ui_text","z":"be0109da.569e68","group":"3fe6e50d.99024a","order":1,"width":"3","height":"1","name":"output/enable","label":"Enable","format":"<font color={{msg.color}} ><i class=\"fa fa-circle\" style=\"font-size:24px;\"></i></font>","layout":"row-spread","x":960,"y":100,"wires":[]},{"id":"d6d84df7.fa5b6","type":"ui_text","z":"be0109da.569e68","group":"3fe6e50d.99024a","order":10,"width":"3","height":"1","name":"output/main","label":"Main Band","format":"<font color={{msg.color}} ><i class=\"fa fa-circle\" style=\"font-size:24px;\"></i></font>","layout":"row-spread","x":950,"y":140,"wires":[]},{"id":"aeab85fd.59c748","type":"ui_text","z":"be0109da.569e68","group":"3fe6e50d.99024a","order":12,"width":"3","height":"1","name":"output/forward","label":"Distribution Forward","format":"<font color={{msg.color}} ><i class=\"fa fa-circle\" style=\"font-size:24px;\"></i></font>","layout":"row-spread","x":960,"y":180,"wires":[]},{"id":"ed8bf83.9926608","type":"ui_text","z":"be0109da.569e68","group":"3fe6e50d.99024a","order":14,"width":"3","height":"1","name":"output/backward","label":"Distribution Backward","format":"<font color={{msg.color}} ><i class=\"fa fa-circle\" style=\"font-size:24px;\"></i></font>","layout":"row-spread","x":960,"y":220,"wires":[]},{"id":"992f07ee.152c38","type":"ui_text","z":"be0109da.569e68","group":"ec159c5f.67f9f","order":1,"width":"3","height":"1","name":"sensor/start","label":"Start","format":"<font color={{msg.color}} ><i class=\"fa fa-circle\" style=\"font-size:24px;\"></i></font>","layout":"row-spread","x":950,"y":260,"wires":[]},{"id":"7e71edd3.8dcad4","type":"ui_text","z":"be0109da.569e68","group":"ec159c5f.67f9f","order":3,"width":"3","height":"1","name":"sensor/metal","label":"Metal","format":"<font color={{msg.color}} ><i class=\"fa fa-circle\" style=\"font-size:24px;\"></i></font>","layout":"row-spread","x":950,"y":300,"wires":[]},{"id":"d2d1b46b.4b8a08","type":"ui_text","z":"be0109da.569e68","group":"ec159c5f.67f9f","order":5,"width":"3","height":"1","name":"sensor/nonmetal","label":"Nonmetal","format":"<font color={{msg.color}} ><i class=\"fa fa-circle\" style=\"font-size:24px;\"></i></font>","layout":"row-spread","x":960,"y":340,"wires":[]},{"id":"52103dfe.0e5404","type":"ui_text","z":"be0109da.569e68","group":"ec159c5f.67f9f","order":7,"width":"3","height":"1","name":"sensor/counter","label":"Counter","format":"<font color={{msg.color}} ><i class=\"fa fa-circle\" style=\"font-size:24px;\"></i></font>","layout":"row-spread","x":960,"y":380,"wires":[]},{"id":"f96291f.a02bc7","type":"ui_text","z":"be0109da.569e68","group":"ec159c5f.67f9f","order":9,"width":"3","height":"1","name":"sensor/out","label":"Out","format":"<font color={{msg.color}} ><i class=\"fa fa-circle\" style=\"font-size:24px;\"></i></font>","layout":"row-spread","x":950,"y":420,"wires":[]},{"id":"9382bae8.35bb88","type":"ui_button","z":"be0109da.569e68","name":"auto/man","group":"3fe6e50d.99024a","order":17,"width":"3","height":"1","passthru":false,"label":"Auto","tooltip":"","color":"yellow","bgcolor":"","icon":"","payload":"1","payloadType":"num","topic":"auto","x":100,"y":1600,"wires":[["11374c82.bd73a3"]]},{"id":"d5d7d661.7c75f8","type":"ui_text","z":"be0109da.569e68","group":"3fe6e50d.99024a","order":16,"width":"3","height":"1","name":"auto/man","label":"Auto","format":"<font color={{msg.color}} ><i class=\"fa fa-circle\" style=\"font-size:24px;\"></i></font>","layout":"row-spread","x":300,"y":1600,"wires":[]},{"id":"f5a1e842.cef9a8","type":"ui_button","z":"be0109da.569e68","name":"sensor/start","group":"ec159c5f.67f9f","order":2,"width":"3","height":"1","passthru":false,"label":"SENSOR START","tooltip":"","color":"","bgcolor":"","icon":"","payload":"1","payloadType":"num","topic":"button/start","x":90,"y":440,"wires":[["ec44da67.eca5e8"]]},{"id":"2dccf1fa.58a5ae","type":"ui_button","z":"be0109da.569e68","name":"sensor/metal","group":"ec159c5f.67f9f","order":4,"width":"3","height":"1","passthru":false,"label":"SENSOR METAL","tooltip":"","color":"","bgcolor":"","icon":"","payload":"1","payloadType":"num","topic":"button/metal","x":90,"y":480,"wires":[["2221ba3e.a82a16"]]},{"id":"98b2fe82.2663","type":"ui_button","z":"be0109da.569e68","name":"sensor/nonmetal","group":"ec159c5f.67f9f","order":6,"width":"3","height":"1","passthru":false,"label":"SENSOR NONMETAL","tooltip":"","color":"","bgcolor":"","icon":"","payload":"1","payloadType":"num","topic":"button/nonmetal","x":100,"y":520,"wires":[["3ae105c1.2e041a"]]},{"id":"ef16e7a9.a8f298","type":"ui_button","z":"be0109da.569e68","name":"sensor/counter","group":"ec159c5f.67f9f","order":8,"width":"3","height":"1","passthru":false,"label":"SENSOR COUNTER","tooltip":"","color":"","bgcolor":"","icon":"","payload":"1","payloadType":"num","topic":"button/counter","x":100,"y":560,"wires":[["42c438d.791d5c8"]]},{"id":"520d2c3d.95ce44","type":"ui_button","z":"be0109da.569e68","name":"sensor/out","group":"ec159c5f.67f9f","order":10,"width":"3","height":"1","passthru":false,"label":"SENSOR OUT","tooltip":"","color":"","bgcolor":"","icon":"","payload":"1","payloadType":"num","topic":"","x":90,"y":600,"wires":[["e528d039.10e8e"]]},{"id":"97bd4724.ea7cd8","type":"function","z":"be0109da.569e68","name":"Input Matrix","func":"if(msg.topic === \"read\"){\nlet counter = flow.get('counter') || 0;\nif(counter === 0) {\n    counter += 1;\n    flow.set('counter', counter);\n    return [msg, null];\n}\nif(counter === 1) {\n    counter = 0;\n    flow.set('counter', counter);\n    return [null, msg];\n}\n}\nreturn null;","outputs":2,"noerr":0,"x":510,"y":20,"wires":[[],[]]},{"id":"30fd20d3.c3e52","type":"function","z":"be0109da.569e68","name":"Output Matrix","func":"// Initial on start\n//=====================================================================\n//msg.main = 0;\nlet status = context.get('status') || 0;\nlet isFirst = flow.get('initial');\nif (isFirst === 1 || msg.topic === \"system/reset\" || status === 0) {\n    flow.set('endPos', 0);\n    flow.set('templ_counter_start', 0);\n    flow.set('templ_counter_metal', 0);\n    flow.set('templ_counter_nonmetal', []);\n    flow.set('templ_counter_out', []);\n    flow.set('templ_counter_metal_out', 0);\n    flow.set('templ_counter_nonmetal_out', 0);\n    flow.set('flag_nonmetal_out', 0);\n    let metalCounter = global.get('counter_metal') || 0;\n    let nonmetalCounter = global.get('counter_nonmetal') || 0;\n    let totalCounter = global.get('counter_total') || 0;\n    let liftMetal = global.get('lift_metal_count') || 0;\n    let liftNonmetal = global.get('lift_nonmetal_count') || 0;\n    let startPos = flow.get('templ_counter_start') || 0;\n    let endPosMetal = flow.get('templ_counter_metal_out') || 0;\n    let endPosNonmetal = flow.get('templ_counter_nonmetal_out') || 0;\n    let endPos = flow.get('endPos') || 0;\n    endPos += (endPosMetal + endPosNonmetal);\n    flow.set('endPos', endPos);\n\n    context.set('status', 1);\n\n    msg.metal_count = metalCounter;\n    msg.nonmetal_count = nonmetalCounter;\n    msg.total_count = totalCounter;\n    msg.lift_metal_count = liftMetal;\n    msg.lift_nonmetal_count = liftNonmetal;\n    msg.start_pos = startPos;\n    msg.end_pos = endPos;\n    //global.set('system_reset', 0);\n\n    return [msg, msg, msg, null, null, null, msg, msg, msg, msg, null];\n}\n/*if(global.get('system_reset') === 0) {\n    while(true){\n        if(global.get('system_reset') === 1) {\n            break;\n        }\n    }\n    msg.payload = {\n    value: [1, 0, 0, 0],\n    'fc': 16,\n    'unitid': 1,\n    'address': 16384 ,\n    'quantity': 4\n    }\n    return msg;\n}*/\n\n// When lift limit is reached\n//=================================================================\nlet limitFlag = global.get('lift_limit_flag');\nlet liftMetal = global.get('lift_metal_count');\nlet liftNonmetal = global.get('lift_nonmetal_count');\nif (limitFlag === 1) {\n    return null;\n}\nlet limit = global.get('lift_limit');\nif(liftMetal === limit || liftNonmetal === limit) {\n    //firstlimit = context.get('firslimit') || false;\n    global.set('lift_limit_flag', 1);\n    msg.forward = 0;\n    msg.backward = 0;\n    msg.main = 0;\n    msg.topic = \"server/main_stop\";\n    msg.alarm = 1;\n    return [null, null, null, msg, msg, msg, null, null, null, null, msg];\n    //context.set('firstlimit', true);\n}\n//if (input === 0 && firstlimit === true) {\n//    context.set('firstlimit', false);\n//}\n\n\n// Work in mode auto\n//==================================================================\nif (flow.get('auto') === 1) {\n    msg.main_delay = false;\n    let start = flow.get('templ_counter_start') || 0;\n    let endPos = flow.get('endPos') || 0;\n    let metal = global.get('counter_metal') || 0;\n    let nonmetal = global.get('counter_nonmetal') || 0;\n    let total = global.get('counter_total') || 0;\n    liftMetal = global.get('lift_metal_count') || 0;\n    liftNonmetal = global.get('lift_nonmetal_count') || 0;\n\n    let firstmain = context.get('firstmain') || false;\n    if (flow.get('output_main') === 0) {\n        let input = msg.payload[4];\n        if (input === 1 && firstmain === false) {\n            /*msg.payload = {\n                value: 1,\n                'fc': 6,\n                'unitid': 1,\n                'address': 16385,\n                'quantity': 1\n            }*/\n            //start = flow.get('templ_counter_start') || 0;\n            start ++;\n            flow.set('templ_counter_start', start);\n            msg.start_pos = start;\n            msg.main = 1;\n            msg.topic = \"server/main_start\";\n            msg.alarm = 0;\n\n            context.set('firstmain', true);\n\n            return [null, null, null, msg, null, null, null, null, msg, null, msg];\n        }\n        if (input === 0 && firstmain === true) {\n            context.set('firstmain', false);\n        }\n    }\n\n\n// Load metal item queue\n//============================================================\n// Outputs =>\n// [metal, nonmetal, total, main, forward, backward, lift_metal, end, start, lift_nonmetal, limit]\n    let firstmetal = context.get('firstmetal') || false;\n    input = msg.payload[5];\n    if (input === 1 && firstmetal === false) {\n        let templ_metal = flow.get('templ_counter_metal') || 0;\n        templ_metal ++;\n        flow.set('templ_counter_metal', templ_metal);\n\n        metal++;\n        global.set('counter_metal', metal);\n        msg.metal_count = metal;\n        context.set('firstmetal', true);\n\n        return [msg, null, null, null, null, null, null, null, null, null, null];\n    }\n    if (input === 0 && firstmetal === true) {\n        context.set('firstmetal', false);\n    }\n\n// Load nonmetal item queue\n//=============================================================\n    let firstnonmetal = context.get('firstnonmetal') || false;\n    let materialType = 1;\n    input = msg.payload[6];\n    if (input === 1 && firstnonmetal === false) {\n        let templ_nonmetal = flow.get('templ_counter_nonmetal') || [];\n        let metalStatus = flow.get('templ_counter_metal') || 0;\n        if (metalStatus > 0) {\n            metalStatus -= 1;\n            flow.set('templ_counter_metal', metalStatus);\n        } else {\n            materialType = 0;\n            nonmetal++;\n            global.set('counter_nonmetal', nonmetal);\n            msg.nonmetal_count = nonmetal;\n        }\n        templ_nonmetal.push(materialType);\n        flow.set('templ_counter_nonmetal', templ_nonmetal);\n        msg.nonmetal_count = nonmetal;\n        context.set('firstnonmetal', true);\n\n        return [null, msg, null, null, null, null, null, null, null, null, null];\n    }\n    if (input === 0 && firstnonmetal === true) {\n        context.set('firstnonmetal', false);\n    }\n\n// Load total items count and control distribute and main bands\n//=======================================================================\n    //msg.material = \"none\";\n    let firsttotal = context.get('firsttotal') || false;\n    input = msg.payload[7];\n    let out = 0;\n    if (input === 1 && firsttotal === false) {\n        let nonmetalStatus = flow.get('templ_counter_nonmetal') || [];\n        if (nonmetalStatus.length > 0) {    // check for available material\n            //let end = flow.get('templ_counter_out') || 0;\n            out = nonmetalStatus.shift();   // assigns first element and decrease materials on nonmetal counter\n            flow.set('templ_counter_nonmetal', nonmetalStatus);\n\n            total++;                        // increase and set total counter\n            global.set('counter_total', total);\n\n            //let start = flow.get('templ_counter_start');    // decrease materials on start\n            if (start > 0) {\n                start -= 1;\n                flow.set('templ_counter_start', start);\n                msg.start_pos = start;\n            }\n\n            //msg.material = out; // ????????\n\n            if (out === 1) {                //  check for metal or nonmetal\n                //metal++;\n                //global.set('counter_metal', metal);\n                msg.forward = 1;\n                msg.forward_delay = false;\n                msg.backward = null;\n                msg.backward_delay = null;\n                endPosMetal = flow.get('templ_counter_metal_out') || 0;\n                endPosMetal ++;\n                flow.set('templ_counter_metal_out', endPosMetal);\n            } else {\n                //nonmetal++;\n                //global.set('counter_nonmetal', nonmetal);\n                msg.forward = null;\n                msg.forward_delay = null;\n                msg.backward = 1;\n                msg.backward_delay = false;\n                endPosNonmetal = flow.get('templ_counter_nonmetal_out') || 0;\n                endPosNonmetal ++;\n                flow.set('templ_counter_nonmetal_out', endPosNonmetal);\n            }\n            endPos = flow.get('endPos') || 0;\n            endPos ++;\n            flow.set('endPos', endPos);\n            msg.end_pos = endPos;\n\n\n\n            /*msg.main = 0;           // main stop\n            msg.main_delay = true;\n            msg.topic = \"server/stop\";*/\n\n            if (nonmetalStatus.length > 0) {\n                let next = nonmetalStatus[0];       // check for same material\n                if (next !== out) {\n                    // TODO: When next item is same as current\n                    msg.main = 0;           // main stop\n                    msg.main_delay = true;\n                    msg.topic = \"server/main_stop\";\n\n                }\n            }\n            else {\n                // TODO: when conveyor main band is empty\n                msg.main = 0;           // main stop\n                msg.main_delay = true;\n                msg.topic = \"server/main_stop\";\n            }\n\n            msg.total_count = total;        // total counts\n            msg.metal_count = metal;        // metal counts\n            msg.nonmetal_count = nonmetal;  // nonmetal counts\n\n            context.set('firsttotal', true);\n\n            return [msg, msg, msg, msg, msg, msg, null, msg, msg, null, null];\n        }\n\n    }\n    if (input === 0 && firsttotal === true) {\n        context.set('firsttotal', false);\n    }\n// Wait for metal out sensor\n//=======================================================================\n    let firstout = context.get('firstout') || false;\n    input = msg.payload[8];\n    if (input === 1 && firstout === false) {\n        msg.forward_delay = false;\n        let endMetalStatus = flow.get('templ_counter_metal_out') || 0;\n        if (endMetalStatus > 0) {\n            \n            endMetalStatus -= 1;\n            flow.set('templ_counter_metal_out', endMetalStatus);\n           \n            endPos = flow.get('endPos') || 0;\n            endPos -= 1;\n            flow.set('endPos', endPos);\n            msg.end_pos = endPos;\n\n            liftMetal = global.get('lift_metal_count') || 0;\n            liftMetal ++;\n            global.set('lift_metal_count', liftMetal);\n            msg.lift_metal_count = liftMetal;\n\n            if(endMetalStatus <= 0) {      // check for empty queue on out\n                msg.forward = 0;\n                msg.forward_delay = true;\n                msg.backward = null;\n                msg.backward_delay = null;\n            }\n\n            /*let available = flow.get('templ_counter_start') || 0;\n            msg.start_pos = available;\n            if(available > 0) {                            // check for material on conveyor\n                msg.main = 1;\n                msg.main_delay = false;\n                msg.topic = \"server/start\";\n            }\n            else {\n                msg.main = 0;\n                msg.topic = \"server/stop\";\n            }*/\n\n            context.set('firstout', true);\n\n            return [null, null, null, msg, msg, msg, msg, msg, null, null, null];\n        }\n    }\n\n    if (input === 0 && firstout === true) {\n        context.set('firstout', false);\n    }\n\n// Wait for nonmetal out sensor\n//=======================================================================\n    let secondout = context.get('secondout') || false;\n    input = flow.get('flag_nonmetal_out') || 0;\n    if (input > 0 && secondout === false) {\n        input -= 1;\n        flow.set('flag_nonmetal_out', input);\n        msg.backward_delay = false;\n            let endNonmetalStatus = flow.get('templ_counter_nonmetal_out') || 0;\n            if (endNonmetalStatus > 0) {\n                \n                endNonmetalStatus -= 1;\n                flow.set('templ_counter_nonmetal_out', endNonmetalStatus);\n                \n                endPos = flow.get('endPos') || 0;\n                endPos -= 1;\n                flow.set('endPos', endPos);\n                msg.end_pos = endPos;\n\n                liftNonmetal = global.get('lift_nonmetal_count') || 0;\n                liftNonmetal ++;\n                global.set('lift_nonmetal_count', liftNonmetal);\n                msg.lift_nonmetal_count = liftNonmetal;\n\n                if(endNonmetalStatus <= 0) {      // check for empty queue on out\n                    msg.forward = null;\n                    msg.forward_delay = null;\n                    msg.backward = 0;\n                    msg.backward_delay = true;\n                }\n                /*let available = flow.get('templ_counter_start') || 0;\n                msg.start_pos = available;\n                if(available > 0) {                            // check for material on conveyor\n                    msg.main = 1;\n                    msg.topic = \"server/start\";\n                }\n                else {\n                    msg.main = 0;\n                    msg.topic = \"server/stop\";\n                }*/\n\n                context.set('secondout', true);\n\n                return [null, null, null, msg, msg, msg, null, msg, null, msg, null];\n            }\n        }\n\n    if (input === 0 && secondout === true) {\n        context.set('secondout', false);\n    }\n}","outputs":11,"noerr":0,"x":600,"y":680,"wires":[["3a6c4135.1f721e"],["9a90850.979d578"],["c255c282.23f4d"],["dcf06812.23f828"],["7fc3ce0e.72aa4"],["135298eb.3f8c47","7ca2b06.68c425"],["9ca59884.bcca68"],["8f9e7924.0eb858"],["82f4c5c7.13f188"],["70a56e34.bcbc4"],["57217af0.00ed84"]]},{"id":"c255c282.23f4d","type":"ui_text","z":"be0109da.569e68","group":"85a74b37.905988","order":3,"width":"6","height":"1","name":"totalcounter","label":"TOTAL COUNT","format":"{{msg.total_count}}","layout":"col-center","x":950,"y":540,"wires":[]},{"id":"3a6c4135.1f721e","type":"ui_text","z":"be0109da.569e68","group":"85a74b37.905988","order":4,"width":"3","height":"1","name":"metalcounter","label":"METAL COUNT","format":"{{msg.metal_count}}","layout":"row-spread","x":950,"y":460,"wires":[]},{"id":"9a90850.979d578","type":"ui_text","z":"be0109da.569e68","group":"85a74b37.905988","order":6,"width":"3","height":"1","name":"nonmetalcounter","label":"NONMETAL COUNT","format":"{{msg.nonmetal_count}}","layout":"row-spread","x":970,"y":500,"wires":[]},{"id":"3ab8e419.8c4abc","type":"ui_button","z":"be0109da.569e68","name":"reset","group":"3fe6e50d.99024a","order":18,"width":"6","height":"1","passthru":false,"label":"RESET","tooltip":"","color":"black","bgcolor":"red","icon":"","payload":"0","payloadType":"num","topic":"system/reset","x":70,"y":1200,"wires":[["84738252.9eda6"]]},{"id":"e454741a.4c4cb8","type":"function","z":"be0109da.569e68","name":"Distribution Backward","func":"let current = flow.get('output_backward');\n\n/*if(msg.topic === \"reset/system\") {\n    msg.payload = {\n            value: 0,\n            'fc': 6,\n            'unitid': 1,\n            'address': 16387 ,\n            'quantity': 1\n        }\n        return msg;\n}*/\nlet auto = flow.get('auto') || 0;\n\nif(auto === 0 && flow.get('output_forward') === 0) {\n    if(current === 1) {\n        msg.payload = {\n            value: 0,\n            'fc': 6,\n            'unitid': 1,\n            'address': 16387 ,\n            'quantity': 1\n        }\n        flow.set('output_backward', 0);\n        return msg;\n    }\n    else {\n        msg.payload = {\n            value: 1,\n            'fc': 6,\n            'unitid': 1,\n            'address': 16387 ,\n            'quantity': 1\n        }\n        flow.set('output_backward', 1);\n        return msg;\n    }\n}\nif(auto === 1 && msg.backward === 1) {\n    if(current === 0) {\n        msg.payload = {\n            value: 1,\n            'fc': 6,\n            'unitid': 1,\n            'address': 16387 ,\n            'quantity': 1\n        }\n        flow.set('output_backward', 1);\n        return msg;\n    }\n}\n\nif(auto === 1 && msg.backward === 0) {\n    if(current === 1) {\n        msg.payload = {\n            value: 0,\n            'fc': 6,\n            'unitid': 1,\n            'address': 16387 ,\n            'quantity': 1\n        }\n        flow.set('output_backward', 0);\n        return msg;\n    }\n}","outputs":1,"noerr":0,"x":300,"y":1320,"wires":[["3d824424.dea4ec"]]},{"id":"6311ecc4.3c49c4","type":"debug","z":"be0109da.569e68","name":"ERROR","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":240,"y":20,"wires":[]},{"id":"238df011.c85d9","type":"inject","z":"be0109da.569e68","name":"","topic":"","payload":"1","payloadType":"num","repeat":"","crontab":"","once":true,"onceDelay":0.1,"x":90,"y":160,"wires":[["108bba81.e7a0b5"]]},{"id":"51cd1afe.259884","type":"catch","z":"be0109da.569e68","name":"CATCH","scope":null,"uncaught":false,"x":70,"y":20,"wires":[["6311ecc4.3c49c4"]]},{"id":"487ea2d4.5d7b6c","type":"debug","z":"be0109da.569e68","name":"debuging/message","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":330,"y":680,"wires":[]},{"id":"fe7aaed4.1d4bd","type":"delay","z":"be0109da.569e68","name":"","pauseType":"delay","timeout":"10","timeoutUnits":"milliseconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":270,"y":380,"wires":[["30fd20d3.c3e52"]]},{"id":"108bba81.e7a0b5","type":"function","z":"be0109da.569e68","name":"Initial","func":"if(msg.payload === 1) {\n    flow.set('initial', 1);\n    \n}\nelse {\n    flow.set('initial', 0);\n    return null;\n}\nreturn msg;","outputs":1,"noerr":0,"x":230,"y":160,"wires":[["6c3c6460.7ab4dc"]]},{"id":"6c3c6460.7ab4dc","type":"change","z":"be0109da.569e68","name":"","rules":[{"t":"change","p":"payload","pt":"msg","from":"1","fromt":"num","to":"0","tot":"num"}],"action":"","property":"","from":"","to":"","reg":false,"x":140,"y":100,"wires":[["29ca9fa3.a04df"]]},{"id":"29ca9fa3.a04df","type":"delay","z":"be0109da.569e68","name":"","pauseType":"delay","timeout":"500","timeoutUnits":"milliseconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":330,"y":100,"wires":[["108bba81.e7a0b5"]]},{"id":"3d824424.dea4ec","type":"function","z":"be0109da.569e68","name":"Debuging Buffer","func":"\nreturn msg;","outputs":1,"noerr":0,"x":320,"y":720,"wires":[["c2755e94.d1123","487ea2d4.5d7b6c"]]},{"id":"ee2f051f.cd29c8","type":"comment","z":"be0109da.569e68","name":"Catch Group","info":"Catchig every error in groups.","x":90,"y":60,"wires":[]},{"id":"6a68f693.182578","type":"comment","z":"be0109da.569e68","name":"Initial Group","info":"Initializing displays with I/O data at startup.","x":90,"y":200,"wires":[]},{"id":"22051a36.2eb696","type":"comment","z":"be0109da.569e68","name":"Read Group","info":"Reads data from the server.","x":90,"y":380,"wires":[]},{"id":"baf6c2a3.f4cb1","type":"comment","z":"be0109da.569e68","name":"Write Group Outputs","info":"Writes data to the server's outputs.","x":110,"y":1360,"wires":[]},{"id":"11374c82.bd73a3","type":"function","z":"be0109da.569e68","name":"auto/man settings","func":"if(msg.topic === \"system/reset\") {\n    flow.set('auto', 0);\n    msg.color = \"red\";\n    return msg;\n}\nlet color = \"\";\nlet statusAuto = 0;\nlet isFirst = flow.get('initial');\nif(isFirst === 1) {\n    flow.set('auto', statusAuto);\n    msg.color = \"red\";\n    return msg;\n}\ninput = msg.payload;\nif(input === 1) {\n    statusAuto = flow.get('auto');\n    if(statusAuto === 1) {\n        statusAuto = 0;\n        color = \"red\";\n    }\n    else if(statusAuto === 0) {\n        statusAuto = 1;\n        color = \"lime\";\n    }\n    \n    flow.set('auto', statusAuto);\n    msg.color = color;\n}\nreturn msg;","outputs":1,"noerr":0,"x":130,"y":1560,"wires":[["d5d7d661.7c75f8"]]},{"id":"abc8b194.425e6","type":"inject","z":"be0109da.569e68","name":"Reset Auto","topic":"","payload":"1","payloadType":"num","repeat":"","crontab":"","once":true,"onceDelay":0.1,"x":110,"y":1640,"wires":[["11374c82.bd73a3"]]},{"id":"1295700d.a3aeb","type":"function","z":"be0109da.569e68","name":"Enable Button","func":"/*if(msg.topic === \"reset/system\") {\n   msg.payload = {\n        value: 0,\n        'fc': 6,\n        'unitid': 1,\n        'address': 16384 ,\n        'quantity': 1\n    }\n    return msg; \n}*/\nlet current = flow.get('output_enable');\nif(current === 1) {\n    msg.payload = {\n        value: 0,\n        'fc': 6,\n        'unitid': 1,\n        'address': 16384 ,\n        'quantity': 1\n    }\n    flow.set('output_enable', 0);\n    return msg;\n}\nelse if(current === 0) {\n    msg.payload = {\n        value: 1,\n        'fc': 6,\n        'unitid': 1,\n        'address': 16384 ,\n        'quantity': 1\n    }\n    flow.set('output_enable', 0);\n    return msg;\n}","outputs":1,"noerr":0,"x":260,"y":1140,"wires":[["3d824424.dea4ec"]]},{"id":"84738252.9eda6","type":"function","z":"be0109da.569e68","name":"Reset","func":"global.set('counter_metal', 0);\nglobal.set('counter_nonmetal', 0);\nglobal.set('counter_total', 0);\n\nflow.set('templ_counter_metal', 0);\nflow.set('flag_nonmetal_out', 0);\n\nlet tcn = flow.get('templ_counter_nonmetal') || [];\ntcn.splice(0,tcn.length);\nflow.set('templ_counter_nonmetal', tcn);\n\nglobal.set('counter_metal', 0);\nglobal.get('counter_metal');\nglobal.set('counter_nonmetal', 0);\nglobal.get('counter_nonmetal');\nglobal.set('counter_total', 0);\nglobal.get('counter_total');\nglobal.set('lift_metal_count', 0);\nglobal.get('lift_metal_count');\nglobal.set('lift_nonmetal_count', 0);\nglobal.get('lift_nonmetal_count');\n\nflow.set('output_main', 0);\nflow.set('output_forward', 0);\nflow.set('output_backward', 0);\n\nglobal.set('lift_limit_flag', 0);\nglobal.set('system_reset', 1);\n\n/*msg.payload = { \n    value: 0,\n    'fc': 6,\n    'unitid': 1,\n    'address': 16384 ,\n    'quantity': 1\n}*/\nmsg.payload = {\n    value: [0, 0, 0, 0],\n    'fc': 16,\n    'unitid': 1,\n    'address': 16384 ,\n    'quantity': 4\n    }\nreturn msg;","outputs":1,"noerr":0,"x":230,"y":1200,"wires":[["11374c82.bd73a3","3d824424.dea4ec","30fd20d3.c3e52"]]},{"id":"927dce0.6cf613","type":"comment","z":"be0109da.569e68","name":"Write Group Inputs","info":"Writes data to the server's inputs.","x":110,"y":640,"wires":[]},{"id":"d62bbd41.48945","type":"delay","z":"be0109da.569e68","name":"","pauseType":"delay","timeout":"2","timeoutUnits":"seconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":1080,"y":620,"wires":[["c1f2ae2b.c5455"]]},{"id":"7fc3ce0e.72aa4","type":"delay","z":"be0109da.569e68","name":"","pauseType":"delay","timeout":"50","timeoutUnits":"milliseconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":1090,"y":680,"wires":[["7f7bd07.19bc1b"]]},{"id":"7ca2b06.68c425","type":"delay","z":"be0109da.569e68","name":"","pauseType":"delay","timeout":"50","timeoutUnits":"milliseconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":1090,"y":820,"wires":[["c47b2175.8d6ba8"]]},{"id":"ed83eaaf.83d1f8","type":"debug","z":"be0109da.569e68","name":"input","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":250,"y":200,"wires":[]},{"id":"dcf06812.23f828","type":"switch","z":"be0109da.569e68","name":"main_control","property":"main_delay","propertyType":"msg","rules":[{"t":"false"},{"t":"true"}],"checkall":"true","repair":false,"outputs":2,"x":1090,"y":580,"wires":[["c1f2ae2b.c5455"],["d62bbd41.48945"]]},{"id":"1755c038.2b5d7","type":"modbustcp-read","z":"be0109da.569e68","name":"","topic":"read1","dataType":"HoldingRegister","adr":"16384","quantity":"9","rate":"50","rateUnit":"ms","server":"a8631049.a5e76","ieeeType":"off","ieeeBE":true,"x":90,"y":320,"wires":[["960108c1.4f5768","fe7aaed4.1d4bd","84cd4e46.3abcc","ff5e3785.68c1b8","21cf992a.c55046","fcecab99.021d18","2b6e9602.8230ca","dc3ec576.3c3e48","26b3e8fb.43c118","7c3c590d.e5d738","c3954f32.7211e"]]},{"id":"82f4c5c7.13f188","type":"ui_text","z":"be0109da.569e68","group":"85a74b37.905988","order":8,"width":"3","height":"1","name":"start/position","label":"START","format":"{{msg.start_pos}}","layout":"row-spread","x":1270,"y":1260,"wires":[]},{"id":"9ca59884.bcca68","type":"ui_text","z":"be0109da.569e68","group":"85a74b37.905988","order":5,"width":"3","height":"1","name":"lift/metalcounter","label":"LIFT-METAL","format":"{{msg.lift_metal_count}}","layout":"row-spread","x":1280,"y":1180,"wires":[]},{"id":"8f9e7924.0eb858","type":"ui_text","z":"be0109da.569e68","group":"85a74b37.905988","order":9,"width":"3","height":"1","name":"end/position","label":"END","format":"{{msg.end_pos}}","layout":"row-spread","x":1270,"y":1220,"wires":[]},{"id":"135298eb.3f8c47","type":"delay","z":"be0109da.569e68","name":"","pauseType":"delay","timeout":"3","timeoutUnits":"seconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":1080,"y":960,"wires":[["4e07ad3b.c6cc74"]]},{"id":"70a56e34.bcbc4","type":"ui_text","z":"be0109da.569e68","group":"85a74b37.905988","order":7,"width":"3","height":"1","name":"lift/nonmetalcounter","label":"LIFT-NONMETAL","format":"{{msg.lift_nonmetal_count}}","layout":"row-spread","x":1290,"y":1300,"wires":[]},{"id":"e1574238.3fba3","type":"ui_numeric","z":"be0109da.569e68","name":"lift_limit","label":"Lift limit","tooltip":"","group":"3fe6e50d.99024a","order":18,"width":0,"height":0,"passthru":true,"topic":"limit/display","format":"{{value}}","min":"1","max":"3","step":1,"x":120,"y":1720,"wires":[["83fc6f13.494de"]]},{"id":"d0c93996.9eb038","type":"debug","z":"be0109da.569e68","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":110,"y":1800,"wires":[]},{"id":"83fc6f13.494de","type":"function","z":"be0109da.569e68","name":"","func":"global.set('lift_limit', msg.payload);\nreturn msg;","outputs":1,"noerr":0,"x":110,"y":1760,"wires":[["d0c93996.9eb038"]]},{"id":"51ba1d57.6f66d4","type":"inject","z":"be0109da.569e68","name":"Inject Lift Limit","topic":"lift/limit","payload":"2","payloadType":"num","repeat":"","crontab":"","once":true,"onceDelay":0.1,"x":120,"y":1680,"wires":[["e1574238.3fba3"]]},{"id":"85f30bc9.23b748","type":"debug","z":"be0109da.569e68","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","x":110,"y":1920,"wires":[]},{"id":"4cac1239.a17a5c","type":"inject","z":"be0109da.569e68","name":"","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":100,"y":1840,"wires":[["8e26963f.9e26e8"]]},{"id":"8e26963f.9e26e8","type":"function","z":"be0109da.569e68","name":"limit check","func":"let flag = global.get('lift_limit');\nmsg.payload = flag;\nreturn msg;","outputs":1,"noerr":0,"x":110,"y":1880,"wires":[["85f30bc9.23b748"]]},{"id":"2a3c11f1.94406e","type":"ui_text","z":"be0109da.569e68","group":"85a74b37.905988","order":7,"width":"6","height":"1","name":"lift_alarm","label":"ALARM","format":"<font style=\"background-color: red\" color= {{msg.color}} > {{msg.payload}} </font>","layout":"row-spread","x":620,"y":920,"wires":[]},{"id":"57217af0.00ed84","type":"switch","z":"be0109da.569e68","name":"Change message","property":"alarm","propertyType":"msg","rules":[{"t":"eq","v":"1","vt":"num"},{"t":"eq","v":"0","vt":"num"}],"checkall":"true","repair":false,"outputs":2,"x":610,"y":840,"wires":[["c1a0aa4d.88f3d8"],["4f4ca9b8.f54d98"]]},{"id":"c1a0aa4d.88f3d8","type":"function","z":"be0109da.569e68","name":"","func":"msg.payload = \"LIFT LIMIT is REACHED\";\nmsg.color = \"red\";\nreturn msg;","outputs":1,"noerr":0,"x":610,"y":800,"wires":[["2a3c11f1.94406e"]]},{"id":"4f4ca9b8.f54d98","type":"function","z":"be0109da.569e68","name":"","func":"msg.payload = \"OK\";\nmsg.color = \"lime\";\nreturn msg;","outputs":1,"noerr":0,"x":610,"y":880,"wires":[["2a3c11f1.94406e"]]},{"id":"c2755e94.d1123","type":"modbus-flex-write","z":"be0109da.569e68","name":"","showStatusActivities":true,"showErrors":true,"server":"98582ebe.5c555","x":330,"y":760,"wires":[[],[]]},{"id":"960108c1.4f5768","type":"modbus-response","z":"be0109da.569e68","name":"","registerShowMax":20,"x":110,"y":240,"wires":[]},{"id":"4e07ad3b.c6cc74","type":"function","z":"be0109da.569e68","name":"set flag_backward","func":"let flag = flow.get('flag_nonmetal_out');\nflag++;\nflow.set('flag_nonmetal_out', flag);\nreturn msg;","outputs":1,"noerr":0,"x":1110,"y":1000,"wires":[[]]},{"id":"c47b2175.8d6ba8","type":"switch","z":"be0109da.569e68","name":"backward_control","property":"backward_delay","propertyType":"msg","rules":[{"t":"false"},{"t":"true"}],"checkall":"true","repair":false,"outputs":2,"x":1110,"y":860,"wires":[["e454741a.4c4cb8"],["eae4fd8e.55a5c8"]]},{"id":"eae4fd8e.55a5c8","type":"delay","z":"be0109da.569e68","name":"","pauseType":"delay","timeout":"2","timeoutUnits":"seconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":1080,"y":900,"wires":[["e454741a.4c4cb8"]]},{"id":"7f7bd07.19bc1b","type":"switch","z":"be0109da.569e68","name":"forward_control","property":"forward_delay","propertyType":"msg","rules":[{"t":"false"},{"t":"true"}],"checkall":"true","repair":false,"outputs":2,"x":1100,"y":720,"wires":[["351e77c6.003888"],["f0a3efc3.bcbc8"]]},{"id":"f0a3efc3.bcbc8","type":"delay","z":"be0109da.569e68","name":"","pauseType":"delay","timeout":"2","timeoutUnits":"seconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":1080,"y":760,"wires":[["351e77c6.003888"]]},{"id":"3fe6e50d.99024a","type":"ui_group","z":"","name":"Control","tab":"105b1f04.d6bf11","disp":true,"width":"6","collapse":false},{"id":"ec159c5f.67f9f","type":"ui_group","z":"","name":"Sensors","tab":"105b1f04.d6bf11","order":2,"disp":true,"width":"6","collapse":false},{"id":"85a74b37.905988","type":"ui_group","z":"","name":"Display","tab":"105b1f04.d6bf11","order":3,"disp":true,"width":"6","collapse":false},{"id":"a8631049.a5e76","type":"modbustcp-server","z":"","name":"","host":"127.0.0.1","port":"502","unit_id":"1","reconnecttimeout":""},{"id":"98582ebe.5c555","type":"modbus-client","z":"","name":"","clienttype":"tcp","bufferCommands":false,"stateLogEnabled":false,"tcpHost":"127.0.0.1","tcpPort":"502","tcpType":"DEFAULT","serialPort":"/dev/ttyUSB","serialType":"RTU-BUFFERD","serialBaudrate":"9600","serialDatabits":"8","serialStopbits":"1","serialParity":"none","serialConnectionDelay":"100","unit_id":1,"commandDelay":1,"clientTimeout":1000,"reconnectTimeout":2000},{"id":"105b1f04.d6bf11","type":"ui_tab","z":"","name":"Conveyor","icon":"dashboard","order":5,"disabled":false,"hidden":false}]