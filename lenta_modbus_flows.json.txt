[{"id":"be0109da.569e68","type":"tab","label":"LentaModbusTest","disabled":false,"info":""},{"id":"84cd4e46.3abcc","type":"function","z":"be0109da.569e68","name":"CS Enable","func":"let status = context.get('status') || 0;\nlet isFirst = flow.get('initial');\nif (typeof(msg.payload) === 'object') {\n    let input = msg.payload[0];\n    if(isFirst === 1) {\n        if(input === 0) {\n            msg.payload = \"OFF\";\n            msg.color = \"red\";\n            let a = flow.get('output_enable');\n            a = 0;\n            flow.set('output_enable', a);\n            context.set('status', 0);\n            return msg;\n        }\n        else {\n            msg.payload = \"ON\";\n            msg.color = \"lime\";\n            let a = flow.get('output_enable');\n            a = 1;\n            flow.set('output_enable', a);\n            context.set('status', 1);\n            return msg;\n        }\n    }\n    else {\n        if(input === status) {\n            return null;\n        }\n        else if(input === 1) {\n           msg.payload = \"ON\";\n            msg.color = \"lime\";\n            context.set('status', 1);\n            let a = flow.get('output_enable');\n            a = 1;\n            flow.set('output_enable', a);\n            return msg; \n        }\n        \n        else {\n            msg.payload = \"OFF\";\n            msg.color = \"red\";\n            context.set('status', 0);\n            let a = flow.get('output_enable');\n            a = 0;\n            flow.set('output_enable', a);\n            return msg;\n        }\n    }\n} \nreturn null;","outputs":1,"noerr":0,"x":550,"y":100,"wires":[["86f7d946.0d2228"]]},{"id":"ff5e3785.68c1b8","type":"function","z":"be0109da.569e68","name":"CS Main","func":"let status = context.get('status') || 0;\nlet isFirst = flow.get('initial');\nif (typeof(msg.payload) === 'object') {\n    let input = msg.payload[1];\n    if(isFirst === 1) {\n        if(input === 0) {\n            msg.payload = \"OFF\";\n            msg.color = \"red\";\n            let a = flow.get('output_main');\n            a = 0;\n            flow.set('output_main', a);\n            context.set('status', 0);\n            return msg;\n        }\n        else {\n            msg.payload = \"ON\";\n            msg.color = \"lime\";\n            let a = flow.get('output_main');\n            a = 1;\n            flow.set('output_main', a);\n            context.set('status', 1);\n            return msg;\n        }\n    }\n    else {\n        if(input === status) {\n            return null;\n        }\n        else if(input === 1) {\n           msg.payload = \"ON\";\n            msg.color = \"lime\";\n            context.set('status', 1);\n            let a = flow.get('output_main');\n            a = 1;\n            flow.set('output_main', a);\n            return msg; \n        }\n        \n        else {\n            msg.payload = \"OFF\";\n            msg.color = \"red\";\n            context.set('status', 0);\n            let a = flow.get('output_main');\n            a = 0;\n            flow.set('output_main', a);\n            return msg;\n        }\n    }\n} \nreturn null;","outputs":1,"noerr":0,"x":540,"y":140,"wires":[["d6d84df7.fa5b6"]]},{"id":"21cf992a.c55046","type":"function","z":"be0109da.569e68","name":"CS Forward","func":"let status = context.get('status') || 0;\nlet isFirst = flow.get('initial');\nif (typeof(msg.payload) === 'object') {\n    let input = msg.payload[2];\n    if(isFirst === 1) {\n        if(input === 0) {\n            msg.payload = \"OFF\";\n            msg.color = \"red\";\n            let a = flow.get('output_forward');\n            a = 0;\n            flow.set('output_forward', a);\n            context.set('status', 0);\n            return msg;\n        }\n        else {\n            msg.payload = \"ON\";\n            msg.color = \"lime\";\n            let a = flow.get('output_forward');\n            a = 1;\n            flow.set('output_forward', a);\n            context.set('status', 1);\n            return msg;\n        }\n    }\n    else {\n        if(input === status) {\n            return null;\n        }\n        else if(input === 1) {\n           msg.payload = \"ON\";\n            msg.color = \"lime\";\n            context.set('status', 1);\n            let a = flow.get('output_forward');\n            a = 1;\n            flow.set('output_forward', a);\n            return msg; \n        }\n        \n        else {\n            msg.payload = \"OFF\";\n            msg.color = \"red\";\n            context.set('status', 0);\n            let a = flow.get('output_forward');\n            a = 0;\n            flow.set('output_forward', a);\n            return msg;\n        }\n    }\n} \nreturn null;","outputs":1,"noerr":0,"x":550,"y":180,"wires":[["aeab85fd.59c748"]]},{"id":"fcecab99.021d18","type":"function","z":"be0109da.569e68","name":"CS Backward","func":"let status = context.get('status') || 0;\nlet isFirst = flow.get('initial');\nif (typeof(msg.payload) === 'object') {\n    let input = msg.payload[3];\n    if(isFirst === 1) {\n        if(input === 0) {\n            msg.payload = \"OFF\";\n            msg.color = \"red\";\n            let a = flow.get('output_backward');\n            a = 0;\n            flow.set('output_backward', a);\n            context.set('status', 0);\n            return msg;\n        }\n        else {\n            msg.payload = \"ON\";\n            msg.color = \"lime\";\n            let a = flow.get('output_backward');\n            a = 1;\n            flow.set('output_backward', a);\n            context.set('status', 1);\n            return msg;\n        }\n    }\n    else {\n        if(input === status) {\n            return null;\n        }\n        else if(input === 1) {\n           msg.payload = \"ON\";\n            msg.color = \"lime\";\n            context.set('status', 1);\n            let a = flow.get('output_backward');\n            a = 1;\n            flow.set('output_backward', a);\n            return msg; \n        }\n        \n        else {\n            msg.payload = \"OFF\";\n            msg.color = \"red\";\n            context.set('status', 0);\n            let a = flow.get('output_backward');\n            a = 0;\n            flow.set('output_backward', a);\n            return msg;\n        }\n    }\n} \nreturn null;","outputs":1,"noerr":0,"x":560,"y":220,"wires":[["ed8bf83.9926608"]]},{"id":"2b6e9602.8230ca","type":"function","z":"be0109da.569e68","name":"CS Start","func":"let status = context.get('status') || 0;\nlet isFirst = flow.get('initial');\nif (typeof(msg.payload) === 'object') {\n    let input = msg.payload[4];\n    if(isFirst === 1) {\n        if(input === 0) {\n            msg.payload = \"OFF\";\n            msg.color = \"red\";\n            let a = flow.get('sensor_start');\n            a = 0;\n            flow.set('sensor_start', a);\n            context.set('status', 0);\n            return msg;\n        }\n        else {\n            msg.payload = \"ON\";\n            msg.color = \"lime\";\n            let a = flow.get('sensor_start');\n            a = 1;\n            flow.set('sensor_start', a);\n            context.set('status', 1);\n            return msg;\n        }\n    }\n    else {\n        if(input === status) {\n            return null;\n        }\n        else if(input === 1) {\n           msg.payload = \"ON\";\n            msg.color = \"lime\";\n            context.set('status', 1);\n            let a = flow.get('sensor_start');\n            a = 1;\n            flow.set('sensor_start', a);\n            return msg; \n        }\n        \n        else {\n            msg.payload = \"OFF\";\n            msg.color = \"red\";\n            context.set('status', 0);\n            let a = flow.get('sensor_start');\n            a = 0;\n            flow.set('sensor_start', a);\n            return msg;\n        }\n    }\n} \nreturn null;","outputs":1,"noerr":0,"x":540,"y":260,"wires":[["992f07ee.152c38"]]},{"id":"dc3ec576.3c3e48","type":"function","z":"be0109da.569e68","name":"CS Metal","func":"let status = context.get('status') || 0;\nlet isFirst = flow.get('initial');\nif (typeof(msg.payload) === 'object') {\n    let input = msg.payload[5];\n    if(isFirst === 1) {\n        if(input === 0) {\n            msg.payload = \"OFF\";\n            msg.color = \"red\";\n            let a = flow.get('sensor_metal');\n            a = 0;\n            flow.set('sensor_metal', a);\n            context.set('status', 0);\n            return msg;\n        }\n        else {\n            msg.payload = \"ON\";\n            msg.color = \"lime\";\n            let a = flow.get('sensor_metal');\n            a = 1;\n            flow.set('sensor_metal', a);\n            context.set('status', 1);\n            return msg;\n        }\n    }\n    else {\n        if(input === status) {\n            return null;\n        }\n        else if(input === 1) {\n           msg.payload = \"ON\";\n            msg.color = \"lime\";\n            context.set('status', 1);\n            let a = flow.get('sensor_metal');\n            a = 1;\n            flow.set('sensor_metal', a);\n            return msg; \n        }\n        \n        else {\n            msg.payload = \"OFF\";\n            msg.color = \"red\";\n            context.set('status', 0);\n            let a = flow.get('sensor_metal');\n            a = 0;\n            flow.set('sensor_metal', a);\n            return msg;\n        }\n    }\n} \nreturn null;","outputs":1,"noerr":0,"x":540,"y":300,"wires":[["7e71edd3.8dcad4"]]},{"id":"26b3e8fb.43c118","type":"function","z":"be0109da.569e68","name":"CS Nonmetal","func":"let status = context.get('status') || 0;\nlet isFirst = flow.get('initial');\nif (typeof(msg.payload) === 'object') {\n    let input = msg.payload[6];\n    if(isFirst === 1) {\n        if(input === 0) {\n            msg.payload = \"OFF\";\n            msg.color = \"red\";\n            let a = flow.get('sensor_nonmetal');\n            a = 0;\n            flow.set('sensor_nonmetal', a);\n            context.set('status', 0);\n            return msg;\n        }\n        else {\n            msg.payload = \"ON\";\n            msg.color = \"lime\";\n            let a = flow.get('sensor_nonmetal');\n            a = 1;\n            flow.set('sensor_nonmetal', a);\n            context.set('status', 1);\n            return msg;\n        }\n    }\n    else {\n        if(input === status) {\n            return null;\n        }\n        else if(input === 1) {\n           msg.payload = \"ON\";\n            msg.color = \"lime\";\n            context.set('status', 1);\n            let a = flow.get('sensor_nonmetal');\n            a = 1;\n            flow.set('sensor_nonmetal', a);\n            return msg; \n        }\n        \n        else {\n            msg.payload = \"OFF\";\n            msg.color = \"red\";\n            context.set('status', 0);\n            let a = flow.get('sensor_nonmetal');\n            a = 0;\n            flow.set('sensor_nonmetal', a);\n            return msg;\n        }\n    }\n} \nreturn null;","outputs":1,"noerr":0,"x":550,"y":340,"wires":[["d2d1b46b.4b8a08"]]},{"id":"7c3c590d.e5d738","type":"function","z":"be0109da.569e68","name":"CS Counter","func":"let status = context.get('status') || 0;\nlet isFirst = flow.get('initial');\nif (typeof(msg.payload) === 'object') {\n    let input = msg.payload[7];\n    if(isFirst === 1) {\n        if(input === 0) {\n            msg.payload = \"OFF\";\n            msg.color = \"red\";\n            let a = flow.get('sensor_counter');\n            a = 0;\n            flow.set('sensor_counter', a);\n            context.set('status', 0);\n            return msg;\n        }\n        else {\n            msg.payload = \"ON\";\n            msg.color = \"lime\";\n            let a = flow.get('sensor_counter');\n            a = 1;\n            flow.set('sensor_counter', a);\n            context.set('status', 1);\n            return msg;\n        }\n    }\n    else {\n        if(input === status) {\n            return null;\n        }\n        else if(input === 1) {\n           msg.payload = \"ON\";\n            msg.color = \"lime\";\n            context.set('status', 1);\n            let a = flow.get('sensor_counter');\n            a = 1;\n            flow.set('sensor_counter', a);\n            return msg; \n        }\n        \n        else {\n            msg.payload = \"OFF\";\n            msg.color = \"red\";\n            context.set('status', 0);\n            let a = flow.get('sensor_counter');\n            a = 0;\n            flow.set('sensor_counter', a);\n            return msg;\n        }\n    }\n} \nreturn null;","outputs":1,"noerr":0,"x":550,"y":380,"wires":[["52103dfe.0e5404"]]},{"id":"c3954f32.7211e","type":"function","z":"be0109da.569e68","name":"CS Out","func":"let status = context.get('status') || 0;\nlet isFirst = flow.get('initial');\nif (typeof(msg.payload) === 'object') {\n    let input = msg.payload[8];\n    if(isFirst === 1) {\n        if(input === 0) {\n            msg.payload = \"OFF\";\n            msg.color = \"red\";\n            let a = flow.get('sensor_out');\n            a = 0;\n            flow.set('sensor_out', a);\n            context.set('status', 0);\n            return msg;\n        }\n        else {\n            msg.payload = \"ON\";\n            msg.color = \"lime\";\n            let a = flow.get('sensor_out');\n            a = 1;\n            flow.set('sensor_out', a);\n            context.set('status', 1);\n            return msg;\n        }\n    }\n    else {\n        if(input === status) {\n            return null;\n        }\n        else if(input === 1) {\n           msg.payload = \"ON\";\n            msg.color = \"lime\";\n            context.set('status', 1);\n            let a = flow.get('sensor_out');\n            a = 1;\n            flow.set('sensor_out', a);\n            return msg; \n        }\n        \n        else {\n            msg.payload = \"OFF\";\n            msg.color = \"red\";\n            context.set('status', 0);\n            let a = flow.get('sensor_out');\n            a = 0;\n            flow.set('sensor_out', a);\n            return msg;\n        }\n    }\n} \nreturn null;","outputs":1,"noerr":0,"x":540,"y":420,"wires":[["f96291f.a02bc7"]]},{"id":"167ff9f0.445346","type":"ui_button","z":"be0109da.569e68","name":"enable","group":"3fe6e50d.99024a","order":2,"width":3,"height":1,"passthru":false,"label":"ENABLE","tooltip":"","color":"black","bgcolor":"orange","icon":"","payload":"1","payloadType":"num","topic":"button/enable","x":110,"y":1160,"wires":[["1295700d.a3aeb"]]},{"id":"a6aafe3e.306b2","type":"ui_button","z":"be0109da.569e68","name":"backward","group":"3fe6e50d.99024a","order":8,"width":3,"height":1,"passthru":false,"label":"BACKWARD","tooltip":"","color":"","bgcolor":"","icon":"","payload":"1","payloadType":"num","topic":"button/backward","x":120,"y":1120,"wires":[["e454741a.4c4cb8"]]},{"id":"e1f8a77e.3841f8","type":"ui_button","z":"be0109da.569e68","name":"forward","group":"3fe6e50d.99024a","order":6,"width":3,"height":1,"passthru":false,"label":"FORWARD","tooltip":"","color":"","bgcolor":"","icon":"","payload":"1","payloadType":"num","topic":"button/forward","x":120,"y":1080,"wires":[["351e77c6.003888"]]},{"id":"3630ffd5.bd62f","type":"ui_button","z":"be0109da.569e68","name":"main","group":"3fe6e50d.99024a","order":4,"width":3,"height":1,"passthru":true,"label":"MAIN","tooltip":"","color":"","bgcolor":"","icon":"","payload":"1","payloadType":"num","topic":"button/main","x":110,"y":1040,"wires":[["c1f2ae2b.c5455"]]},{"id":"351e77c6.003888","type":"function","z":"be0109da.569e68","name":"Distribution Forward","func":"let current = flow.get('output_forward');\n\n/*if(msg.topic === \"reset/system\") {\n    msg.payload = {\n            value: 0,\n            'fc': 6,\n            'unitid': 1,\n            'address': 16386 ,\n            'quantity': 1\n        }\n        return msg;\n}*/\nif(flow.get('auto') === 0 && flow.get('output_backward') === 0) {\n    if(current === 1) {\n        msg.payload = {\n            value: 0,\n            'fc': 6,\n            'unitid': 1,\n            'address': 16386 ,\n            'quantity': 1\n        }\n        flow.set('output_forward', 0);\n        return msg;\n    }\n    else {\n        msg.payload = {\n            value: 1,\n            'fc': 6,\n            'unitid': 1,\n            'address': 16386 ,\n            'quantity': 1\n        }\n        flow.set('output_forward', 1);\n        return msg;\n    }\n}\n\nif(flow.get('auto') === 1 && msg.forward === 1 && flow.get('output_backward') === 0) {\n    if(current === 0) {\n        msg.payload = {\n            value: 1,\n            'fc': 6,\n            'unitid': 1,\n            'address': 16386 ,\n            'quantity': 1\n        }\n        flow.set('output_forward', 1);\n        return msg;\n    }\n}\n\nif(flow.get('auto') === 1 && msg.forward === 0) {\n    if(current === 1) {\n        msg.payload = {\n            value: 0,\n            'fc': 6,\n            'unitid': 1,\n            'address': 16386 ,\n            'quantity': 1\n        }\n        flow.set('output_forward', 0);\n        return msg;\n    }\n}","outputs":1,"noerr":0,"x":320,"y":1080,"wires":[["64015bfc.0b1564"]]},{"id":"c1f2ae2b.c5455","type":"function","z":"be0109da.569e68","name":"Main","func":"let current = flow.get('output_main');\n/*if(msg.topic === \"reset/system\") {\n   flow.set('status_sensor', 0);\n        msg.payload = {\n            value: 0,\n            'fc': 6,\n            'unitid': 1,\n            'address': 16385 ,\n            'quantity': 1\n        }\n        return msg; \n}*/\nlet auto = flow.get('auto');\nif(auto === 0) {\n    if(current === 1) {\n        //flow.set('status_sensor', 0);\n        msg.payload = {\n            value: 0,\n            'fc': 6,\n            'unitid': 1,\n            'address': 16385 ,\n            'quantity': 1\n        }\n        flow.set('output_main', 0);\n        return msg;\n    }\n    else {\n        msg.payload = {\n            value: 1,\n            'fc': 6,\n            'unitid': 1,\n            'address': 16385 ,\n            'quantity': 1\n        }\n        flow.set('output_main', 1);\n        return msg;\n    }\n}\nif(msg.topic === \"server/main_start\" && auto === 1 && msg.main === 1) {\n    if(current === 0) {\n        msg.payload = {\n            value: 1,\n            'fc': 6,\n            'unitid': 1,\n            'address': 16385 ,\n            'quantity': 1\n        }\n        flow.set('output_main', 1);\n        return msg;\n    }\n}\nif(msg.topic === \"server/main_stop\" && auto === 1 && msg.main === 0) {\n    if(current === 1) {\n        msg.payload = {\n            value: 0,\n            'fc': 6,\n            'unitid': 1,\n            'address': 16385 ,\n            'quantity': 1\n        }\n        flow.set('output_main', 0);\n        return msg;\n    }\n}","outputs":1,"noerr":0,"x":370,"y":1040,"wires":[["64015bfc.0b1564"]]},{"id":"ec44da67.eca5e8","type":"function","z":"be0109da.569e68","name":"Start Sensor","func":"let counter = flow.get('sensor_start') || 0;\n\nif(counter === 0) {\n    msg.payload = {\n        'value': 1,\n        'fc': 6,\n        'unitid': 1,\n        'address': 16388,\n        'quantity': 1\n    }\n    return msg;\n}\nelse {\n    msg.payload = {\n        'value': 0,\n        'fc': 6,\n        'unitid': 1,\n        'address': 16388,\n        'quantity': 1\n    }\n    return msg;\n}","outputs":1,"noerr":0,"x":310,"y":1260,"wires":[["64015bfc.0b1564"]]},{"id":"2221ba3e.a82a16","type":"function","z":"be0109da.569e68","name":"Metal Sensor","func":"let counter = flow.get('sensor_metal');\nif(counter === 0) {\n    msg.payload = {\n        'value': 1,\n        'fc': 6,\n        'unitid': 1,\n        'address': 16389,\n        'quantity': 1\n        }\n    return msg;\n}\nelse {\n    msg.payload = {\n        'value': 0,\n        'fc': 6,\n        'unitid': 1,\n        'address': 16389,\n        'quantity': 1\n    }\n    return msg;\n}","outputs":1,"noerr":0,"x":310,"y":1300,"wires":[["64015bfc.0b1564"]]},{"id":"3ae105c1.2e041a","type":"function","z":"be0109da.569e68","name":"NonMetal Sensor","func":"let counter = flow.get('sensor_nonmetal');\nif(counter === 0) {\n    msg.payload = {\n        'value': 1,\n        'fc': 6,\n        'unitid': 1,\n        'address': 16390,\n        'quantity': 1\n        }\n    return msg;\n}\nelse {\n    msg.payload = {\n        'value': 0,\n        'fc': 6,\n        'unitid': 1,\n        'address': 16390,\n        'quantity': 1\n    }\n    return msg;\n}","outputs":1,"noerr":0,"x":330,"y":1340,"wires":[["64015bfc.0b1564"]]},{"id":"42c438d.791d5c8","type":"function","z":"be0109da.569e68","name":"Counter Sensor","func":"let counter = flow.get('sensor_counter');\nif(counter === 0) {\n    msg.payload = {\n        'value': 1,\n        'fc': 6,\n        'unitid': 1,\n        'address': 16391,\n        'quantity': 1\n        }\n    return msg;\n}\nelse {\n    msg.payload = {\n        'value': 0,\n        'fc': 6,\n        'unitid': 1,\n        'address': 16391,\n        'quantity': 1\n    }\n    return msg;\n}","outputs":1,"noerr":0,"x":320,"y":1380,"wires":[["64015bfc.0b1564"]]},{"id":"e528d039.10e8e","type":"function","z":"be0109da.569e68","name":"Out Sensor","func":"let counter = flow.get('sensor_out');\nif(counter === 0) {\n    msg.payload = {\n        'value': 1,\n        'fc': 6,\n        'unitid': 1,\n        'address': 16392,\n        'quantity': 1\n        }\n    return msg;\n}\nelse{\n    msg.payload = {\n        'value': 0,\n        'fc': 6,\n        'unitid': 1,\n        'address': 16392,\n        'quantity': 1\n    }\n    return msg;\n}","outputs":1,"noerr":0,"x":310,"y":1420,"wires":[["64015bfc.0b1564"]]},{"id":"86f7d946.0d2228","type":"ui_text","z":"be0109da.569e68","group":"3fe6e50d.99024a","order":1,"width":3,"height":1,"name":"output/enable","label":"Enable","format":"<font color={{msg.color}} ><i class=\"fa fa-circle\" style=\"font-size:24px;\"></i></font>","layout":"row-spread","x":740,"y":100,"wires":[]},{"id":"d6d84df7.fa5b6","type":"ui_text","z":"be0109da.569e68","group":"3fe6e50d.99024a","order":3,"width":3,"height":1,"name":"output/main","label":"Main Band","format":"<font color={{msg.color}} ><i class=\"fa fa-circle\" style=\"font-size:24px;\"></i></font>","layout":"row-spread","x":730,"y":140,"wires":[]},{"id":"aeab85fd.59c748","type":"ui_text","z":"be0109da.569e68","group":"3fe6e50d.99024a","order":5,"width":3,"height":1,"name":"output/forward","label":"Distribution Forward","format":"<font color={{msg.color}} ><i class=\"fa fa-circle\" style=\"font-size:24px;\"></i></font>","layout":"row-spread","x":740,"y":180,"wires":[]},{"id":"ed8bf83.9926608","type":"ui_text","z":"be0109da.569e68","group":"3fe6e50d.99024a","order":7,"width":3,"height":1,"name":"output/backward","label":"Distribution Backward","format":"<font color={{msg.color}} ><i class=\"fa fa-circle\" style=\"font-size:24px;\"></i></font>","layout":"row-spread","x":740,"y":220,"wires":[]},{"id":"992f07ee.152c38","type":"ui_text","z":"be0109da.569e68","group":"ec159c5f.67f9f","order":1,"width":3,"height":1,"name":"sensor/start","label":"Start","format":"<font color={{msg.color}} ><i class=\"fa fa-circle\" style=\"font-size:24px;\"></i></font>","layout":"row-spread","x":730,"y":260,"wires":[]},{"id":"7e71edd3.8dcad4","type":"ui_text","z":"be0109da.569e68","group":"ec159c5f.67f9f","order":3,"width":3,"height":1,"name":"sensor/metal","label":"Metal","format":"<font color={{msg.color}} ><i class=\"fa fa-circle\" style=\"font-size:24px;\"></i></font>","layout":"row-spread","x":730,"y":300,"wires":[]},{"id":"d2d1b46b.4b8a08","type":"ui_text","z":"be0109da.569e68","group":"ec159c5f.67f9f","order":5,"width":3,"height":1,"name":"sensor/nonmetal","label":"Nonmetal","format":"<font color={{msg.color}} ><i class=\"fa fa-circle\" style=\"font-size:24px;\"></i></font>","layout":"row-spread","x":740,"y":340,"wires":[]},{"id":"52103dfe.0e5404","type":"ui_text","z":"be0109da.569e68","group":"ec159c5f.67f9f","order":7,"width":3,"height":1,"name":"sensor/counter","label":"Counter","format":"<font color={{msg.color}} ><i class=\"fa fa-circle\" style=\"font-size:24px;\"></i></font>","layout":"row-spread","x":740,"y":380,"wires":[]},{"id":"f96291f.a02bc7","type":"ui_text","z":"be0109da.569e68","group":"ec159c5f.67f9f","order":9,"width":3,"height":1,"name":"sensor/out","label":"Out","format":"<font color={{msg.color}} ><i class=\"fa fa-circle\" style=\"font-size:24px;\"></i></font>","layout":"row-spread","x":730,"y":420,"wires":[]},{"id":"9382bae8.35bb88","type":"ui_button","z":"be0109da.569e68","name":"A/M","group":"3fe6e50d.99024a","order":10,"width":3,"height":1,"passthru":false,"label":"Auto","tooltip":"","color":"yellow","bgcolor":"","icon":"","payload":"1","payloadType":"num","topic":"auto","x":110,"y":1000,"wires":[["11374c82.bd73a3"]]},{"id":"d5d7d661.7c75f8","type":"ui_text","z":"be0109da.569e68","group":"3fe6e50d.99024a","order":9,"width":3,"height":1,"name":"auto/man","label":"Auto","format":"<font color={{msg.color}} ><i class=\"fa fa-circle\" style=\"font-size:24px;\"></i></font>","layout":"row-spread","x":720,"y":940,"wires":[]},{"id":"f5a1e842.cef9a8","type":"ui_button","z":"be0109da.569e68","name":"sensor/start","group":"ec159c5f.67f9f","order":2,"width":3,"height":1,"passthru":false,"label":"SENSOR START","tooltip":"","color":"","bgcolor":"","icon":"","payload":"1","payloadType":"num","topic":"button/start","x":130,"y":1260,"wires":[["ec44da67.eca5e8"]]},{"id":"2dccf1fa.58a5ae","type":"ui_button","z":"be0109da.569e68","name":"sensor/metal","group":"ec159c5f.67f9f","order":4,"width":3,"height":1,"passthru":false,"label":"SENSOR METAL","tooltip":"","color":"","bgcolor":"","icon":"","payload":"1","payloadType":"num","topic":"button/metal","x":130,"y":1300,"wires":[["2221ba3e.a82a16"]]},{"id":"98b2fe82.2663","type":"ui_button","z":"be0109da.569e68","name":"sensor/nonmetal","group":"ec159c5f.67f9f","order":6,"width":3,"height":1,"passthru":false,"label":"SENSOR NONMETAL","tooltip":"","color":"","bgcolor":"","icon":"","payload":"1","payloadType":"num","topic":"button/nonmetal","x":140,"y":1340,"wires":[["3ae105c1.2e041a"]]},{"id":"ef16e7a9.a8f298","type":"ui_button","z":"be0109da.569e68","name":"sensor/counter","group":"ec159c5f.67f9f","order":8,"width":3,"height":1,"passthru":false,"label":"SENSOR COUNTER","tooltip":"","color":"","bgcolor":"#FF00FF","icon":"","payload":"1","payloadType":"num","topic":"button/counter","x":140,"y":1380,"wires":[["42c438d.791d5c8"]]},{"id":"520d2c3d.95ce44","type":"ui_button","z":"be0109da.569e68","name":"sensor/out","group":"ec159c5f.67f9f","order":10,"width":3,"height":1,"passthru":false,"label":"SENSOR OUT","tooltip":"","color":"","bgcolor":"","icon":"","payload":"1","payloadType":"num","topic":"button/out","x":130,"y":1420,"wires":[["e528d039.10e8e"]]},{"id":"30fd20d3.c3e52","type":"function","z":"be0109da.569e68","name":"Logic","func":"// Initial on start\n//=====================================================================\nlet status = context.get('status') || 0;\nlet isFirst = flow.get('initial');\nif (isFirst === 1 || msg.topic === \"system/reset\" || status === 0) {\n    flow.set('endPos', 0);\n    flow.set('templ_counter_start', 0);\n    flow.set('templ_counter_metal', 0);\n    flow.set('templ_counter_nonmetal', []);\n    flow.set('templ_counter_out', []);\n    flow.set('templ_counter_metal_out', 0);\n    flow.set('templ_counter_nonmetal_out', 0);\n    flow.set('flag_nonmetal_out', 0);\n    let metalCounter = global.get('counter_metal') || 0;\n    let nonmetalCounter = global.get('counter_nonmetal') || 0;\n    let totalCounter = global.get('counter_total') || 0;\n    let liftMetal = global.get('lift_metal_count') || 0;\n    let liftNonmetal = global.get('lift_nonmetal_count') || 0;\n    let startPos = flow.get('templ_counter_start') || 0;\n    let endPosMetal = flow.get('templ_counter_metal_out') || 0;\n    let endPosNonmetal = flow.get('templ_counter_nonmetal_out') || 0;\n    let endPos = flow.get('endPos') || 0;\n    endPos += (endPosMetal + endPosNonmetal);\n    flow.set('endPos', endPos);\n    flow.set('isDifferent', false);\n\n    context.set('status', 1);\n\n    msg.metal_count = metalCounter;\n    msg.nonmetal_count = nonmetalCounter;\n    msg.total_count = totalCounter;\n    msg.lift_metal_count = liftMetal;\n    msg.lift_nonmetal_count = liftNonmetal;\n    msg.start_pos = startPos;\n    msg.end_pos = endPos;\n    msg.alarm = 0;\n\n    return [ msg, msg, msg, msg, msg ,msg, msg, msg, null, null, null ]; // done\n    // [ lf_m, end, start, l_nm, limt, met, nonm, totl, main, forw, backw ]\n}\n// When lift limit is reached\n//=================================================================\nlet limitFlag = global.get('lift_limit_flag');\nlet liftMetal = global.get('lift_metal_count');\nlet liftNonmetal = global.get('lift_nonmetal_count');\n\nif (limitFlag === 1) {\n    return null;\n}\nlet limit = global.get('lift_limit');\n/*if(liftMetal === limit || liftNonmetal === limit) {\n    //firstlimit = context.get('firslimit') || false;\n    global.set('lift_limit_flag', 1);\n    msg.forward = 0;\n    msg.backward = 0;\n    msg.main = 0;\n    msg.topic = \"server/main_stop\";\n    msg.alarm = 1;\n    return [ null, null, null, null, msg, null, null, null, msg, msg, msg ]; // done\n    //context.set('firstlimit', true);\n}*/\n\n// Work in mode auto\n//==================================================================\nif (flow.get('auto') === 1) {\n    msg.main_delay = 0;\n    let startPos = flow.get('templ_counter_start') || 0;\n    let templMetal = flow.get('templ_counter_metal') || 0;\n    let templNonmetal = flow.get('templ_counter_nonmetal') || [];\n    let endPosMetal = flow.get('templ_counter_metal_out') || 0;\n    let endPosNonmetal = flow.get('templ_counter_nonmetal_out') || 0;\n    let endPos = flow.get('endPos') || 0;\n    let isDifferent = flow.get('isDifferent') || false;\n    let metalCounter = global.get('counter_metal') || 0;\n    let nonmetalCounter = global.get('counter_nonmetal') || 0;\n    let totalCounter = global.get('counter_total') || 0;\n    liftMetal = global.get('lift_metal_count') || 0;\n    liftNonmetal = global.get('lift_nonmetal_count') || 0;\n    let input;\n\n    let firstmain = context.get('firstmain') || false;\n    input = msg.payload[4];\n    if (input === 1 && firstmain === false) {\n        startPos ++;\n        flow.set('templ_counter_start', startPos);\n        msg.start_pos = startPos;\n        if (flow.get('output_main') === 0) {\n            msg.main = 1;\n            msg.main_delay = 0;\n            msg.topic = \"server/main_start\";\n        }\n\n        msg.alarm = 0;\n\n        context.set('firstmain', true);\n\n        return [ null, null, msg, null, msg, null, null, null, msg, null, null ];   // done\n        // [ lf_m, end, start, l_nm, limt, met, nonm, totl, main, forw, backw ]\n    }\n    if (input === 0 && firstmain === true) {\n        context.set('firstmain', false);\n    }\n\n\n// Load metal item queue\n//============================================================\n// Outputs =>\n// [ lift_metal, end, start, lift_nonmetal, limit, metal, nonmetal, total, main, forward, backward ]\n    let mainStatus = flow.get('output_main') || 0;\n    //let startStatus = flow.get('templ_counter_start');\n    if(mainStatus === 1) {\n        let firstmetal = context.get('firstmetal') || false;\n        input = msg.payload[5];\n        if (input === 1 && firstmetal === false && startPos > 0) {\n            //endPosMetal = flow.get('templ_counter_metal') || 0;\n            templMetal ++;\n            flow.set('templ_counter_metal', templMetal);\n\n            startPos -= 1;\n            flow.set('templ_counter_start', startPos);\n            msg.start_pos = startPos;\n\n            metalCounter++;\n            global.set('counter_metal', metalCounter);\n            msg.metal_count = metalCounter;\n            context.set('firstmetal', true);\n\n            return [ null, null, msg, null, null, msg, null, null, null, null, null ]; // done\n            // [ lf_m, end, start, l_nm, limt, met, nonm, totl, main, forw, backw ]\n        }\n        if (input === 0 && firstmetal === true) {\n            context.set('firstmetal', false);\n        }\n\n// Load nonmetal item queue\n//=============================================================\n        let firstnonmetal = context.get('firstnonmetal') || false;\n\n        input = msg.payload[6];\n        if (input === 1 && firstnonmetal === false && (startPos > 0 || templMetal > 0)) {\n            //let nonendPosMetal = flow.get('templ_counter_nonmetal');\n\n            let materialType = 0;\n            //let metalStatus = endPosMetal;\n            if (templMetal > 0) {\n                templMetal -= 1;\n                materialType = 1;\n                flow.set('templ_counter_metal', templMetal);\n            }\n            else {\n                nonmetalCounter++;\n                startPos -= 1;\n\n                flow.set('templ_counter_start', startPos);\n                msg.start_pos = startPos;\n\n                global.set('counter_nonmetal', nonmetalCounter);\n            }\n\n            templNonmetal.push(materialType);\n            flow.set('templ_counter_nonmetal', templNonmetal);\n\n            context.set('firstnonmetal', true);\n\n            msg.nonmetal_count = nonmetalCounter;\n            msg.start_pos = startPos;\n\n            return [ null, null, msg, null, null, null, msg, null, null, null, null ]; // done\n            // [ lf_m, end, start, l_nm, limt, met, nonm, totl, main, forw, backw ]\n        }\n        if (input === 0 && firstnonmetal === true) {\n            context.set('firstnonmetal', false);\n        }\n\n// Load total items count and control distribute and main bands\n//=======================================================================\n        let firsttotal = context.get('firsttotal') || false;\n        input = msg.payload[7];\n        if (input === 1 && firsttotal === false && templNonmetal.length > 0) {\n            //let nonmetalStatus = flow.get('templ_counter_nonmetal') || [];\n            //if (templNonmetal.length > 0) {    // check for available material\n\n            let out = templNonmetal.shift();   // assigns first element and decrease materials on nonmetal counter\n            flow.set('templ_counter_nonmetal', templNonmetal);\n\n            totalCounter++;                        // increase and set total counter\n            global.set('counter_total', totalCounter);\n\n            if (out === 1) {\n\n                if (isDifferent === false) {\n                    msg.forward = 1;\n                    msg.forward_delay = 0;\n                    msg.backward = null;\n                    msg.backward_delay = null;\n                }\n                /*else{\n                    msg.main = 0;           // main stop\n                    msg.main_delay = 2;\n                    msg.topic = \"server/main_stop\";\n                }*/\n                //let endPosMetal = flow.get('templ_counter_metal_out') || 0;\n                endPosMetal++;\n                flow.set('templ_counter_metal_out', endPosMetal);\n            }\n            else {\n                if(isDifferent === false) {\n                    msg.forward = null;\n                    msg.forward_delay = null;\n                    msg.backward = 1;\n                    msg.backward_delay = 0;\n                }\n                /*else {\n                    msg.main = 0;           // main stop\n                    msg.main_delay = 2;\n                    msg.topic = \"server/main_stop\";\n                }*/\n                //let endPosNonmetal = flow.get('templ_counter_nonmetal_out') || 0;\n                endPosNonmetal ++;\n                flow.set('templ_counter_nonmetal_out', endPosNonmetal);\n            }\n            //endPos = flow.get('endPos') || 0;\n            endPos ++;\n            flow.set('endPos', endPos);\n\n            if(isDifferent === true) {\n                msg.main = 0;\n                msg.main_delay = 1;\n                msg.topic = \"server/main_stop\";\n\n                isDifferent = false;\n                flow.set('isDifferent', isDifferent);\n            }\n\n            if (templNonmetal.length > 0) {\n                let next = templNonmetal[0];       // check for same material\n                if (next !== out) {\n                    // TODO: When next item is same as current\n\n                    isDifferent = true;\n                    flow.set('isDifferent', isDifferent);\n\n                    /*msg.main = 0;\n                    msg.main_delay = 2;\n                    msg.topic = \"server/main_stop\";*/\n                }\n                else {\n                    isDifferent = false;\n                    flow.set('isDifferent', isDifferent);\n                }\n            }\n            else {\n                // TODO: when conveyor main band is empty\n                if(isDifferent === false) {\n                    msg.main = 0;\n                    msg.main_delay = 2;\n                    msg.topic = \"server/main_stop\";\n                }\n                else {\n                    msg.main = 0;\n                    msg.main_delay = 1;\n                    msg.topic = \"server/main_stop\";\n\n                    isDifferent = false;\n                    flow.set('isDifferent', isDifferent);\n                }\n            }\n\n            context.set('firsttotal', true);\n\n            msg.total_count = totalCounter;         // total counts\n            msg.metal_count = metalCounter;         // metal counts\n            msg.nonmetal_count = nonmetalCounter;   // nonmetal counts\n            msg.end_pos = endPos;                   // end position counts\n\n            return [ null, msg, null, null, null, msg, msg, msg, msg, msg, msg ];    // done\n            // [ lf_m, end, strt, l_nm, limt, met, nom, ttl, main, forw, backw ]\n            //}\n        }\n        if (input === 0 && firsttotal === true) {\n            context.set('firsttotal', false);\n        }\n    }\n\n// Wait for metal out sensor\n//=======================================================================\n    let firstout = context.get('firstout') || false;\n    input = msg.payload[8];\n    if (input === 1 && firstout === false && flow.get('output_backward') === 0) {\n        //msg.forward_delay = false;\n        //let endMetalStatus = flow.get('templ_counter_metal_out') || 0;\n        if (endPosMetal > 0) {\n\n            endPosMetal -= 1;\n            flow.set('templ_counter_metal_out', endPosMetal);\n\n            //endPos = flow.get('endPos') || 0;\n            endPos -= 1;\n            flow.set('endPos', endPos);\n            msg.end_pos = endPos;\n\n            liftMetal = global.get('lift_metal_count') || 0;\n            liftMetal ++;\n            global.set('lift_metal_count', liftMetal);\n            msg.lift_metal_count = liftMetal;\n\n            // check for empty queue on out\n            if(endPosMetal <= 0) {\n                if(endPosNonmetal > 0 ) {\n                    msg.main = 1;\n                    msg.main_delay = 3;\n                    msg.topic = \"server/main_start\";\n                    msg.backward = 1;\n                    msg.backward_delay = 4;\n                    msg.forward = 0;\n                    msg.forward_delay = 3;\n                }\n                else {\n                    msg.forward = 0;\n                    msg.forward_delay = 3;\n                    msg.main = 0;\n                    msg.main_delay = 2;\n                    msg.topic = \"server/main_stop\";\n                }\n\n                /*if(endPos > 0) {\n                    msg.backward = 1;\n                    msg.backward_delay = true;\n                }\n                else {\n                    msg.backward = null;\n                    msg.backward_delay = null;\n                }*/\n            }\n\n            context.set('firstout', true);\n\n            return [ msg, msg, null, null, null, null, null, null, msg, msg, msg ]; // done\n            // [ lf_m, end, strt, l_nm, limt, met, nom, ttl, main, forw, backw ]\n        }\n    }\n\n    if (input === 0 && firstout === true) {\n        context.set('firstout', false);\n    }\n\n// Wait for nonmetal out sensor\n//=======================================================================\n    let secondout = context.get('secondout') || false;\n    input = flow.get('flag_nonmetal_out') || 0;\n    if (input > 0 && secondout === false && flow.get('output_forward') === 0) {\n        input = 0;\n        flow.set('flag_nonmetal_out', input);\n        //msg.backward_delay = false;\n        //let endNonmetalStatus = flow.get('templ_counter_nonmetal_out') || 0;\n        if (endPosNonmetal > 0) {\n\n            endPosNonmetal -= 1;\n            flow.set('templ_counter_nonmetal_out', endPosNonmetal);\n\n            //endPos = flow.get('endPos') || 0;\n            endPos -= 1;\n            flow.set('endPos', endPos);\n            msg.end_pos = endPos;\n\n            liftNonmetal = global.get('lift_nonmetal_count') || 0;\n            liftNonmetal ++;\n            global.set('lift_nonmetal_count', liftNonmetal);\n            msg.lift_nonmetal_count = liftNonmetal;\n\n            // check for empty queue on out\n\n            if(endPosNonmetal <= 0) {\n                if(endPosMetal > 0 ) {\n                    msg.main = 1;\n                    msg.main_delay = 3;\n                    msg.topic = \"server/main_start\";\n                    msg.forward = 1;\n                    msg.forward_delay = 4;\n                    msg.backward = 0;\n                    msg.backward_delay = 3;\n                }\n                else {\n                    msg.backward = 0;\n                    msg.backward_delay = 3;\n                    msg.main = 0;\n                    msg.main_delay = 2;\n                    msg.topic = \"server/main_stop\";\n                }\n\n                /*if(endPos > 0) {\n                    msg.backward = 1;\n                    msg.backward_delay = true;\n                }\n                else {\n                    msg.backward = null;\n                    msg.backward_delay = null;\n                }*/\n            }\n\n            context.set('secondout', true);\n\n            return [ null, msg, null, msg, null, null, null, null, msg, msg, msg ]; // done\n            // [ lf_m, end, strt, l_nm, limt, met, nom, ttl, main, forw, backw ]\n        }\n    }\n\n    if (input === 0 && secondout === true) {\n        context.set('secondout', false);\n    }\n}","outputs":11,"noerr":0,"x":290,"y":540,"wires":[["e229824.bb03c8"],["ac71cdc0.784f58"],["e40f00fa.91adb"],["d178c677.1752d"],["c1a0aa4d.88f3d8"],["ba505c6b.224a6"],["9b4b508a.7a563"],["73b370fd.3a08e"],["dcf06812.23f828"],["7fc3ce0e.72aa4"],["7ca2b06.68c425"]]},{"id":"c255c282.23f4d","type":"ui_text","z":"be0109da.569e68","group":"85a74b37.905988","order":1,"width":6,"height":1,"name":"totalcounter","label":"TOTAL COUNT","format":"{{msg.total_count}}","layout":"col-center","x":730,"y":900,"wires":[]},{"id":"3a6c4135.1f721e","type":"ui_text","z":"be0109da.569e68","group":"85a74b37.905988","order":2,"width":3,"height":1,"name":"metalcounter","label":"METAL COUNT","format":"{{msg.metal_count}}","layout":"row-spread","x":730,"y":820,"wires":[]},{"id":"9a90850.979d578","type":"ui_text","z":"be0109da.569e68","group":"85a74b37.905988","order":4,"width":3,"height":1,"name":"nonmetalcounter","label":"NONMETAL COUNT","format":"{{msg.nonmetal_count}}","layout":"row-spread","x":750,"y":860,"wires":[]},{"id":"3ab8e419.8c4abc","type":"ui_button","z":"be0109da.569e68","name":"reset","group":"3fe6e50d.99024a","order":11,"width":6,"height":1,"passthru":false,"label":"RESET","tooltip":"","color":"white","bgcolor":"red","icon":"","payload":"1","payloadType":"num","topic":"system/reset","x":110,"y":720,"wires":[["84738252.9eda6"]]},{"id":"e454741a.4c4cb8","type":"function","z":"be0109da.569e68","name":"Distribution Backward","func":"let current = flow.get('output_backward');\n\n/*if(msg.topic === \"reset/system\") {\n    msg.payload = {\n            value: 0,\n            'fc': 6,\n            'unitid': 1,\n            'address': 16387 ,\n            'quantity': 1\n        }\n        return msg;\n}*/\nlet auto = flow.get('auto') || 0;\n\nif(auto === 0 && flow.get('output_forward') === 0) {\n    if(current === 1) {\n        msg.payload = {\n            value: 0,\n            'fc': 6,\n            'unitid': 1,\n            'address': 16387 ,\n            'quantity': 1\n        }\n        flow.set('output_backward', 0);\n        return msg;\n    }\n    else {\n        msg.payload = {\n            value: 1,\n            'fc': 6,\n            'unitid': 1,\n            'address': 16387 ,\n            'quantity': 1\n        }\n        flow.set('output_backward', 1);\n        return msg;\n    }\n}\nif(auto === 1 && msg.backward === 1 && flow.get('output_forward') === 0) {\n    if(current === 0) {\n        msg.payload = {\n            value: 1,\n            'fc': 6,\n            'unitid': 1,\n            'address': 16387 ,\n            'quantity': 1\n        }\n        flow.set('output_backward', 1);\n        return msg;\n    }\n}\n\nif(auto === 1 && msg.backward === 0) {\n    if(current === 1) {\n        msg.payload = {\n            value: 0,\n            'fc': 6,\n            'unitid': 1,\n            'address': 16387 ,\n            'quantity': 1\n        }\n        flow.set('output_backward', 0);\n        return msg;\n    }\n}","outputs":1,"noerr":0,"x":320,"y":1120,"wires":[["64015bfc.0b1564"]]},{"id":"6311ecc4.3c49c4","type":"debug","z":"be0109da.569e68","name":"ERROR","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":320,"y":20,"wires":[]},{"id":"238df011.c85d9","type":"inject","z":"be0109da.569e68","name":"","topic":"","payload":"1","payloadType":"num","repeat":"","crontab":"","once":true,"onceDelay":0.1,"x":150,"y":100,"wires":[["108bba81.e7a0b5"]]},{"id":"51cd1afe.259884","type":"catch","z":"be0109da.569e68","name":"CATCH ERROR","scope":null,"uncaught":false,"x":140,"y":20,"wires":[["6311ecc4.3c49c4"]]},{"id":"487ea2d4.5d7b6c","type":"debug","z":"be0109da.569e68","name":"debuging/message","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":710,"y":1420,"wires":[]},{"id":"fe7aaed4.1d4bd","type":"delay","z":"be0109da.569e68","name":"10ms","pauseType":"delay","timeout":"10","timeoutUnits":"milliseconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":150,"y":540,"wires":[["30fd20d3.c3e52"]]},{"id":"108bba81.e7a0b5","type":"function","z":"be0109da.569e68","name":"Initial","func":"if(msg.payload === 1) {\n    flow.set('initial', 1);\n    \n}\nelse {\n    flow.set('initial', 0);\n    return null;\n}\nreturn msg;","outputs":1,"noerr":0,"x":270,"y":100,"wires":[["6c3c6460.7ab4dc"]]},{"id":"6c3c6460.7ab4dc","type":"change","z":"be0109da.569e68","name":"","rules":[{"t":"change","p":"payload","pt":"msg","from":"1","fromt":"num","to":"0","tot":"num"}],"action":"","property":"","from":"","to":"","reg":false,"x":180,"y":140,"wires":[["29ca9fa3.a04df"]]},{"id":"29ca9fa3.a04df","type":"delay","z":"be0109da.569e68","name":"0.5s","pauseType":"delay","timeout":"500","timeoutUnits":"milliseconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":130,"y":180,"wires":[["108bba81.e7a0b5"]]},{"id":"ee2f051f.cd29c8","type":"comment","z":"be0109da.569e68","name":"Error Catch","info":"Catchig every error in groups.","x":90,"y":60,"wires":[]},{"id":"6a68f693.182578","type":"comment","z":"be0109da.569e68","name":"Initial","info":"Initializing displays with I/O data at startup.","x":70,"y":220,"wires":[]},{"id":"22051a36.2eb696","type":"comment","z":"be0109da.569e68","name":"Read","info":"Reads data from the server.","x":70,"y":420,"wires":[]},{"id":"baf6c2a3.f4cb1","type":"comment","z":"be0109da.569e68","name":"Write Outputs","info":"Writes data to the server's outputs.","x":90,"y":1200,"wires":[]},{"id":"11374c82.bd73a3","type":"function","z":"be0109da.569e68","name":"auto/man","func":"if(msg.topic === \"system/reset\") {\n    flow.set('auto', 0);\n    msg.color = \"red\";\n    return msg;\n}\nlet color = \"\";\nlet statusAuto = 0;\nlet isFirst = flow.get('initial');\nif(isFirst === 1) {\n    flow.set('auto', statusAuto);\n    msg.color = \"red\";\n    return msg;\n}\ninput = msg.payload;\nif(input === 1) {\n    statusAuto = flow.get('auto');\n    if(statusAuto === 1) {\n        statusAuto = 0;\n        color = \"red\";\n    }\n    else if(statusAuto === 0) {\n        statusAuto = 1;\n        color = \"lime\";\n    }\n    \n    flow.set('auto', statusAuto);\n    msg.color = color;\n}\nreturn msg;","outputs":1,"noerr":0,"x":580,"y":940,"wires":[["d5d7d661.7c75f8"]]},{"id":"abc8b194.425e6","type":"inject","z":"be0109da.569e68","name":"Reset a/m","topic":"","payload":"1","payloadType":"num","repeat":"","crontab":"","once":true,"onceDelay":0.1,"x":150,"y":960,"wires":[["11374c82.bd73a3"]]},{"id":"1295700d.a3aeb","type":"function","z":"be0109da.569e68","name":"Enable","func":"/*if(msg.topic === \"reset/system\") {\n   msg.payload = {\n        value: 0,\n        'fc': 6,\n        'unitid': 1,\n        'address': 16384 ,\n        'quantity': 1\n    }\n    return msg; \n}*/\nlet current = flow.get('output_enable');\nif(current === 1) {\n    msg.payload = {\n        value: 0,\n        'fc': 6,\n        'unitid': 1,\n        'address': 16384 ,\n        'quantity': 1\n    }\n    flow.set('output_enable', 0);\n    return msg;\n}\nelse if(current === 0) {\n    msg.payload = {\n        value: 1,\n        'fc': 6,\n        'unitid': 1,\n        'address': 16384 ,\n        'quantity': 1\n    }\n    flow.set('output_enable', 0);\n    return msg;\n}","outputs":1,"noerr":0,"x":360,"y":1160,"wires":[["64015bfc.0b1564"]]},{"id":"84738252.9eda6","type":"function","z":"be0109da.569e68","name":"reset","func":"if(msg.payload === 1 && msg.topic === \"system/reset\") {\n    flow.set('templ_counter_metal', 0);\n    flow.set('flag_nonmetal_out', 0);\n    \n    let tcn = flow.get('templ_counter_nonmetal') || [];\n    tcn.splice(0,tcn.length);\n    flow.set('templ_counter_nonmetal', tcn);\n    \n    global.set('counter_metal', 0);\n    global.set('counter_nonmetal', 0);\n    global.set('counter_total', 0);\n    global.set('lift_metal_count', 0);\n    global.set('lift_nonmetal_count', 0);\n    \n    flow.set('output_main', 0);\n    flow.set('output_forward', 0);\n    flow.set('output_backward', 0);\n    \n    global.set('lift_limit_flag', 0);\n    global.set('system_reset', 1);\n    \n    msg.payload = {\n        value: [0, 0, 0, 0],\n        'fc': 16,\n        'unitid': 1,\n        'address': 16384 ,\n        'quantity': 4\n        }\n    return msg;\n}\nreturn null;","outputs":1,"noerr":0,"x":310,"y":720,"wires":[["1a7e4e58.071542"]]},{"id":"927dce0.6cf613","type":"comment","z":"be0109da.569e68","name":"Write Inputs","info":"Writes data to the server's inputs.","x":90,"y":1460,"wires":[]},{"id":"d62bbd41.48945","type":"delay","z":"be0109da.569e68","name":"5s","pauseType":"delay","timeout":"5","timeoutUnits":"seconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":1070,"y":1100,"wires":[["3dafe37b.7fe054"]]},{"id":"7fc3ce0e.72aa4","type":"delay","z":"be0109da.569e68","name":"50ms","pauseType":"delay","timeout":"50","timeoutUnits":"milliseconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":550,"y":1200,"wires":[["7f7bd07.19bc1b"]]},{"id":"7ca2b06.68c425","type":"delay","z":"be0109da.569e68","name":"100ms","pauseType":"delay","timeout":"100","timeoutUnits":"milliseconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":550,"y":1360,"wires":[["c47b2175.8d6ba8"]]},{"id":"dcf06812.23f828","type":"switch","z":"be0109da.569e68","name":"main_control","property":"main_delay","propertyType":"msg","rules":[{"t":"eq","v":"0","vt":"num"},{"t":"eq","v":"1","vt":"num"},{"t":"eq","v":"2","vt":"num"},{"t":"eq","v":"3","vt":"str"},{"t":"eq","v":"4","vt":"str"}],"checkall":"true","repair":false,"outputs":5,"x":690,"y":1040,"wires":[["8068d95b.79f4"],["d8da189a.c3ac"],["8c2b3fd9.de64"],["e52bbe87.7c3958"],["d62bbd41.48945"]]},{"id":"1755c038.2b5d7","type":"modbustcp-read","z":"be0109da.569e68","name":"","topic":"read1","dataType":"HoldingRegister","adr":"16384","quantity":"9","rate":"50","rateUnit":"ms","server":"","ieeeType":"off","ieeeBE":true,"x":130,"y":260,"wires":[["960108c1.4f5768","1cfce027.1caec"]]},{"id":"82f4c5c7.13f188","type":"ui_text","z":"be0109da.569e68","group":"85a74b37.905988","order":7,"width":3,"height":1,"name":"start/position","label":"START","format":"{{msg.start_pos}}","layout":"row-spread","x":730,"y":620,"wires":[]},{"id":"9ca59884.bcca68","type":"ui_text","z":"be0109da.569e68","group":"85a74b37.905988","order":3,"width":3,"height":1,"name":"lift/metalcounter","label":"LIFT-METAL","format":"{{msg.lift_metal_count}}","layout":"row-spread","x":740,"y":460,"wires":[]},{"id":"8f9e7924.0eb858","type":"ui_text","z":"be0109da.569e68","group":"85a74b37.905988","order":8,"width":3,"height":1,"name":"end/position","label":"END","format":"{{msg.end_pos}}","layout":"row-spread","x":730,"y":540,"wires":[]},{"id":"135298eb.3f8c47","type":"delay","z":"be0109da.569e68","name":"2s","pauseType":"delay","timeout":"2","timeoutUnits":"seconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":1070,"y":1320,"wires":[["6524bd92.40d96c"]]},{"id":"70a56e34.bcbc4","type":"ui_text","z":"be0109da.569e68","group":"85a74b37.905988","order":5,"width":3,"height":1,"name":"lift/nonmetalcounter","label":"LIFT-NONMETAL","format":"{{msg.lift_nonmetal_count}}","layout":"row-spread","x":750,"y":700,"wires":[]},{"id":"e1574238.3fba3","type":"ui_numeric","z":"be0109da.569e68","name":"limit","label":"Lift limit","tooltip":"","group":"3fe6e50d.99024a","order":12,"width":0,"height":0,"passthru":false,"topic":"limit/display","format":"{{value}}","min":"1","max":"3","step":1,"x":90,"y":760,"wires":[["83fc6f13.494de"]]},{"id":"83fc6f13.494de","type":"function","z":"be0109da.569e68","name":"gl/limit","func":"global.set('lift_limit', msg.payload);\nreturn msg;","outputs":1,"noerr":0,"x":210,"y":760,"wires":[["47946920.387508"]]},{"id":"2a3c11f1.94406e","type":"ui_text","z":"be0109da.569e68","group":"85a74b37.905988","order":6,"width":6,"height":1,"name":"lift_alarm","label":"ALARM","format":"<font color= {{msg.color}} > {{msg.payload}} </font>","layout":"row-spread","x":720,"y":780,"wires":[]},{"id":"c1a0aa4d.88f3d8","type":"function","z":"be0109da.569e68","name":"alm","func":"if(msg.alarm === 1) {\n    msg.payload = \"LIFT LIMIT is REACHED\";\n    msg.color = \"red\";\n}\nelse if(msg.alarm === 0) {\n    msg.payload = \"OK\";\n    msg.color = \"lime\";\n}\nreturn msg;","outputs":1,"noerr":0,"x":570,"y":760,"wires":[["2a3c11f1.94406e","c0a5cacc.518d88"]]},{"id":"c2755e94.d1123","type":"modbus-flex-write","z":"be0109da.569e68","name":"","showStatusActivities":true,"showErrors":true,"server":"","x":710,"y":1460,"wires":[[],[]]},{"id":"960108c1.4f5768","type":"modbus-response","z":"be0109da.569e68","name":"","registerShowMax":20,"x":150,"y":340,"wires":[]},{"id":"4e07ad3b.c6cc74","type":"function","z":"be0109da.569e68","name":"set flag_backward","func":"//let flag = flow.get('flag_nonmetal_out');\n//flag++;\nflow.set('flag_nonmetal_out', 1);\n//return msg;","outputs":1,"noerr":0,"x":1230,"y":1480,"wires":[[]]},{"id":"c47b2175.8d6ba8","type":"switch","z":"be0109da.569e68","name":"backward_control","property":"backward_delay","propertyType":"msg","rules":[{"t":"eq","v":"0","vt":"num"},{"t":"eq","v":"1","vt":"num"},{"t":"eq","v":"2","vt":"num"},{"t":"eq","v":"3","vt":"str"},{"t":"eq","v":"4","vt":"str"}],"checkall":"true","repair":false,"outputs":5,"x":710,"y":1360,"wires":[["479b28ef.3f5cd8"],["135298eb.3f8c47"],["37609c50.99468c"],["41376ce0.fb66ac"],["d465fab4.30624"]]},{"id":"7f7bd07.19bc1b","type":"switch","z":"be0109da.569e68","name":"forward_control","property":"forward_delay","propertyType":"msg","rules":[{"t":"eq","v":"0","vt":"num"},{"t":"eq","v":"1","vt":"num"},{"t":"eq","v":"2","vt":"num"},{"t":"eq","v":"3","vt":"str"},{"t":"eq","v":"4","vt":"str"}],"checkall":"true","repair":false,"outputs":5,"x":700,"y":1200,"wires":[["38fd1999.7d490e"],["f0a3efc3.bcbc8"],["b78107df.b8fdd"],["cbe5770a.14d72"],["20e22672.3b3262"]]},{"id":"f0a3efc3.bcbc8","type":"delay","z":"be0109da.569e68","name":"2s","pauseType":"delay","timeout":"2","timeoutUnits":"seconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":870,"y":1160,"wires":[["362675ac.29ec82"]]},{"id":"ac3f1651.7ff9f","type":"mqtt out","z":"be0109da.569e68","name":"SCADA Output","topic":"scada","qos":"","retain":"","broker":"","x":980,"y":640,"wires":[]},{"id":"5658ed12.ada764","type":"mqtt in","z":"be0109da.569e68","name":"Scada Input","topic":"scada/view","qos":"2","datatype":"auto","broker":"","x":130,"y":880,"wires":[["210756f0.3462da"]]},{"id":"210756f0.3462da","type":"json","z":"be0109da.569e68","name":"Json","property":"payload","action":"","pretty":false,"x":90,"y":820,"wires":[["e2ff8ff9.26369"]]},{"id":"e2ff8ff9.26369","type":"switch","z":"be0109da.569e68","name":"","property":"payload.topic","propertyType":"msg","rules":[{"t":"eq","v":"system/reset","vt":"str"},{"t":"eq","v":"button/limit","vt":"str"},{"t":"eq","v":"button/auto","vt":"str"},{"t":"eq","v":"button/main","vt":"str"}],"checkall":"true","repair":false,"outputs":4,"x":210,"y":820,"wires":[["7fa25c10.78f894"],["c6c83572.3bfba"],["f577085e.e12bf"],["3cabe798.dc6f78"]]},{"id":"3cabe798.dc6f78","type":"change","z":"be0109da.569e68","name":"MAIN","rules":[{"t":"set","p":"topic","pt":"msg","to":"button/main","tot":"str"},{"t":"set","p":"payload","pt":"msg","to":"1","tot":"num"}],"action":"","property":"","from":"","to":"","reg":false,"x":330,"y":880,"wires":[["c1f2ae2b.c5455"]]},{"id":"f577085e.e12bf","type":"change","z":"be0109da.569e68","name":"AUTO","rules":[{"t":"set","p":"topic","pt":"msg","to":"button/auto","tot":"str"},{"t":"set","p":"payload","pt":"msg","to":"1","tot":"num"}],"action":"","property":"","from":"","to":"","reg":false,"x":330,"y":840,"wires":[["11374c82.bd73a3"]]},{"id":"7fa25c10.78f894","type":"change","z":"be0109da.569e68","name":"Reset","rules":[{"t":"set","p":"topic","pt":"msg","to":"system/reset","tot":"str"},{"t":"set","p":"payload","pt":"msg","to":"1","tot":"num"}],"action":"","property":"","from":"","to":"","reg":false,"x":330,"y":760,"wires":[["84738252.9eda6"]]},{"id":"c6c83572.3bfba","type":"change","z":"be0109da.569e68","name":"Limit","rules":[{"t":"set","p":"topic","pt":"msg","to":"button/limit","tot":"str"},{"t":"set","p":"payload","pt":"msg","to":"payload.value","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":330,"y":800,"wires":[["e1574238.3fba3"]]},{"id":"b4885bed.e8ca68","type":"function","z":"be0109da.569e68","name":"Start Counter","func":"msg.payload = {\n    \"value\": msg.start_pos,\n    \"topic\": \"start/counter\"\n}\nreturn msg;","outputs":1,"noerr":0,"x":730,"y":660,"wires":[["ac3f1651.7ff9f"]]},{"id":"c0a5cacc.518d88","type":"function","z":"be0109da.569e68","name":"Alarm Message","func":"let textColor = \"black\";\nif(msg.color === \"red\") {\n    textColor = \"white\";\n}\nmsg.payload = {\n    \"value\": msg.payload,\n    \"topic\": \"lift/alarm\",\n    \"color\": msg.color,\n    \"textColor\": textColor\n}\n\nreturn msg;","outputs":1,"noerr":0,"x":880,"y":780,"wires":[["ac3f1651.7ff9f"]]},{"id":"1d469b1.0d9d865","type":"function","z":"be0109da.569e68","name":"Lift Metal Counter","func":"msg.payload = {\n    \"value\": msg.lift_metal_count,\n    \"topic\": \"lift_metal/counter\"\n}\nreturn msg;","outputs":1,"noerr":0,"x":870,"y":500,"wires":[["ac3f1651.7ff9f"]]},{"id":"ceeeba24.ff8668","type":"function","z":"be0109da.569e68","name":"Lift Nonmetal Counter","func":"msg.payload = {\n    \"value\": msg.lift_nonmetal_count,\n    \"topic\": \"lift_nonmetal/counter\"\n}\nreturn msg;","outputs":1,"noerr":0,"x":880,"y":740,"wires":[["ac3f1651.7ff9f"]]},{"id":"c0e163bf.17523","type":"delay","z":"be0109da.569e68","name":"2ms","pauseType":"delay","timeout":"5","timeoutUnits":"milliseconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":710,"y":740,"wires":[["ceeeba24.ff8668"]]},{"id":"55ca4b01.83b334","type":"delay","z":"be0109da.569e68","name":"2ms","pauseType":"delay","timeout":"2","timeoutUnits":"milliseconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":710,"y":500,"wires":[["1d469b1.0d9d865"]]},{"id":"4b376faa.45594","type":"function","z":"be0109da.569e68","name":"End Position Counter","func":"msg.payload = {\n    \"value\": msg.end_pos,\n    \"topic\": \"end_pos/counter\"\n}\nreturn msg;","outputs":1,"noerr":0,"x":760,"y":580,"wires":[["ac3f1651.7ff9f"]]},{"id":"1cfce027.1caec","type":"function","z":"be0109da.569e68","name":"Inputs buff","func":"\nreturn [ msg, msg, msg, msg, msg, msg, msg, msg, msg, msg ];","outputs":10,"noerr":0,"x":330,"y":260,"wires":[["84cd4e46.3abcc"],["ff5e3785.68c1b8"],["21cf992a.c55046"],["fcecab99.021d18"],["2b6e9602.8230ca"],["dc3ec576.3c3e48"],["26b3e8fb.43c118"],["7c3c590d.e5d738"],["c3954f32.7211e"],["fe7aaed4.1d4bd"]]},{"id":"3dafe37b.7fe054","type":"function","z":"be0109da.569e68","name":"buff","func":"\nreturn msg;","outputs":1,"noerr":0,"x":1250,"y":1020,"wires":[["c1f2ae2b.c5455"]]},{"id":"362675ac.29ec82","type":"function","z":"be0109da.569e68","name":"buff","func":"\nreturn msg;","outputs":1,"noerr":0,"x":1070,"y":1200,"wires":[["351e77c6.003888"]]},{"id":"6524bd92.40d96c","type":"function","z":"be0109da.569e68","name":"buff","func":"\nreturn msg;","outputs":1,"noerr":0,"x":1250,"y":1360,"wires":[["e454741a.4c4cb8","6b4ed410.edf2f4"]]},{"id":"e40f00fa.91adb","type":"function","z":"be0109da.569e68","name":"buff","func":"\nreturn [ msg, msg ];","outputs":2,"noerr":0,"x":570,"y":620,"wires":[["82f4c5c7.13f188"],["b4885bed.e8ca68"]]},{"id":"ac71cdc0.784f58","type":"function","z":"be0109da.569e68","name":"buff","func":"\nreturn [ msg, msg ];","outputs":2,"noerr":0,"x":570,"y":540,"wires":[["8f9e7924.0eb858"],["4b376faa.45594"]]},{"id":"e229824.bb03c8","type":"function","z":"be0109da.569e68","name":"buff","func":"\nreturn [ msg, msg ];","outputs":2,"noerr":0,"x":570,"y":460,"wires":[["9ca59884.bcca68"],["55ca4b01.83b334"]]},{"id":"d178c677.1752d","type":"function","z":"be0109da.569e68","name":"buff","func":"\nreturn [ msg, msg ];","outputs":2,"noerr":0,"x":570,"y":700,"wires":[["70a56e34.bcbc4"],["c0e163bf.17523"]]},{"id":"1a7e4e58.071542","type":"function","z":"be0109da.569e68","name":"buff","func":"\nreturn [ msg, msg, msg ];","outputs":3,"noerr":0,"x":310,"y":660,"wires":[["30fd20d3.c3e52"],["11374c82.bd73a3"],["64015bfc.0b1564"]]},{"id":"64015bfc.0b1564","type":"function","z":"be0109da.569e68","name":"buff","func":"\nreturn msg;","outputs":1,"noerr":0,"x":550,"y":1400,"wires":[["c2755e94.d1123","487ea2d4.5d7b6c"]]},{"id":"47946920.387508","type":"function","z":"be0109da.569e68","name":"limit for scada","func":"msg.payload = {\n    \"value\":msg.payload,\n    \"topic\":\"button/limit\"\n}\nreturn msg;","outputs":1,"noerr":0,"x":140,"y":640,"wires":[["ac3f1651.7ff9f"]]},{"id":"ba505c6b.224a6","type":"function","z":"be0109da.569e68","name":"buff","func":"\nreturn [ msg, msg ];","outputs":2,"noerr":0,"x":570,"y":820,"wires":[["3a6c4135.1f721e"],["faaec76c.24ddd"]]},{"id":"faaec76c.24ddd","type":"function","z":"be0109da.569e68","name":"Metal Counter","func":"msg.payload = {\n    \"value\": msg.metal_count,\n    \"topic\": \"metal/counter\"\n}\nreturn msg;","outputs":1,"noerr":0,"x":900,"y":820,"wires":[["ac3f1651.7ff9f"]]},{"id":"9b4b508a.7a563","type":"function","z":"be0109da.569e68","name":"buff","func":"\nreturn [ msg, msg ];","outputs":2,"noerr":0,"x":570,"y":860,"wires":[["9a90850.979d578"],["ee1ac64c.baeed8"]]},{"id":"73b370fd.3a08e","type":"function","z":"be0109da.569e68","name":"buff","func":"\nreturn [ msg, msg ];","outputs":2,"noerr":0,"x":570,"y":900,"wires":[["c255c282.23f4d"],["4d69a7d.2c75ed8"]]},{"id":"ee1ac64c.baeed8","type":"function","z":"be0109da.569e68","name":"Nonmetal Counter","func":"msg.payload = {\n    \"value\": msg.nonmetal_count,\n    \"topic\": \"nonmetal/counter\"\n}\nreturn msg;","outputs":1,"noerr":0,"x":950,"y":860,"wires":[["ac3f1651.7ff9f"]]},{"id":"4d69a7d.2c75ed8","type":"function","z":"be0109da.569e68","name":"Total Counter","func":"msg.payload = {\n    \"value\": msg.total_count,\n    \"topic\": \"total/counter\"\n}\nreturn msg;","outputs":1,"noerr":0,"x":890,"y":900,"wires":[["ac3f1651.7ff9f"]]},{"id":"d8da189a.c3ac","type":"delay","z":"be0109da.569e68","name":"2s","pauseType":"delay","timeout":"2","timeoutUnits":"seconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":1070,"y":980,"wires":[["3dafe37b.7fe054"]]},{"id":"37609c50.99468c","type":"delay","z":"be0109da.569e68","name":"3s","pauseType":"delay","timeout":"3","timeoutUnits":"seconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":1070,"y":1360,"wires":[["6524bd92.40d96c"]]},{"id":"a6c066e2.10d81","type":"delay","z":"be0109da.569e68","name":"6s","pauseType":"delay","timeout":"6","timeoutUnits":"seconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":1250,"y":1440,"wires":[["4e07ad3b.c6cc74"]]},{"id":"8068d95b.79f4","type":"delay","z":"be0109da.569e68","name":"1s","pauseType":"delay","timeout":"1","timeoutUnits":"seconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":1070,"y":940,"wires":[["3dafe37b.7fe054"]]},{"id":"479b28ef.3f5cd8","type":"delay","z":"be0109da.569e68","name":"1s","pauseType":"delay","timeout":"1","timeoutUnits":"seconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":1070,"y":1280,"wires":[["6524bd92.40d96c"]]},{"id":"38fd1999.7d490e","type":"delay","z":"be0109da.569e68","name":"1s","pauseType":"delay","timeout":"1","timeoutUnits":"seconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":870,"y":1120,"wires":[["362675ac.29ec82"]]},{"id":"41376ce0.fb66ac","type":"delay","z":"be0109da.569e68","name":"4s","pauseType":"delay","timeout":"4","timeoutUnits":"seconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":1070,"y":1400,"wires":[["6524bd92.40d96c"]]},{"id":"d465fab4.30624","type":"delay","z":"be0109da.569e68","name":"5s","pauseType":"delay","timeout":"5","timeoutUnits":"seconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":1070,"y":1440,"wires":[["6524bd92.40d96c"]]},{"id":"b78107df.b8fdd","type":"delay","z":"be0109da.569e68","name":"3s","pauseType":"delay","timeout":"3","timeoutUnits":"seconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":870,"y":1200,"wires":[["362675ac.29ec82"]]},{"id":"cbe5770a.14d72","type":"delay","z":"be0109da.569e68","name":"4s","pauseType":"delay","timeout":"4","timeoutUnits":"seconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":870,"y":1240,"wires":[["362675ac.29ec82"]]},{"id":"20e22672.3b3262","type":"delay","z":"be0109da.569e68","name":"5s","pauseType":"delay","timeout":"5","timeoutUnits":"seconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":870,"y":1280,"wires":[["362675ac.29ec82"]]},{"id":"8c2b3fd9.de64","type":"delay","z":"be0109da.569e68","name":"3s","pauseType":"delay","timeout":"3","timeoutUnits":"seconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":1070,"y":1020,"wires":[["3dafe37b.7fe054"]]},{"id":"e52bbe87.7c3958","type":"delay","z":"be0109da.569e68","name":"4s","pauseType":"delay","timeout":"4","timeoutUnits":"seconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":1070,"y":1060,"wires":[["3dafe37b.7fe054"]]},{"id":"6b4ed410.edf2f4","type":"function","z":"be0109da.569e68","name":"","func":"if(msg.backward === 0) {\n    return null;\n}\nreturn msg;","outputs":1,"noerr":0,"x":1250,"y":1400,"wires":[["a6c066e2.10d81"]]},{"id":"3fe6e50d.99024a","type":"ui_group","z":"","name":"Control","tab":"105b1f04.d6bf11","order":1,"disp":true,"width":"6","collapse":false},{"id":"ec159c5f.67f9f","type":"ui_group","z":"","name":"Sensors","tab":"105b1f04.d6bf11","order":2,"disp":true,"width":"6","collapse":false},{"id":"85a74b37.905988","type":"ui_group","z":"","name":"Display","tab":"105b1f04.d6bf11","order":3,"disp":true,"width":"6","collapse":false},{"id":"105b1f04.d6bf11","type":"ui_tab","z":"","name":"CONVEYOR","icon":"dashboard","order":5,"disabled":false,"hidden":true}]