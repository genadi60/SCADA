[{"id":"160b87ab.b78738","type":"tab","label":"LentaNew","disabled":false,"info":""},{"id":"f23b7b3f.fb64c8","type":"function","z":"160b87ab.b78738","name":"Enable","func":"let status = context.get('status') || 0;\nlet isFirst = flow.get('initial') || 0;\nlet input = flow.get('led_enable') || 0;\nif(isFirst === 1) {\n        if(input === 0) {\n            msg.payload = \"OFF\";\n            msg.color = \"red\";\n            context.set('status', 0);\n            return msg;\n        }\n        else {\n            msg.payload = \"ON\";\n            msg.color = \"lime\";\n            context.set('status', 1);\n            return msg;\n        }\n}\nelse {\n    if(input === status) {\n        return null;\n    }\n    else if(input === 1) {\n       msg.payload = \"ON\";\n        msg.color = \"lime\";\n        context.set('status', 1);\n        return msg; \n    }\n    else {\n        msg.payload = \"OFF\";\n        msg.color = \"red\";\n        context.set('status', 0);\n        return msg;\n    }\n}\nreturn null;\n","outputs":1,"noerr":0,"x":420,"y":440,"wires":[["6fcb340d.b9ba9c"]]},{"id":"27f09d87.901aa2","type":"function","z":"160b87ab.b78738","name":"Main","func":"let status = context.get('status') || 0;\nlet isFirst = flow.get('initial') || 0;\nlet input = flow.get('led_main') || 0;\nif(isFirst === 1) {\n        if(input === 0) {\n            msg.payload = \"OFF\";\n            msg.color = \"red\";\n            context.set('status', 0);\n            return msg;\n        }\n        else {\n            msg.payload = \"ON\";\n            msg.color = \"lime\";\n            context.set('status', 1);\n            return msg;\n        }\n}\nelse {\n    if(input === status) {\n        return null;\n    }\n    else if(input === 1) {\n       msg.payload = \"ON\";\n        msg.color = \"lime\";\n        context.set('status', 1);\n        return msg; \n    }\n    else {\n        msg.payload = \"OFF\";\n        msg.color = \"red\";\n        context.set('status', 0);\n        return msg;\n    }\n}\nreturn null;","outputs":1,"noerr":0,"x":410,"y":560,"wires":[["6cf7e4f5.a01fac"]]},{"id":"48bddf3b.a3e8f","type":"function","z":"160b87ab.b78738","name":"Forward","func":"let status = context.get('status') || 0;\nlet isFirst = flow.get('initial') || 0;\nlet input = flow.get('led_forward') || 0;\nif(isFirst === 1) {\n        if(input === 0) {\n            msg.payload = \"OFF\";\n            msg.color = \"red\";\n            context.set('status', 0);\n            return msg;\n        }\n        else {\n            msg.payload = \"ON\";\n            msg.color = \"lime\";\n            context.set('status', 1);\n            return msg;\n        }\n}\nelse {\n    if(input === status) {\n        return null;\n    }\n    else if(input === 1) {\n       msg.payload = \"ON\";\n        msg.color = \"lime\";\n        context.set('status', 1);\n        return msg; \n    }\n    else {\n        msg.payload = \"OFF\";\n        msg.color = \"red\";\n        context.set('status', 0);\n        return msg;\n    }\n}\nreturn null;","outputs":1,"noerr":0,"x":420,"y":600,"wires":[["cf20bb98.69b508"]]},{"id":"6671da13.12ec54","type":"function","z":"160b87ab.b78738","name":"Backward","func":"let status = context.get('status') || 0;\nlet isFirst = flow.get('initial') || 0;\nlet input = flow.get('led_backward') || 0;\nif(isFirst === 1) {\n        if(input === 0) {\n            msg.payload = \"OFF\";\n            msg.color = \"red\";\n            context.set('status', 0);\n            return msg;\n        }\n        else {\n            msg.payload = \"ON\";\n            msg.color = \"lime\";\n            context.set('status', 1);\n            return msg;\n        }\n}\nelse {\n    if(input === status) {\n        return null;\n    }\n    else if(input === 1) {\n       msg.payload = \"ON\";\n        msg.color = \"lime\";\n        context.set('status', 1);\n        return msg; \n    }\n    else {\n        msg.payload = \"OFF\";\n        msg.color = \"red\";\n        context.set('status', 0);\n        return msg;\n    }\n}\nreturn null;","outputs":1,"noerr":0,"x":420,"y":640,"wires":[["781315b8.1022ec"]]},{"id":"7ee2c0a0.dec32","type":"function","z":"160b87ab.b78738","name":"Start","func":"let status = context.get('status') || 0;\nlet isFirst = flow.get('initial') || 0;\nlet input = flow.get('led_start') || 0;\nif(isFirst === 1) {\n        if(input === 0) {\n            msg.payload = \"OFF\";\n            msg.color = \"red\";\n            context.set('status', 0);\n            return msg;\n        }\n        else {\n            msg.payload = \"ON\";\n            msg.color = \"lime\";\n            context.set('status', 1);\n            return msg;\n        }\n}\nelse {\n    if(input === status) {\n        return null;\n    }\n    else if(input === 1) {\n       msg.payload = \"ON\";\n        msg.color = \"lime\";\n        context.set('status', 1);\n        return msg; \n    }\n    else {\n        msg.payload = \"OFF\";\n        msg.color = \"red\";\n        context.set('status', 0);\n        return msg;\n    }\n}\nreturn null;","outputs":1,"noerr":0,"x":410,"y":680,"wires":[["c26f8cea.f682f"]]},{"id":"1488ca19.233126","type":"function","z":"160b87ab.b78738","name":"Metal","func":"let status = context.get('status') || 0;\nlet isFirst = flow.get('initial') || 0;\nlet input = flow.get('led_metal') || 0;\nif(isFirst === 1) {\n        if(input === 0) {\n            msg.payload = \"OFF\";\n            msg.color = \"red\";\n            context.set('status', 0);\n            return msg;\n        }\n        else {\n            msg.payload = \"ON\";\n            msg.color = \"lime\";\n            context.set('status', 1);\n            return msg;\n        }\n}\nelse {\n    if(input === status) {\n        return null;\n    }\n    else if(input === 1) {\n       msg.payload = \"ON\";\n        msg.color = \"lime\";\n        context.set('status', 1);\n        return msg; \n    }\n    else {\n        msg.payload = \"OFF\";\n        msg.color = \"red\";\n        context.set('status', 0);\n        return msg;\n    }\n}\nreturn null;","outputs":1,"noerr":0,"x":410,"y":720,"wires":[["410437d.d4fe0c8"]]},{"id":"1ba59379.ba3a8d","type":"function","z":"160b87ab.b78738","name":"Item","func":"let status = context.get('status') || 0;\nlet isFirst = flow.get('initial') || 0;\nlet input = flow.get('led_item') || 0;\nif(isFirst === 1) {\n        if(input === 0) {\n            msg.payload = \"OFF\";\n            msg.color = \"red\";\n            context.set('status', 0);\n            return msg;\n        }\n        else {\n            msg.payload = \"ON\";\n            msg.color = \"lime\";\n            context.set('status', 1);\n            return msg;\n        }\n}\nelse {\n    if(input === status) {\n        return null;\n    }\n    else if(input === 1) {\n       msg.payload = \"ON\";\n        msg.color = \"lime\";\n        context.set('status', 1);\n        return msg; \n    }\n    else {\n        msg.payload = \"OFF\";\n        msg.color = \"red\";\n        context.set('status', 0);\n        return msg;\n    }\n}\nreturn null;","outputs":1,"noerr":0,"x":410,"y":760,"wires":[["856ff086.9b486"]]},{"id":"74b4082c.964d08","type":"function","z":"160b87ab.b78738","name":"Counter","func":"let status = context.get('status') || 0;\nlet isFirst = flow.get('initial') || 0;\nlet input = flow.get('led_counter') || 0;\nif(isFirst === 1) {\n        if(input === 0) {\n            msg.payload = \"OFF\";\n            msg.color = \"red\";\n            context.set('status', 0);\n            return msg;\n        }\n        else {\n            msg.payload = \"ON\";\n            msg.color = \"lime\";\n            context.set('status', 1);\n            return msg;\n        }\n}\nelse {\n    if(input === status) {\n        return null;\n    }\n    else if(input === 1) {\n       msg.payload = \"ON\";\n        msg.color = \"lime\";\n        context.set('status', 1);\n        return msg; \n    }\n    else {\n        msg.payload = \"OFF\";\n        msg.color = \"red\";\n        context.set('status', 0);\n        return msg;\n    }\n}\nreturn null;","outputs":1,"noerr":0,"x":420,"y":800,"wires":[["308e8f64.b2697"]]},{"id":"e44a2d16.d2b97","type":"function","z":"160b87ab.b78738","name":"End Metal","func":"let status = context.get('status') || 0;\nlet isFirst = flow.get('initial') || 0;\nlet input = flow.get('led_end_metal') || 0;\nif(isFirst === 1) {\n        if(input === 0) {\n            msg.payload = \"OFF\";\n            msg.color = \"red\";\n            context.set('status', 0);\n            return msg;\n        }\n        else {\n            msg.payload = \"ON\";\n            msg.color = \"lime\";\n            context.set('status', 1);\n            return msg;\n        }\n}\nelse {\n    if(input === status) {\n        return null;\n    }\n    else if(input === 1) {\n       msg.payload = \"ON\";\n        msg.color = \"lime\";\n        context.set('status', 1);\n        return msg; \n    }\n    else {\n        msg.payload = \"OFF\";\n        msg.color = \"red\";\n        context.set('status', 0);\n        return msg;\n    }\n}\nreturn null;","outputs":1,"noerr":0,"x":420,"y":840,"wires":[["f59e5281.0950e"]]},{"id":"c3c076a6.b87738","type":"function","z":"160b87ab.b78738","name":"Forward","func":"let workMode = flow.get('local_auto') || 0;\nlet backward = flow.get('output_backward') || 0;\nif(workMode === 0 && backward === 0) {\n    flow.set('button_forward', 1);\n}","outputs":1,"noerr":0,"x":320,"y":2000,"wires":[[]]},{"id":"ca380ddb.9a532","type":"function","z":"160b87ab.b78738","name":"Main","func":"let workMode = flow.get('local_auto') || 0;\nif(workMode === 0) {\n   flow.set('button_main', 1); \n}\n","outputs":1,"noerr":0,"x":310,"y":1960,"wires":[[]]},{"id":"5af98ca6.a8ec94","type":"function","z":"160b87ab.b78738","name":"Start","func":"flow.set('button_start', 1);","outputs":1,"noerr":0,"x":310,"y":2140,"wires":[[]]},{"id":"fd66ccdb.50a4d","type":"function","z":"160b87ab.b78738","name":"Metal","func":"flow.set('button_metal', 1);","outputs":1,"noerr":0,"x":310,"y":2180,"wires":[[]]},{"id":"7dba9fb4.cd5dd","type":"function","z":"160b87ab.b78738","name":"Item","func":"flow.set('button_item', 1);","outputs":1,"noerr":0,"x":310,"y":2220,"wires":[[]]},{"id":"cc3c4e99.f47eb","type":"function","z":"160b87ab.b78738","name":"Counter","func":"flow.set('button_counter', 1);","outputs":1,"noerr":0,"x":320,"y":2260,"wires":[[]]},{"id":"d1cb66c0.ca12c8","type":"function","z":"160b87ab.b78738","name":"End Metal","func":"flow.set('button_end_metal', 1);","outputs":1,"noerr":0,"x":320,"y":2300,"wires":[[]]},{"id":"a0819d7b.4cf63","type":"function","z":"160b87ab.b78738","name":"Logic//123","func":"//let msg = {};\n//let flow = class{};\n//let global = class{};\n//let context = class{};\n\n//==========================================================\n\nlet sensorStart = flow.get('sensor_start') || 0;\nlet sensorMetal = flow.get('sensor_metal') || 0;\nlet sensorItem = flow.get('sensor_item') || 0;\nlet sensorCounter = flow.get('sensor_counter') || 0;\nlet sensorEndMetal = flow.get('sensor_end_metal') || 0;\nlet sensorEndItem = flow.get('sensor_end_item') || 0;\nlet flagEndItem = flow.get('flag_end_item') || 0;\nlet flag = flow.get('flag') || 0;\n\n//=========================================================\n\nlet ledEnable = flow.get('led_enable') || 0;\nlet ledRun = flow.get('led_run') || 0;\nlet ledAuto = flow.get('led_auto') || 0;\nlet ledMain = flow.get('led_main') || 0;\nlet ledForward = flow.get('led_forward') || 0;\nlet ledBackward = flow.get('led_backward') || 0;\nlet ledStart = flow.get('led_start') || 0;\nlet ledMetal = flow.get('led_metal') || 0;\nlet ledItem = flow.get('led_item') || 0;\nlet ledCounter = flow.get('led_counter') || 0;\nlet ledEndMetal = flow.get('led_end_metal') || 0;\nlet ledEndItem = flow.get('led_end_item') || 0;\n\n//=========================================================\n\nlet buttonAuto = flow.get('button_auto') || 0;\nlet buttonDeployment = flow.get('button_deployment') || 0;\nlet buttonRun = flow.get('button_run') || 0;\nlet buttonReset = flow.get('button_reset') || 0;\nlet buttonEnable = flow.get('button_enable') || 0;\nlet buttonMain = flow.get('button_main') || 0;\nlet buttonForward = flow.get('button_forward') || 0;\nlet buttonBackward = flow.get('button_backward') || 0;\nlet buttonStart = flow.get('button_start') || 0;\nlet buttonMetal = flow.get('button_metal') || 0;\nlet buttonItem = flow.get('button_item') || 0;\nlet buttonCounter = flow.get('button_counter') || 0;\nlet buttonEndMetal = flow.get('button_end_metal') || 0;\nlet buttonEndItem = flow.get('button_end_item') || 0;\n\n//=========================================================\n\nlet outputEnable = flow.get('output_enable') || 0;\nlet outputMain = flow.get('output_main') || 0;\nlet outputForward = flow.get('output_forward') || 0;\nlet outputBackward = flow.get('output_backward') || 0;\n\n//=========================================================\n\nlet localAuto = flow.get('local_auto') || 0;\nlet localRun = flow.get('local_run') || 0;\nlet localReset = flow.get('local_reset') || 0;\nlet localEndItem = flow.get('local_end_item') || 0;\n\n//=========================================================\n\nlet counterStart = flow.get('counter_start') || 0;\nlet templCounterMetal = flow.get('templ_counter_metal') || 0;\nlet templCounterItem = flow.get('templ_counter_item') || [];\nlet counterCounter = flow.get('counter_counter') || [];\nlet counterEnd = flow.get('counter_end') || [];\nlet counterTotal = global.get('counter_total') || 0;\nlet counterMetal = global.get('counter_metal') || 0;\nlet counterItem = global.get('counter_item') || 0;\nlet counterLiftMetal = global.get('counter_lift_metal') || 0;\nlet counterLiftItem = global.get('counter_lift_item') || 0;\n\n//=========================================================\n\nlet outputsMatrix = flow.get('outputs_matrix') || [];\nlet inputsMatrix = flow.get('inputs_matrix') || [];\nlet inputsStatus = flow.get('inputs_status') || [];\n//=========================================================\n\nlet timer1 = flow.get('timer1') || 0;\nlet timer2 = flow.get('timer2') || 0;\nlet timer3 = flow.get('timer3') || 0;\nlet timer4 = flow.get('timer4') || 0;\n\nlet delay1 = flow.get('delay1') || 0;\nlet delay2 = flow.get('delay2') || 0;\nlet delay3 = flow.get('delay3') || 0;\nlet delay4 = flow.get('delay4') || 0;\n\n//=========================================================\n\nlet msg1 = null;\nlet msg2 = null;\nlet msg3 = null;\n\n//=========================================================\n\nfunction getMatrix(status, matrix) {\n    switch (status) {\n        case 1:\n            matrix = [1, 1, 0, 0];\n            return matrix;\n        case 2:\n            matrix = [1, 1, 1, 0];\n            return matrix;\n        case 3:\n            matrix = [1, 1, 0, 1];\n            return matrix;\n        case 4:\n            matrix.splice(1, 1, 0); // [1, 0, X, X]\n            return matrix;\n        case 5:\n            matrix = [1, 0, 0, 0];\n            return matrix;\n        case 6:\n            matrix.splice(1, 1, 1);\n            return matrix;\n        default:\n            return null;\n    }\n}\n\nfunction runAuto(matrix, counterEnd, counterStart, templCounterMetal, templCounterItem) {\n    let status = 0;\n\n    // When on conveyor only on main band there are an item\n    if((counterStart > 0 || templCounterMetal > 0 || templCounterItem.length > 0) && delay1 === 0 && delay2 === 0 && timer1 === 0 && timer2 === 0 && timer4 === 0 && delay4 === 0 && matrix[1] === 0) {\n        // Starts main band\n        status = 1;\n        if(matrix[2] ===1 || matrix[3] === 1) {\n            status = 6;\n        }\n        return getMatrix(status, matrix);\n    }\n    // When  on main band there are single item in end\n    if (counterEnd.length === 1 && counterStart === 0 && templCounterMetal === 0 && templCounterItem.length === 0 && inputsStatus[2] === 0 && inputsStatus[3] === 0) {\n\n        // Wait ???s and then stops main band\n        timer1 = 1;\n        flow.set('timer1', timer1);\n\n        if(counterEnd[0] === 1 && matrix[1] === 1) { // Starts distribute band forward\n            status = 2;\n            return getMatrix(status, matrix);\n        }\n        else if(counterEnd[0] === 0 && matrix[1] === 1) {  // Starts distribute band backward\n            timer3 = 1;\n            flow.set('timer3', timer3);\n            status = 3;\n            return getMatrix(status, matrix);\n        }\n    }\n\n    //  When the item is on distribute band and the main band should be stopped\n    else if (delay1 === 1 && timer1 === 1) {\n        timer1 = 0;\n        flow.set('timer1', timer1);\n        delay1 = 0;\n        flow.set('delay1', delay1);\n        status = 4;\n        if(matrix[1] === 1 || counterStart > 0 || templCounterMetal > 0 || templCounterItem.length > 0) {\n            status = 6;\n        }\n        \n        return getMatrix(status, matrix);\n    }\n    else if ((matrix[2] === 1 || matrix[3] === 1) && delay1 === 0 && delay2 === 0 && timer1 === 0 && timer2 === 0 && timer3 === 0 && timer4 === 0) {\n        if((inputsStatus[8] === 1 || sensorEndMetal === 1) && matrix[2] === 1) {\n            timer2 = 1;\n            flow.set('timer2', timer2);\n        }\n        return null;\n    }\n    if ((matrix[2] === 1 || matrix[3] === 1) && delay1 === 0 && delay4 === 0 && timer1 === 0 && timer4 === 0) {\n        if((flag === 1 || delay3 === 1) && matrix[3] === 1) {\n            flag = 0;\n            flow.set('flag', flag);\n        }\n        //return null;\n    }\n    if(delay2 === 1 && timer2 === 1) {\n        timer2 = 0;\n        flow.set('timer2', timer2);\n        delay2 = 0;\n        flow.set('delay2', delay2);\n        status = 5;\n        return getMatrix(status, matrix);\n    }\n    if(delay3 === 1 && timer3 === 1) {\n        timer3 = 0;\n        flow.set('timer3', timer3);\n        delay3 = 0;\n        flow.set('delay3', delay3);\n        flag = 1;\n        flow.set('flag', flag);\n        timer4 = 1;\n        flow.set('timer4', timer4);\n        return null;\n    }\n    if(timer4 === 1 && delay4 === 1 && flag === 0) {\n        timer4 = 0;\n        flow.set('timer4', timer4);\n        delay4 = 0;\n        flow.set('delay4', delay4);\n        status = 5;\n        if(matrix[1] === 1 || counterStart > 0 || templCounterMetal > 0 || templCounterItem.length > 0) {\n            status = 1;\n        }\n        \n        return getMatrix(status, matrix);\n    }\n}\n\nfunction confirmOutputs(outputsMatrix) {\n    return {\n        'payload': {\n            'value': outputsMatrix,\n            'fc': 16,\n            'unitid': 1,\n            'address': 16384,\n            'quantity': 4\n        }\n    };\n}\n\nfunction confirmInputs(inputsMatrix) {\n    return {\n        'payload': {\n            'value': inputsMatrix,\n            'fc': 16,\n            'unitid': 1,\n            'address': 16388,\n            'quantity': 5\n        }\n    };\n}\n\nlet arrayOfCounters = [counterMetal, counterItem, templCounterMetal, templCounterItem.length, counterTotal, counterLiftMetal, counterLiftItem, counterStart, counterCounter.length, counterEnd.length];\n\nfunction initialMessage(msg, arr) {\n    msg.count_metal = arr[0];           //counterMetal;\n    msg.count_item = arr[1];            //counterItem;\n    msg.templ_count_metal = arr[2];     //templCounterMetal;\n    msg.templ_count_item = arr[3];      //templCounterItem.length;\n    msg.count_total = arr[4];           //counterTotal;\n    msg.count_lift_metal = arr[5];      //counterLiftMetal;\n    msg.count_lift_item = arr[6];       //counterLiftItem;\n    msg.count_start = arr[7];           //counterStart;\n    msg.count_counter = arr[8];         //counterCounter.length;\n    msg.count_end = arr[9];             //counterEnd.length;\n\n    return msg;\n}\n\n//==========================================================\n//  Initial state\n//==========================================================\n\nlet statusInitial = context.get('status_initial') || false;\nlet isFirst = flow.get('initial') || 0;\nif (isFirst === 1 && statusInitial === false) {\n\n    timer1 = 0;\n    flow.set('timer1', timer1);\n    timer2 = 0;\n    flow.set('timer2', timer2);\n    timer3 = 0;\n    flow.set('timer3', timer3);\n    timer4 = 0;\n    flow.set('timer4', timer4);\n    delay1 = 0;\n    flow.set('delay1', delay1);\n    delay2 = 0;\n    flow.set('delay2', delay2);\n    delay3 = 0;\n    flow.set('delay3', delay3);\n    delay4 = 0;\n    flow.set('delay4', delay4);\n\n//==========================================================\n    sensorStart = inputsStatus[4];\n    flow.set('sensor_start', sensorStart);\n    sensorMetal = inputsStatus[5];\n    flow.set('sensor_metal', sensorMetal);\n    sensorItem = inputsStatus[6];\n    flow.set('sensor_item', sensorItem);\n    sensorCounter = inputsStatus[7];\n    flow.set('sensor_counter', sensorCounter);\n    sensorEndMetal = inputsStatus[8];\n    flow.set('sensor_end_metal', sensorEndMetal);\n    sensorEndItem = 0;\n    flow.set('sensor_end_item', sensorEndItem);\n\n//=========================================================\n\n    outputEnable = inputsStatus[0];\n    flow.set('output_enable', outputEnable);\n    outputMain = inputsStatus[1];\n    flow.set('output_main', outputMain);\n    outputForward = inputsStatus[2];\n    flow.set('output_forward', outputForward);\n    outputBackward = inputsStatus[3];\n    flow.set('output_backward', outputBackward);\n\n//=========================================================\n\n    buttonAuto = 0;\n    flow.set('button_auto', buttonAuto);\n    buttonDeployment = 0;\n    flow.set('button_deployment', buttonDeployment);\n    buttonRun = 0;\n    flow.set('button_run', buttonRun);\n    buttonReset = 0;\n    flow.set('button_reset', buttonReset);\n\n// TODO: Only in deployment mode\n//=========================================================\n\n    buttonEnable = 0;\n    flow.set('button_enable', buttonEnable);\n    buttonMain = 0;\n    flow.set('button_main', buttonMain);\n    buttonForward = 0;\n    flow.set('button_forward', buttonForward);\n    buttonBackward = 0;\n    flow.set('button_backward', buttonBackward);\n    buttonStart = 0;\n    flow.set('button_start', buttonStart);\n    buttonMetal = 0;\n    flow.set('button_metal', buttonMetal);\n    buttonItem = 0;\n    flow.set('button_item', buttonItem);\n    buttonCounter = 0;\n    flow.set('button_counter', buttonCounter);\n    buttonEndMetal = 0;\n    flow.set('button_end_metal', buttonEndMetal);\n    buttonEndItem = 0;\n    flow.set('button_end_item', buttonEndItem);\n\n//=========================================================\n\n    ledEnable = outputEnable;\n    flow.set('led_enable', ledEnable);\n    ledRun = 0;\n    flow.set('led_run', ledRun);\n    ledAuto = 0;\n    flow.set('led_auto', ledAuto);\n    ledMain = outputMain;\n    flow.set('led_main', ledMain);\n    ledForward = outputForward;\n    flow.set('led_forward', ledForward);\n    ledBackward = outputBackward;\n    flow.set('led_backward', ledBackward);\n    ledStart = sensorStart;\n    flow.set('led_start', ledStart);\n    ledMetal = sensorMetal;\n    flow.set('led_metal', ledMetal);\n    ledItem = sensorItem;\n    flow.set('led_item', ledItem);\n    ledCounter = sensorCounter;\n    flow.set('led_counter', ledCounter);\n    ledEndMetal = sensorEndMetal;\n    flow.set('led_end_metal', ledEndMetal);\n    ledEndItem = 0;\n    flow.set('led_end_item', ledEndItem);\n\n\n//=========================================================\n\n    localAuto = 0;\n    flow.set('local_auto', localAuto);\n    localRun = 0;\n    flow.set('local_run', localRun);\n    localReset = 0;\n    flow.set('local_reset', localReset);\n    localEndItem = 0;\n    flow.set('local_end_item', localEndItem);\n\n//=========================================================\n\n    counterStart = 0;\n    flow.set('counter_start', counterStart);\n    templCounterMetal = 0;\n    flow.set('templ_counter_metal', templCounterMetal);\n    templCounterItem = [];\n    flow.set('templ_counter_item', templCounterItem);\n    counterCounter = [];\n    flow.set('counter_counter', counterCounter);\n    counterEnd = [];\n    flow.set('counter_end', counterEnd);\n\n//=========================================================\n\n    outputsMatrix = [0, 0, 0, 0];\n    flow.set('outputs_matrix', outputsMatrix);\n    inputsMatrix = [0, 0, 0, 0, 0];\n    flow.set('inputs_matrix', inputsMatrix);\n\n//=========================================================\n\n    msg1 = initialMessage(msg, arrayOfCounters);\n    msg1.topic = \"initial\";\n    msg1.alarm = 0;\n\n    msg2 = confirmOutputs(outputsMatrix);\n    msg2.topic = \"initial1\";\n\n//=========================================================\n\n    statusInitial = true;\n    context.set('status_initial', statusInitial);\n\n    // noinspection JSAnnotator\n    return [ null, msg1, msg2, null ];\n}\n\n// When lift limit is reached\n//=================================================================\n\nlet limitFlag = global.get('lift_limit_flag') || 0;\ncounterLiftMetal = global.get('counter_lift_metal');\ncounterLiftItem = global.get('counter_lift_item');\n\nlet limit = global.get('lift_limit') || 0;\nlet statusAlarm = context.get('status_alarm') || false;\nif((counterLiftMetal === limit || counterLiftItem === limit ) && statusAlarm === false) {\n    limitFlag = 1;\n    global.set('lift_limit_flag', limitFlag);\n    msg.forward = 0;\n    msg.backward = 0;\n    msg.main = 0;\n    msg.topic = \"server/main_stop\";\n    msg.alarm = 1;\n\n    msg1 = msg;\n    msg1.alarm = 1;\n    msg1.topic = \"lift/limit\";\n\n    statusAlarm = true;\n    context.set('status_alarm', statusAlarm);\n\n    // noinspection JSAnnotator\n    return [null, msg1, null, null];\n}\nelse if(counterLiftMetal < limit && counterLiftItem < limit) {\n    if(limitFlag === 1) {\n        limitFlag = 0;\n        global.set('lift_limit_flag', limitFlag);\n    }\n    statusAlarm = false;\n    context.set('status_alarm', statusAlarm);\n}\n\n// Work in mode auto\n//==================================================================\n\nlet currentStart = inputsStatus[4];\nsensorStart = flow.get('sensor_start') || 0;\nif(sensorStart !== currentStart) {\n    sensorStart = currentStart;\n    ledStart = sensorStart;\n    flow.set('sensor_start', sensorStart);\n    flow.set('led_start', ledStart);\n    let oddStart = context.get('odd_start') || false;\n    if(flow.get('led_start') === 1 && oddStart === false) {\n        counterStart = flow.get('counter_start') || 0;\n        counterStart ++;\n        flow.set('counter_start', counterStart);\n        msg.count_start = counterStart;\n        msg1 = msg;\n\n        oddStart = true;\n        context.set('odd_start', oddStart);\n    }\n    else {\n        oddStart = false;\n        context.set('odd_start', oddStart);\n    }\n}\n\nlet currentMetal = inputsStatus[5];\nsensorMetal = flow.get('sensor_metal') || 0;\nif(sensorMetal !== currentMetal) {\n    sensorMetal = currentMetal;\n    ledMetal = sensorMetal;\n    flow.set('sensor_metal', sensorMetal);\n    flow.set('led_metal', ledMetal);\n    let oddMetal = context.get('odd_metal') || false;\n    if(flow.get('led_metal') === 1 && oddMetal === false) {\n        if (counterStart > templCounterMetal ) {\n\n            counterStart = flow.get('counter_start') || 0;\n            counterStart -= 1;\n            flow.set('counter_start', counterStart);\n            msg.count_start = counterStart;\n\n            counterMetal = global.get('counter_metal') || 0;\n            counterMetal ++;\n            global.set('counter_metal', counterMetal);\n            msg.count_metal = counterMetal;\n\n            templCounterMetal = flow.get('templ_counter_metal');\n            templCounterMetal ++;\n            flow.set('templ_counter_metal',templCounterMetal);\n            msg.templ_count_metal = templCounterMetal;\n\n            counterTotal = global.get('counter_total') || 0;\n            counterTotal ++;\n            global.set('counter_total', counterTotal);\n            msg.count_total = counterTotal;\n\n            msg1 = msg;\n            msg1.topic = \"metal/counter\";\n        }\n        oddMetal = true;\n        context.set('odd_metal', oddMetal);\n    }\n    else {\n        oddMetal = false;\n        context.set('odd_metal', oddMetal);\n    }\n}\n\nlet currentItem = inputsStatus[6];\nsensorItem = flow.get('sensor_item') || 0;\nif(sensorItem !== currentItem) {\n    sensorItem = currentItem;\n    ledItem = sensorItem;\n    flow.set('sensor_item', sensorItem);\n    flow.set('led_item', ledItem);\n    let oddItem = context.get('odd_item') || false;\n    if(flow.get('led_item') === 1 && oddItem === false) {\n        if (counterStart > 0 || templCounterMetal > 0) {\n            templCounterMetal = flow.get('templ_counter_metal');\n            let out = 0;\n            if (templCounterMetal > 0) {\n                out = 1;\n                templCounterMetal -= 1;\n                flow.set('templ_counter_metal', templCounterMetal);\n                msg.templ_count_metal = templCounterMetal;\n            }\n            else {\n\n                counterStart = flow.get('counter_start') || 0;\n                counterStart -= 1;\n                flow.set('counter_start', counterStart);\n                msg.count_start = counterStart;\n\n                counterItem = global.get('counter_item') || 0;\n                counterItem ++;\n                global.set('counter_item', counterItem);\n                msg.count_item = counterItem;\n\n                counterTotal = global.get('counter_total') || 0;\n                counterTotal ++;\n                global.set('counter_total', counterTotal);\n                msg.count_total = counterTotal;\n            }\n\n            templCounterItem = flow.get('templ_counter_item');\n            templCounterItem.push(out);\n            flow.set('templ_counter_item',templCounterItem);\n            msg.templ_count_item = templCounterItem.length;\n\n            msg1 = msg;\n            msg1.topic = \"item/counter\";\n        }\n        oddItem = true;\n        context.set('odd_item', oddItem);\n    }\n    else {\n        oddItem = false;\n        context.set('odd_item', oddItem);\n    }\n}\n\nlet currentCounter = inputsStatus[7];\nsensorCounter = flow.get('sensor_counter') || 0;\nif(sensorCounter !== currentCounter) {\n    sensorCounter = currentCounter;\n    ledCounter = sensorCounter;\n    flow.set('sensor_counter', sensorCounter);\n    flow.set('led_counter', ledCounter);\n    let oddCounter = context.get('odd_counter') || false;\n    if (flow.get('led_counter') === 1 && oddCounter === false) {\n        if (templCounterItem.length > 0 ) {\n\n            templCounterItem = flow.get('templ_counter_item');\n            let out = templCounterItem.shift();\n            flow.set('templ_counter_item', templCounterItem);\n            msg.templ_count_item = templCounterItem.length;\n\n            counterCounter = flow.get('counter_counter') || 0;\n            counterCounter.push(out);\n            flow.set('counter_counter', counterCounter);\n            msg.count_counter = counterCounter.length;\n\n            counterEnd = flow.get('counter_end') || [];\n            counterEnd.push(out);\n            flow.set('counter_end', counterEnd);\n            msg.count_end = counterEnd.length;\n\n// TODO: here output logic\n\n            msg1 = msg;\n            msg1.topic = \"counter/counter\";\n        }\n        oddCounter = true;\n        context.set('odd_counter', oddCounter);\n    } else {\n        oddCounter = false;\n        context.set('odd_counter', oddCounter);\n    }\n}\n\nlet currentEndMetal = inputsStatus[8];\nsensorEndMetal = flow.get('sensor_end_metal') || 0;\nif(sensorEndMetal !== currentEndMetal) {\n    sensorEndMetal = currentEndMetal;\n    ledEndMetal = sensorEndMetal;\n    flow.set('sensor_end_metal', sensorEndMetal);\n    flow.set('led_end_metal', ledEndMetal);\n    let oddEndMetal = context.get('odd_end_metal') || false;\n    if (flow.get('led_end_metal') === 1 && oddEndMetal === false) {\n\n        if (counterCounter.length > 0 && counterEnd.length > 0 && counterEnd[0] === 1) {\n\n            counterCounter = flow.get('counter_counter') || 0;\n            counterCounter.shift();\n            flow.set('counter_counter', counterCounter);\n            msg.count_counter = counterCounter.length;\n\n            counterEnd = flow.get('counter_end') || [];\n            counterEnd.shift();\n            flow.set('counter_end', counterEnd);\n            msg.count_end = counterEnd.length;\n\n            counterLiftMetal = global.get('counter_lift_metal') || 0;\n            counterLiftMetal++;\n            global.set('counter_lift_metal', counterLiftMetal);\n            msg.count_lift_metal = counterLiftMetal;\n\n// TODO: here logic\n\n            msg1 = msg;\n            msg1.topic = \"lift_metal/counter\";\n        }\n\n        oddEndMetal = true;\n        context.set('odd_end_metal', oddEndMetal);\n    }\n    else {\n        oddEndMetal = false;\n        context.set('odd_end_metal', oddEndMetal);\n    }\n}\n\nlet currentEndItem = flow.get('flag') || 0;\nsensorEndItem = flow.get('sensor_end_item') || 0;\nif(sensorEndItem !== currentEndItem) {\n    sensorEndItem = currentEndItem;\n    ledEndItem = sensorEndItem;\n    flow.set('sensor_end_item', sensorEndItem);\n    flow.set('led_end_item', ledEndItem);\n\n    if(currentEndItem === 1) {\n        currentEndItem = 0;\n        flow.set('flag', currentEndItem);\n    }\n\n    let oddEndItem = context.get('odd_end_item') || false;\n    if (flow.get('led_end_item') === 1 && oddEndItem === false) {\n\n        if (counterCounter.length > 0 && counterEnd.length > 0 && counterEnd[0] === 0) {\n\n            counterCounter = flow.get('counter_counter') || 0;\n            counterCounter.shift();\n            flow.set('counter_counter', counterCounter);\n            msg.count_counter = counterCounter.length;\n\n            counterEnd = flow.get('counter_end') || [];\n            counterEnd.shift();\n            flow.set('counter_end', counterEnd);\n            msg.count_end = counterEnd.length;\n\n            counterLiftItem = global.get('counter_lift_item') || 0;\n            counterLiftItem++;\n            global.set('counter_lift_item', counterLiftItem);\n            msg.count_lift_item = counterLiftItem;\n\n// TODO: here logic\n\n            msg1 = msg;\n            msg1.topic = \"lift_item/counter\";\n        }\n        oddEndItem = true;\n        context.set('odd_end_item', oddEndItem);\n    }\n    else {\n        oddEndItem = false;\n        context.set('odd_end_item', oddEndItem);\n    }\n}\n\nlet currentEnable = inputsStatus[0];\noutputEnable = flow.get('output_enable') || 0;\nif(outputEnable !== currentEnable) {\n    outputEnable = currentEnable;\n    ledEnable = outputEnable;\n    flow.set('output_enable', outputEnable);\n    flow.set('led_enable', ledEnable);\n}\n\n// Auto\nif(localAuto !== ledAuto) {\n    ledAuto = localAuto;\n    flow.set('led_auto', ledAuto);\n}\n// Run\nif(localRun !== ledRun) {\n    ledRun = localRun;\n    flow.set('led_run', ledRun);\n}\n// EndItem sensor simulate\nif(localEndItem !== ledEndItem) {\n    ledEndItem = localEndItem;\n    flow.set('led_end_item', ledEndItem);\n}\n\noutputMain = inputsStatus[1];\nlet currentMain = flow.get('output_main') || 0;\nif(outputMain !== currentMain) {\n    currentMain = outputMain;\n    ledMain = currentMain;\n    flow.set('output_main', currentMain);\n    flow.set('led_main', ledMain);\n}\n\noutputForward = inputsStatus[2];\nlet currentForward = flow.get('output_forward') || 0;\nif(outputForward !== currentForward) {\n    currentForward = outputForward;\n    ledForward = currentForward;\n    flow.set('output_forward', currentForward);\n    flow.set('led_forward', ledForward);\n}\n\noutputBackward = inputsStatus[3];\nlet currentBackward = flow.get('output_backward') || 0;\nif(outputBackward !== currentBackward) {\n    currentBackward = outputBackward;\n    ledBackward = currentBackward;\n    flow.set('output_backward', currentBackward);\n    flow.set('led_backward', ledBackward);\n}\n\nbuttonEnable = flow.get('button_enable') || 0;\nif(buttonEnable === 1) {\n    if(outputEnable === 1) {\n        outputEnable = 0;\n    }\n    else {\n        outputEnable = 1;\n    }\n\n    flow.set('output_enable', outputEnable);\n    buttonEnable = 0;\n    flow.set('button_enable', buttonEnable);\n\n    outputsMatrix = flow.get('outputs_matrix');\n    outputsMatrix[0] = outputEnable;\n    flow.set('outputs_matrix', outputsMatrix);\n\n    msg2 = confirmOutputs(outputsMatrix);\n}\n\nbuttonReset = flow.get('button_reset') || 0;\nif(buttonReset === 1) {\n    flow.set('counter_start', 0);\n    flow.set('templ_counter_metal', 0);\n    flow.set('templ_counter_item', []);\n    flow.set('counter_counter', []);\n    flow.set('counter_end', []);\n    flow.set('local_auto', 0);\n    flow.set('local_run', 0);\n    timer1 = 0;\n    flow.set('timer1', timer1);\n    timer2 = 0;\n    flow.set('timer2', timer2);\n    timer3 = 0;\n    flow.set('timer3', timer3);\n    timer4 = 0;\n    flow.set('timer4', timer4);\n    delay1 = 0;\n    flow.set('delay1', delay1);\n    delay2 = 0;\n    flow.set('delay2', delay2);\n    delay3 = 0;\n    flow.set('delay3', delay3);\n    delay4 = 0;\n    flow.set('delay4', delay4);\n    global.set('counter_total', 0);\n    global.set('counter_metal', 0);\n    global.set('counter_item', 0);\n    global.set('counter_lift_metal', 0);\n    global.set('counter_lift_item', 0);\n\n    let initialArray = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n    msg1 = initialMessage(msg, initialArray);\n    msg1.topic = \"system/reset\";\n    msg1.alarm = 0;\n\n    outputsMatrix = [0, 0, 0, 0];\n    flow.set('outputs_matrix', outputsMatrix);\n    msg2 = confirmOutputs(outputsMatrix);\n    msg2.topic = \"system/reset\";\n\n    buttonReset = 0;\n    flow.set('button_reset', buttonReset);\n}\n\noutputEnable = flow.get('output_enable') || 0;\nbuttonAuto = flow.get('button_auto') || 0;\nif(buttonAuto === 1) {\n    if(localAuto === 1) {\n        localAuto = 0;\n    }\n    else if(outputEnable === 1) {\n        localAuto = 1;\n    }\n    flow.set('local_auto', localAuto);\n    buttonAuto = 0;\n    flow.set('button_auto', buttonAuto);\n}\n\nbuttonRun = flow.get('button_run') || 0;\nif(buttonRun === 1) {\n    if(localRun === 1) {\n        localRun = 0;\n    }\n    else {\n        localRun = 1;\n    }\n    flow.set('local_run', localRun);\n    buttonRun = 0;\n    flow.set('button_run', buttonRun);\n}\n\nlet workMode = flow.get('local_auto') || 0;\nif (workMode === 0) {\n    buttonMain = flow.get('button_main') || 0;\n    if (buttonMain === 1) {\n        if (outputMain === 1) {\n            outputMain = 0;\n        } else {\n            outputMain = 1;\n        }\n        flow.set('output_main', outputMain);\n        buttonMain = 0;\n        flow.set('button_main', buttonMain);\n\n        outputsMatrix = flow.get('outputs_matrix');\n        outputsMatrix[1] = outputMain;\n        flow.set('outputs_matrix', outputsMatrix);\n\n        msg2 = confirmOutputs(outputsMatrix);\n    }\n\n    buttonForward = flow.get('button_forward') || 0;\n    if (buttonForward === 1) {\n        if (outputForward === 1) {\n            outputForward = 0;\n        } else {\n            outputForward = 1;\n        }\n        flow.set('output_forward', outputForward);\n        buttonForward = 0;\n        flow.set('button_forward', buttonForward);\n\n        outputsMatrix = flow.get('outputs_matrix');\n        outputsMatrix[2] = outputForward;\n        flow.set('outputs_matrix', outputsMatrix);\n\n        msg2 = confirmOutputs(outputsMatrix);\n    }\n\n    buttonBackward = flow.get('button_backward') || 0;\n    if (buttonBackward === 1) {\n        if (outputBackward === 1) {\n            outputBackward = 0;\n        } else {\n            outputBackward = 1;\n        }\n        flow.set('output_backward', outputBackward);\n        buttonBackward = 0;\n        flow.set('button_backward', buttonBackward);\n\n        outputsMatrix = flow.get('outputs_matrix');\n        outputsMatrix[3] = outputBackward;\n        flow.set('outputs_matrix', outputsMatrix);\n\n        msg2 = confirmOutputs(outputsMatrix);\n    }\n}\nelse {\n    let matrix = flow.get('outputs_matrix') || [];\n    delay1 = flow.get('delay1') || 0;\n    let current = inputsStatus.slice(0, 4);\n    let output = runAuto(matrix, counterEnd, counterStart, templCounterMetal, templCounterItem);\n\n    if(current !== undefined && current !== null && output !== undefined && output !== null) {\n        if(current.join(',') === output.join(',')) {\n            msg2 = null;\n        }\n        else {\n\n            flow.set('outputs_matrix', output);\n            msg2 = confirmOutputs(output);\n            msg2.topic = \"run/auto\";\n        }\n    }\n\n\n}\n\nbuttonStart = flow.get('button_start') || 0;\nif(buttonStart === 1) {\n    if(sensorStart === 1) {\n        sensorStart = 0;\n    }\n    else {\n        sensorStart = 1;\n    }\n    flow.set('sensor_start', sensorStart);\n    buttonStart = 0;\n    flow.set('button_start', buttonStart);\n\n    inputsMatrix = flow.get('inputs_matrix');\n    inputsMatrix[0] = sensorStart;\n    flow.set('inputs_matrix', inputsMatrix);\n\n    msg3 = confirmInputs(inputsMatrix);\n}\n\nbuttonMetal = flow.get('button_metal') || 0;\nif(buttonMetal === 1) {\n    if(sensorMetal === 1) {\n        sensorMetal = 0;\n    }\n    else {\n        sensorMetal = 1;\n    }\n    flow.set('sensor_metal', sensorMetal);\n    buttonMetal = 0;\n    flow.set('button_metal', buttonMetal);\n\n    inputsMatrix = flow.get('inputs_matrix');\n    inputsMatrix[1] = sensorMetal;\n    flow.set('inputs_matrix', inputsMatrix);\n\n    msg3 = confirmInputs(inputsMatrix);\n}\n\nbuttonItem = flow.get('button_item') || 0;\nif(buttonItem === 1) {\n    if(sensorItem === 1) {\n        sensorItem = 0;\n    }\n    else {\n        sensorItem = 1;\n    }\n    flow.set('sensor_item', sensorItem);\n    buttonItem = 0;\n    flow.set('button_item', buttonItem);\n\n    inputsMatrix = flow.get('inputs_matrix');\n    inputsMatrix[2] = sensorItem;\n    flow.set('inputs_matrix', inputsMatrix);\n\n    msg3 = confirmInputs(inputsMatrix);\n}\n\nbuttonCounter = flow.get('button_counter') || 0;\nif(buttonCounter === 1) {\n    if(sensorCounter === 1) {\n        sensorCounter = 0;\n    }\n    else {\n        sensorCounter = 1;\n    }\n    flow.set('sensor_counter', sensorCounter);\n    buttonCounter = 0;\n    flow.set('button_counter', buttonCounter);\n\n    inputsMatrix = flow.get('inputs_matrix');\n    inputsMatrix[3] = sensorCounter;\n    flow.set('inputs_matrix', inputsMatrix);\n\n    msg3 = confirmInputs(inputsMatrix);\n}\n\nbuttonEndMetal = flow.get('button_end_metal') || 0;\nif(buttonEndMetal === 1) {\n    if(sensorEndMetal === 1) {\n        sensorEndMetal = 0;\n    }\n    else {\n        sensorEndMetal = 1;\n    }\n    flow.set('sensor_end_metal', sensorEndMetal);\n    buttonEndMetal = 0;\n    flow.set('button_end_metal', buttonEndMetal);\n\n    inputsMatrix = flow.get('inputs_matrix');\n    inputsMatrix[4] = sensorEndMetal;\n    flow.set('inputs_matrix', inputsMatrix);\n\n    msg3 = confirmInputs(inputsMatrix);\n}\n\nbuttonEndItem = flow.get('button_end_item') || 0;\nif(buttonEndItem === 1) {\n    if(sensorEndItem === 1) {\n        sensorEndItem = 0;\n    }\n    else {\n        sensorEndItem = 1;\n    }\n    flow.set('sensor_end_item', sensorEndItem);\n\n    buttonEndItem = 0;\n    flow.set('button_end_item', buttonEndItem);\n\n    flagEndItem = sensorEndItem;\n    flow.set('flag_end_item', flagEndItem);\n\n    localEndItem = sensorEndItem;\n    flow.set('local_end_item', localEndItem);\n}\n\n// noinspection JSAnnotator\nreturn [ msg, msg1, msg2, msg3 ];","outputs":4,"noerr":0,"x":130,"y":660,"wires":[["831c0624.e08318"],["990b5139.8ef3a"],["87f3b949.04c6a8"],["87f3b949.04c6a8"]]},{"id":"a31329a5.10c1f8","type":"function","z":"160b87ab.b78738","name":"Backward","func":"let workMode = flow.get('local_auto') || 0;\nlet forward = flow.get('output_forward') || 0;\nif(workMode === 0 && forward === 0) {\n    flow.set('button_backward', 1);\n}","outputs":1,"noerr":0,"x":320,"y":2040,"wires":[[]]},{"id":"41ce8e85.76a8e","type":"debug","z":"160b87ab.b78738","name":"ERROR","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":320,"y":20,"wires":[]},{"id":"63c40102.cfeab","type":"inject","z":"160b87ab.b78738","name":"","topic":"","payload":"1","payloadType":"num","repeat":"","crontab":"","once":true,"onceDelay":0.1,"x":130,"y":100,"wires":[["d017b1b2.aca9a"]]},{"id":"6aedd492.63a63c","type":"catch","z":"160b87ab.b78738","name":"CATCH ERROR","scope":null,"uncaught":false,"x":140,"y":20,"wires":[["41ce8e85.76a8e"]]},{"id":"d017b1b2.aca9a","type":"function","z":"160b87ab.b78738","name":"Initial","func":"if(msg.payload === 1) {\n    flow.set('initial', 1);\n    \n}\nelse {\n    flow.set('initial', 0);\n    return null;\n}\nreturn msg;","outputs":1,"noerr":0,"x":270,"y":100,"wires":[["936d3e53.9a9f3"]]},{"id":"936d3e53.9a9f3","type":"change","z":"160b87ab.b78738","name":"","rules":[{"t":"change","p":"payload","pt":"msg","from":"1","fromt":"num","to":"0","tot":"num"}],"action":"","property":"","from":"","to":"","reg":false,"x":460,"y":100,"wires":[["cadb3113.7863a"]]},{"id":"cadb3113.7863a","type":"delay","z":"160b87ab.b78738","name":"50ms","pauseType":"delay","timeout":"50","timeoutUnits":"milliseconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":640,"y":100,"wires":[["d017b1b2.aca9a"]]},{"id":"c2e76ac.247b898","type":"comment","z":"160b87ab.b78738","name":"Error Catch","info":"Catchig every error in groups.","x":90,"y":60,"wires":[]},{"id":"c54d9007.ac1bf","type":"comment","z":"160b87ab.b78738","name":"Initial","info":"Initializing displays with I/O data at startup.","x":70,"y":140,"wires":[]},{"id":"a73b9add.08f648","type":"comment","z":"160b87ab.b78738","name":"Read","info":"Reads data from the server.","x":70,"y":400,"wires":[]},{"id":"120316e1.d85739","type":"comment","z":"160b87ab.b78738","name":"Write Outputs","info":"Writes data to the server's outputs.","x":90,"y":2080,"wires":[]},{"id":"f39ce88d.54df68","type":"function","z":"160b87ab.b78738","name":"Auto/Man","func":"let status = context.get('status') || 0;\nlet isFirst = flow.get('initial') || 0;\nlet input = flow.get('led_auto') || 0;\nif(isFirst === 1) {\n        if(input === 0) {\n            msg.payload = \"OFF\";\n            msg.color = \"red\";\n            context.set('status', 0);\n            return msg;\n        }\n        else {\n            msg.payload = \"ON\";\n            msg.color = \"lime\";\n            context.set('status', 1);\n            return msg;\n        }\n}\nelse {\n    if(input === status) {\n        return null;\n    }\n    else if(input === 1) {\n       msg.payload = \"ON\";\n        msg.color = \"lime\";\n        context.set('status', 1);\n        return msg; \n    }\n    else {\n        msg.payload = \"OFF\";\n        msg.color = \"red\";\n        context.set('status', 0);\n        return msg;\n    }\n}\nreturn null;","outputs":1,"noerr":0,"x":420,"y":480,"wires":[["4d922b11.b79654"]]},{"id":"7640a730.4812b8","type":"function","z":"160b87ab.b78738","name":"Enable","func":"flow.set('button_enable', 1);","outputs":1,"noerr":0,"x":320,"y":1840,"wires":[[]]},{"id":"bfe09a74.b94da8","type":"function","z":"160b87ab.b78738","name":"Reset","func":"flow.set('button_reset', 1);\nreturn msg;","outputs":1,"noerr":0,"x":310,"y":1800,"wires":[[]]},{"id":"748ddd7a.e67bd4","type":"comment","z":"160b87ab.b78738","name":"Write Inputs","info":"Writes data to the server's inputs.","x":90,"y":2380,"wires":[]},{"id":"1a86396.88d9fc7","type":"function","z":"160b87ab.b78738","name":"gl/limit","func":"global.set('lift_limit', msg.payload);\nreturn msg;","outputs":1,"noerr":0,"x":310,"y":1480,"wires":[["6e6b3b11.ce3b44"]]},{"id":"2add52c0.c6d02e","type":"function","z":"160b87ab.b78738","name":"alm","func":"let status = context.get('status') || -1;\nif(msg.alarm === undefined) {\n    return null;\n}\nlet input = msg.alarm;\nif(input !== status) {\n    if(input === 1) {\n        msg.color = \"red\";\n        msg.payload = \"the elevator limit is reached\"\n    }\n    else {\n        msg.color = \"lime\";\n        msg.payload = \"OK\"\n    }\n    context.set('status', input);\n    return msg;\n}","outputs":1,"noerr":0,"x":290,"y":1320,"wires":[["193100d9.72e60f","ca456b2b.5d64b8"]]},{"id":"ff2abfa8.c00ba","type":"mqtt out","z":"160b87ab.b78738","name":"SCADA Output","topic":"scada","qos":"","retain":"","broker":"e2f93381.8c89b","x":680,"y":1410,"wires":[]},{"id":"5610a908.784cf8","type":"mqtt in","z":"160b87ab.b78738","name":"Scada Input","topic":"scada/view","qos":"2","datatype":"auto","broker":"e2f93381.8c89b","x":130,"y":1520,"wires":[["2312ab15.2ebfb4"]]},{"id":"2312ab15.2ebfb4","type":"json","z":"160b87ab.b78738","name":"Json","property":"payload","action":"","pretty":false,"x":110,"y":1580,"wires":[["320f8c8e.e95894"]]},{"id":"320f8c8e.e95894","type":"switch","z":"160b87ab.b78738","name":"","property":"payload.topic","propertyType":"msg","rules":[{"t":"eq","v":"button/limit","vt":"str"},{"t":"eq","v":"button/auto","vt":"str"},{"t":"eq","v":"button/main","vt":"str"},{"t":"eq","v":"system/reset","vt":"str"}],"checkall":"true","repair":false,"outputs":4,"x":110,"y":1660,"wires":[["f646faf.a4bdc08"],["b35c2499.b948a8"],["cde585ba.236fb8"],["6b62362c.4beeb8"]]},{"id":"cde585ba.236fb8","type":"change","z":"160b87ab.b78738","name":"MAIN","rules":[{"t":"set","p":"topic","pt":"msg","to":"button/main","tot":"str"},{"t":"set","p":"payload","pt":"msg","to":"1","tot":"num"}],"action":"","property":"","from":"","to":"","reg":false,"x":310,"y":1680,"wires":[["ca380ddb.9a532"]]},{"id":"b35c2499.b948a8","type":"change","z":"160b87ab.b78738","name":"AUTO","rules":[{"t":"set","p":"topic","pt":"msg","to":"button/auto","tot":"str"},{"t":"set","p":"payload","pt":"msg","to":"1","tot":"num"}],"action":"","property":"","from":"","to":"","reg":false,"x":310,"y":1640,"wires":[["3c251baf.e541e4"]]},{"id":"6b62362c.4beeb8","type":"change","z":"160b87ab.b78738","name":"Reset","rules":[{"t":"set","p":"topic","pt":"msg","to":"system/reset","tot":"str"},{"t":"set","p":"payload","pt":"msg","to":"1","tot":"num"}],"action":"","property":"","from":"","to":"","reg":false,"x":310,"y":1720,"wires":[["bfe09a74.b94da8"]]},{"id":"f646faf.a4bdc08","type":"change","z":"160b87ab.b78738","name":"Limit","rules":[{"t":"set","p":"topic","pt":"msg","to":"button/limit","tot":"str"},{"t":"set","p":"payload","pt":"msg","to":"payload.value","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":310,"y":1600,"wires":[["132b08a8.695bb7"]]},{"id":"50b2fe6a.1878d","type":"function","z":"160b87ab.b78738","name":"Start Counter","func":"msg.payload = {\n    \"value\": msg.count_start,\n    \"topic\": \"start/counter\"\n}\nreturn msg;","outputs":1,"noerr":0,"x":670,"y":960,"wires":[["597d023a.74922c"]]},{"id":"ca456b2b.5d64b8","type":"function","z":"160b87ab.b78738","name":"Alarm Message","func":"let textColor = \"black\";\nif(msg.color === \"red\") {\n    textColor = \"white\";\n}\nmsg.payload = {\n    \"value\": msg.payload,\n    \"topic\": \"lift/alarm\",\n    \"color\": msg.color,\n    \"textColor\": textColor\n}\n\nreturn msg;","outputs":1,"noerr":0,"x":680,"y":1320,"wires":[["597d023a.74922c"]]},{"id":"3420775e.7b3e28","type":"function","z":"160b87ab.b78738","name":"Lift Metal Counter","func":"msg.payload = {\n    \"value\": msg.count_lift_metal,\n    \"topic\": \"lift_metal/counter\"\n}\nreturn msg;","outputs":1,"noerr":0,"x":690,"y":1240,"wires":[["597d023a.74922c"]]},{"id":"2b8445ac.96c97a","type":"function","z":"160b87ab.b78738","name":"Lift Item Counter","func":"msg.payload = {\n    \"value\": msg.count_lift_item,\n    \"topic\": \"lift_item/counter\"\n}\nreturn msg;","outputs":1,"noerr":0,"x":690,"y":1280,"wires":[["597d023a.74922c"]]},{"id":"da34378b.45e108","type":"function","z":"160b87ab.b78738","name":"End Position Counter","func":"msg.payload = {\n    \"value\": msg.count_end,\n    \"topic\": \"end_pos/counter\"\n}\nreturn msg;","outputs":1,"noerr":0,"x":700,"y":1200,"wires":[["597d023a.74922c"]]},{"id":"d193e3.c260bc2","type":"function","z":"160b87ab.b78738","name":"Inputs buff","func":"let inputs = msg.payload;\nflow.set('inputs_status', inputs);\n\n\n//let inputsStatus = flow.get('inputs_status') || [];\n//let outputsStatus = flow.get('outputs_status') || [];\n//return [ msg, msg, msg, msg, msg, msg, msg, msg, msg, msg ];","outputs":1,"noerr":0,"x":350,"y":200,"wires":[[]]},{"id":"cba42e22.b82a4","type":"function","z":"160b87ab.b78738","name":"buff","func":"let last = context.get('last_start') || -1;\nlet current = msg.count_start;\nif(msg.count_start === undefined) {\n    return [null, null];\n}\nif(current !== last) {\n    context.set('last_start', current);\n    return [ msg, msg ];\n}","outputs":2,"noerr":0,"x":290,"y":960,"wires":[["a917ce48.77709"],["50b2fe6a.1878d"]]},{"id":"f49f189.69098e8","type":"function","z":"160b87ab.b78738","name":"buff","func":"let last = context.get('last_end') || -1;\nlet current = msg.count_end;\nif(msg.count_end === undefined) {\n    return [null, null];\n}\nif(current !== last) {\n    context.set('last_end', current);\n    return [ msg, msg ];\n}","outputs":2,"noerr":0,"x":290,"y":1200,"wires":[["2094d830.c53308"],["da34378b.45e108"]]},{"id":"b1b6baeb.0457a8","type":"function","z":"160b87ab.b78738","name":"buff","func":"let status = context.get('status') || -1;\nlet input = msg.count_lift_metal;\nif(msg.count_lift_metal === undefined) {\n    return [null, null];\n}\nif(input !== status) {\n    context.set('status', input);\n    return [msg, msg];\n}","outputs":2,"noerr":0,"x":290,"y":1240,"wires":[["9e71ee03.91e9d"],["3420775e.7b3e28"]]},{"id":"5743a1d4.22282","type":"function","z":"160b87ab.b78738","name":"buff","func":"let status = context.get('status') || -1;\nif(msg.count_lift_item === undefined) {\n    return [null, null];\n}\nlet input = msg.count_lift_item;\nif(input !== status) {\n    context.set('status', input);\n    return [msg, msg];\n}","outputs":2,"noerr":0,"x":290,"y":1280,"wires":[["55e3e9d6.b71d18"],["2b8445ac.96c97a"]]},{"id":"6e6b3b11.ce3b44","type":"function","z":"160b87ab.b78738","name":"limit for scada","func":"msg.payload = {\n    \"value\":msg.payload,\n    \"topic\":\"button/limit\"\n}\nreturn msg;","outputs":1,"noerr":0,"x":340,"y":1430,"wires":[["597d023a.74922c"]]},{"id":"4f9214ee.25932c","type":"function","z":"160b87ab.b78738","name":"buff","func":"let last = context.get('last_metal') || -1;\nlet current = msg.count_metal;\nif(msg.count_metal === undefined) {\n    return [null, null];\n}\nif(current !== last) {\n    context.set('last_metal', current);\n    return [ msg, msg ];\n}","outputs":2,"noerr":0,"x":290,"y":1040,"wires":[["bbf98e87.f1fdd"],["7359f8a5.ce3568"]]},{"id":"7359f8a5.ce3568","type":"function","z":"160b87ab.b78738","name":"Metal Counter","func":"msg.payload = {\n    \"value\": msg.count_metal,\n    \"topic\": \"metal/counter\"\n}\nreturn msg;","outputs":1,"noerr":0,"x":680,"y":1040,"wires":[["597d023a.74922c"]]},{"id":"6269476.d4a5eb8","type":"function","z":"160b87ab.b78738","name":"buff","func":"let last = context.get('last_item') || -1;\nlet current = msg.count_item;\nif(msg.count_item === undefined) {\n    return [null, null];\n}\nif(current !== last) {\n    context.set('last_item', current);\n    return [ msg, msg ];\n}","outputs":2,"noerr":0,"x":290,"y":1120,"wires":[["36fe4272.3ed57e"],["6245c29f.9ab7bc"]]},{"id":"2b1d3ebd.99b462","type":"function","z":"160b87ab.b78738","name":"buff","func":"let last = context.get('last_total') || -1;\nlet current = msg.count_total;\nif(msg.count_total === undefined) {\n    return [null, null];\n}\nif(current !== last) {\n    context.set('last_total', current);\n    return [ msg, msg ];\n}","outputs":2,"noerr":0,"x":290,"y":1160,"wires":[["b5bd221b.ac521"],["fa341366.df63d"]]},{"id":"6245c29f.9ab7bc","type":"function","z":"160b87ab.b78738","name":"Item Counter","func":"msg.payload = {\n    \"value\": msg.count_item,\n    \"topic\": \"nonmetal/counter\"\n}\nreturn msg;","outputs":1,"noerr":0,"x":670,"y":1120,"wires":[["597d023a.74922c"]]},{"id":"fa341366.df63d","type":"function","z":"160b87ab.b78738","name":"Total Counter","func":"msg.payload = {\n    \"value\": msg.count_total,\n    \"topic\": \"total/counter\"\n}\nreturn msg;","outputs":1,"noerr":0,"x":670,"y":1160,"wires":[["597d023a.74922c"]]},{"id":"58ed53c.f902aac","type":"function","z":"160b87ab.b78738","name":"","func":"msg.payload = { \n    'fc': 3,\n    'unitid': 1,\n    'address': 16384 ,\n    'quantity': 9\n}\nreturn msg;","outputs":1,"noerr":0,"x":130,"y":300,"wires":[["c766d2e4.69ca3"]]},{"id":"d5454056.2aae6","type":"inject","z":"160b87ab.b78738","name":"","topic":"","payload":"","payloadType":"date","repeat":"0.05","crontab":"","once":false,"onceDelay":0.1,"x":150,"y":340,"wires":[["58ed53c.f902aac","a0819d7b.4cf63","ced4a46f.8c1738","95aea035.e68c2","8db1e317.0f4ef","f97b6ee.7aa069","f7c6a35c.5513e"]]},{"id":"17a92b8f.ae0434","type":"function","z":"160b87ab.b78738","name":"Run","func":"let status = context.get('status') || 0;\nlet isFirst = flow.get('initial') || 0;\nlet input = flow.get('led_run') || 0;\nif(isFirst === 1) {\n        if(input === 0) {\n            msg.payload = \"OFF\";\n            msg.color = \"red\";\n            context.set('status', 0);\n            return msg;\n        }\n        else {\n            msg.payload = \"ON\";\n            msg.color = \"lime\";\n            context.set('status', 1);\n            return msg;\n        }\n}\nelse {\n    if(input === status) {\n        return null;\n    }\n    else if(input === 1) {\n       msg.payload = \"ON\";\n        msg.color = \"lime\";\n        context.set('status', 1);\n        return msg; \n    }\n    else {\n        msg.payload = \"OFF\";\n        msg.color = \"red\";\n        context.set('status', 0);\n        return msg;\n    }\n}\nreturn null;","outputs":1,"noerr":0,"x":410,"y":520,"wires":[["433bfc20.8f2af4"]]},{"id":"8684aa89.4abb98","type":"function","z":"160b87ab.b78738","name":"End Item","func":"let status = context.get('status') || 0;\nlet isFirst = flow.get('initial') || 0;\nlet input = flow.get('led_end_item') || 0;\nif(isFirst === 1) {\n        if(input === 0) {\n            msg.payload = \"OFF\";\n            msg.color = \"red\";\n            context.set('status', 0);\n            return msg;\n        }\n        else {\n            msg.payload = \"ON\";\n            msg.color = \"lime\";\n            context.set('status', 1);\n            return msg;\n        }\n}\nelse {\n    if(input === status) {\n        return null;\n    }\n    else if(input === 1) {\n       msg.payload = \"ON\";\n        msg.color = \"lime\";\n        context.set('status', 1);\n        return msg; \n    }\n    else {\n        msg.payload = \"OFF\";\n        msg.color = \"red\";\n        context.set('status', 0);\n        return msg;\n    }\n}\nreturn null;","outputs":1,"noerr":0,"x":420,"y":880,"wires":[["5577a21f.a56fec"]]},{"id":"831c0624.e08318","type":"function","z":"160b87ab.b78738","name":"","func":"return msg;","outputs":1,"noerr":0,"x":270,"y":640,"wires":[["f23b7b3f.fb64c8","f39ce88d.54df68","17a92b8f.ae0434","27f09d87.901aa2","48bddf3b.a3e8f","6671da13.12ec54","7ee2c0a0.dec32","1488ca19.233126","1ba59379.ba3a8d","74b4082c.964d08","e44a2d16.d2b97","8684aa89.4abb98"]]},{"id":"990b5139.8ef3a","type":"function","z":"160b87ab.b78738","name":"","func":"\nreturn msg;","outputs":1,"noerr":0,"x":150,"y":1020,"wires":[["b1b6baeb.0457a8","f49f189.69098e8","cba42e22.b82a4","5743a1d4.22282","2add52c0.c6d02e","4f9214ee.25932c","6269476.d4a5eb8","2b1d3ebd.99b462","9ab29f8.54b9a6","4ef364c3.9ec98c"]]},{"id":"72be8cd1.e0ef34","type":"function","z":"160b87ab.b78738","name":"Run","func":"flow.set('button_run', 1);","outputs":1,"noerr":0,"x":310,"y":1880,"wires":[[]]},{"id":"3c251baf.e541e4","type":"function","z":"160b87ab.b78738","name":"Auto","func":"flow.set('button_auto', 1);","outputs":1,"noerr":0,"x":310,"y":1920,"wires":[[]]},{"id":"ce217901.a770f8","type":"function","z":"160b87ab.b78738","name":"End Item","func":"flow.set('button_end_item', 1);","outputs":1,"noerr":0,"x":320,"y":2340,"wires":[[]]},{"id":"9ab29f8.54b9a6","type":"function","z":"160b87ab.b78738","name":"buff","func":"let last = context.get('last_temp_metal') || -1;\nlet current = msg.templ_count_metal;\nif(msg.templ_count_metal === undefined) {\n    return [null, null];\n}\nif(current !== last) {\n    context.set('last_temp_metal', current);\n    return [ msg, msg ];\n}","outputs":2,"noerr":0,"x":290,"y":1000,"wires":[["bc4f2d54.4aa19"],["41eba10d.8138d"]]},{"id":"41eba10d.8138d","type":"function","z":"160b87ab.b78738","name":"Templ Metal Counter","func":"msg.payload = {\n    \"value\": msg.templ_count_metal,\n    \"topic\": \"templ/metal_counter\"\n}\nreturn msg;","outputs":1,"noerr":0,"x":700,"y":1000,"wires":[["597d023a.74922c"]]},{"id":"4ef364c3.9ec98c","type":"function","z":"160b87ab.b78738","name":"buff","func":"let last = context.get('last_templ_item') || -1;\nlet current = msg.templ_count_item;\nif(msg.templ_count_item === undefined) {\n    return [null, null];\n}\nif(current !== last) {\n    context.set('last_templ_item', current);\n    return [ msg, msg ];\n}","outputs":2,"noerr":0,"x":290,"y":1080,"wires":[["27d86b9e.994854"],["c1e39e2c.b4674"]]},{"id":"c1e39e2c.b4674","type":"function","z":"160b87ab.b78738","name":"Templ Item Counter","func":"msg.payload = {\n    \"value\": msg.templ_count_item,\n    \"topic\": \"templ/item_counter\"\n}\nreturn msg;","outputs":1,"noerr":0,"x":690,"y":1080,"wires":[["597d023a.74922c"]]},{"id":"95aea035.e68c2","type":"function","z":"160b87ab.b78738","name":"? set flag","func":"let action = flow.get('flag_end_item') || 0;\nif(action === 1) {\n    action = 0;\n    flow.set('flag_end_item', action);\n    msg.payload = 1;\n    return msg;\n}\nreturn null;","outputs":1,"noerr":0,"x":420,"y":400,"wires":[["e8cbeb6.74c8918"]]},{"id":"e8cbeb6.74c8918","type":"delay","z":"160b87ab.b78738","name":"5ms","pauseType":"delay","timeout":"5","timeoutUnits":"milliseconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":550,"y":400,"wires":[["51ad3795.cd1bc8"]]},{"id":"51ad3795.cd1bc8","type":"function","z":"160b87ab.b78738","name":"flag = 1","func":"flow.set('flag', 1);\n","outputs":1,"noerr":0,"x":700,"y":400,"wires":[[]]},{"id":"e4d32778.003078","type":"modbus-response","z":"160b87ab.b78738","name":"","registerShowMax":20,"x":370,"y":240,"wires":[]},{"id":"c766d2e4.69ca3","type":"modbus-flex-getter","z":"160b87ab.b78738","name":"Input_Registers","showStatusActivities":false,"showErrors":false,"logIOActivities":false,"server":"eb862384.17ef08","useIOFile":false,"ioFile":"","useIOForPayload":false,"x":140,"y":220,"wires":[["d193e3.c260bc2"],["e4d32778.003078"]]},{"id":"87f3b949.04c6a8","type":"modbus-flex-write","z":"160b87ab.b78738","name":"","showStatusActivities":false,"showErrors":false,"server":"eb862384.17ef08","x":250,"y":900,"wires":[[],[]]},{"id":"132b08a8.695bb7","type":"ui_numeric","z":"160b87ab.b78738","name":"limit","label":"Lift limit","tooltip":"","group":"eb9f7d68.6ff01","order":12,"width":0,"height":0,"passthru":false,"topic":"limit/display","format":"{{value}}","min":"1","max":"15","step":1,"x":310,"y":1530,"wires":[["1a86396.88d9fc7"]]},{"id":"1d9ea513.6f1e7b","type":"ui_button","z":"160b87ab.b78738","name":"button/enable","group":"eb9f7d68.6ff01","order":2,"width":3,"height":1,"passthru":false,"label":"ENABLE","tooltip":"","color":"black","bgcolor":"orange","icon":"","payload":"1","payloadType":"num","topic":"button/enable","x":140,"y":1840,"wires":[["7640a730.4812b8"]]},{"id":"d94919b0.201d68","type":"ui_button","z":"160b87ab.b78738","name":"button/backward","group":"eb9f7d68.6ff01","order":8,"width":3,"height":1,"passthru":false,"label":"BACKWARD","tooltip":"","color":"","bgcolor":"","icon":"","payload":"1","payloadType":"num","topic":"button/backward","x":140,"y":2040,"wires":[["a31329a5.10c1f8"]]},{"id":"de69a835.9e83f8","type":"ui_button","z":"160b87ab.b78738","name":"button/forward","group":"eb9f7d68.6ff01","order":6,"width":3,"height":1,"passthru":false,"label":"FORWARD","tooltip":"","color":"","bgcolor":"","icon":"","payload":"1","payloadType":"num","topic":"button/forward","x":140,"y":2000,"wires":[["c3c076a6.b87738"]]},{"id":"fb0c0df8.5e737","type":"ui_button","z":"160b87ab.b78738","name":"button/main","group":"eb9f7d68.6ff01","order":4,"width":3,"height":1,"passthru":true,"label":"MAIN","tooltip":"","color":"","bgcolor":"","icon":"","payload":"1","payloadType":"num","topic":"button/main","x":130,"y":1960,"wires":[["ca380ddb.9a532"]]},{"id":"f58d6fa1.dc245","type":"ui_button","z":"160b87ab.b78738","name":"button/A#M","group":"eb9f7d68.6ff01","order":10,"width":3,"height":1,"passthru":false,"label":"Auto","tooltip":"","color":"yellow","bgcolor":"","icon":"","payload":"1","payloadType":"num","topic":"auto","x":130,"y":1920,"wires":[["3c251baf.e541e4"]]},{"id":"7f69a6e4.521dd8","type":"ui_button","z":"160b87ab.b78738","name":"button/start","group":"d51ef907.bef4d8","order":2,"width":3,"height":1,"passthru":false,"label":"SENSOR START","tooltip":"","color":"","bgcolor":"","icon":"","payload":"1","payloadType":"num","topic":"button/start","x":130,"y":2140,"wires":[["5af98ca6.a8ec94"]]},{"id":"932ca833.fd1b88","type":"ui_button","z":"160b87ab.b78738","name":"button/metal","group":"d51ef907.bef4d8","order":4,"width":3,"height":1,"passthru":false,"label":"SENSOR METAL","tooltip":"","color":"","bgcolor":"","icon":"","payload":"1","payloadType":"num","topic":"button/metal","x":130,"y":2180,"wires":[["fd66ccdb.50a4d"]]},{"id":"2f74bf87.3419e","type":"ui_button","z":"160b87ab.b78738","name":"button/item","group":"d51ef907.bef4d8","order":6,"width":3,"height":1,"passthru":false,"label":"SENSOR ITEM","tooltip":"","color":"","bgcolor":"","icon":"","payload":"1","payloadType":"num","topic":"button/item","x":130,"y":2220,"wires":[["7dba9fb4.cd5dd"]]},{"id":"6a53d9ac.accc98","type":"ui_button","z":"160b87ab.b78738","name":"button/counter","group":"d51ef907.bef4d8","order":8,"width":3,"height":1,"passthru":false,"label":"SENSOR COUNTER","tooltip":"","color":"","bgcolor":"#FF00FF","icon":"","payload":"1","payloadType":"num","topic":"button/counter","x":140,"y":2260,"wires":[["cc3c4e99.f47eb"]]},{"id":"51220028.b9671","type":"ui_button","z":"160b87ab.b78738","name":"button/end_metal","group":"d51ef907.bef4d8","order":10,"width":3,"height":1,"passthru":false,"label":"SENSOR END METAL","tooltip":"","color":"","bgcolor":"","icon":"","payload":"1","payloadType":"num","topic":"button/end_metal","x":150,"y":2300,"wires":[["d1cb66c0.ca12c8"]]},{"id":"61e79ab5.cad594","type":"ui_button","z":"160b87ab.b78738","name":"button/reset","group":"eb9f7d68.6ff01","order":13,"width":6,"height":1,"passthru":false,"label":"RESET","tooltip":"","color":"white","bgcolor":"red","icon":"","payload":"1","payloadType":"num","topic":"system/reset","x":130,"y":1800,"wires":[["bfe09a74.b94da8"]]},{"id":"10e59241.2f3bae","type":"ui_button","z":"160b87ab.b78738","name":"button/run","group":"eb9f7d68.6ff01","order":12,"width":3,"height":1,"passthru":false,"label":"Run","tooltip":"","color":"","bgcolor":"","icon":"","payload":"1","payloadType":"num","topic":"run","x":120,"y":1880,"wires":[["72be8cd1.e0ef34"]]},{"id":"79ba5011.f7067","type":"ui_button","z":"160b87ab.b78738","name":"button/end_item","group":"d51ef907.bef4d8","order":12,"width":3,"height":1,"passthru":false,"label":"SENSOR END ITEM","tooltip":"","color":"","bgcolor":"","icon":"","payload":"1","payloadType":"num","topic":"button/end_item","x":140,"y":2340,"wires":[["ce217901.a770f8"]]},{"id":"6fcb340d.b9ba9c","type":"ui_text","z":"160b87ab.b78738","group":"eb9f7d68.6ff01","order":1,"width":3,"height":1,"name":"output/enable","label":"Enable","format":"<font color={{msg.color}} ><i class=\"fa fa-circle\" style=\"font-size:24px;\"></i></font>","layout":"row-spread","x":620,"y":440,"wires":[]},{"id":"6cf7e4f5.a01fac","type":"ui_text","z":"160b87ab.b78738","group":"eb9f7d68.6ff01","order":3,"width":3,"height":1,"name":"output/main","label":"Main Band","format":"<font color={{msg.color}} ><i class=\"fa fa-circle\" style=\"font-size:24px;\"></i></font>","layout":"row-spread","x":610,"y":560,"wires":[]},{"id":"cf20bb98.69b508","type":"ui_text","z":"160b87ab.b78738","group":"eb9f7d68.6ff01","order":5,"width":3,"height":1,"name":"output/forward","label":"Distribution Forward","format":"<font color={{msg.color}} ><i class=\"fa fa-circle\" style=\"font-size:24px;\"></i></font>","layout":"row-spread","x":620,"y":600,"wires":[]},{"id":"781315b8.1022ec","type":"ui_text","z":"160b87ab.b78738","group":"eb9f7d68.6ff01","order":7,"width":3,"height":1,"name":"output/backward","label":"Distribution Backward","format":"<font color={{msg.color}} ><i class=\"fa fa-circle\" style=\"font-size:24px;\"></i></font>","layout":"row-spread","x":620,"y":640,"wires":[]},{"id":"c26f8cea.f682f","type":"ui_text","z":"160b87ab.b78738","group":"d51ef907.bef4d8","order":1,"width":3,"height":1,"name":"sensor/start","label":"Start","format":"<font color={{msg.color}} ><i class=\"fa fa-circle\" style=\"font-size:24px;\"></i></font>","layout":"row-spread","x":610,"y":680,"wires":[]},{"id":"410437d.d4fe0c8","type":"ui_text","z":"160b87ab.b78738","group":"d51ef907.bef4d8","order":3,"width":3,"height":1,"name":"sensor/metal","label":"Metal","format":"<font color={{msg.color}} ><i class=\"fa fa-circle\" style=\"font-size:24px;\"></i></font>","layout":"row-spread","x":610,"y":720,"wires":[]},{"id":"856ff086.9b486","type":"ui_text","z":"160b87ab.b78738","group":"d51ef907.bef4d8","order":5,"width":3,"height":1,"name":"sensor/item","label":"Item","format":"<font color={{msg.color}} ><i class=\"fa fa-circle\" style=\"font-size:24px;\"></i></font>","layout":"row-spread","x":610,"y":760,"wires":[]},{"id":"308e8f64.b2697","type":"ui_text","z":"160b87ab.b78738","group":"d51ef907.bef4d8","order":7,"width":3,"height":1,"name":"sensor/counter","label":"Counter","format":"<font color={{msg.color}} ><i class=\"fa fa-circle\" style=\"font-size:24px;\"></i></font>","layout":"row-spread","x":620,"y":800,"wires":[]},{"id":"f59e5281.0950e","type":"ui_text","z":"160b87ab.b78738","group":"d51ef907.bef4d8","order":9,"width":3,"height":1,"name":"sensor/end_metal","label":"End Metal","format":"<font color={{msg.color}} ><i class=\"fa fa-circle\" style=\"font-size:24px;\"></i></font>","layout":"row-spread","x":630,"y":840,"wires":[]},{"id":"4d922b11.b79654","type":"ui_text","z":"160b87ab.b78738","group":"eb9f7d68.6ff01","order":9,"width":3,"height":1,"name":"auto/man","label":"Auto","format":"<font color={{msg.color}} ><i class=\"fa fa-circle\" style=\"font-size:24px;\"></i></font>","layout":"row-spread","x":600,"y":480,"wires":[]},{"id":"b5bd221b.ac521","type":"ui_text","z":"160b87ab.b78738","group":"7b5a0c8c.3bd514","order":1,"width":6,"height":1,"name":"totalcounter","label":"TOTAL COUNT","format":"{{msg.count_total}}","layout":"col-center","x":450,"y":1160,"wires":[]},{"id":"bbf98e87.f1fdd","type":"ui_text","z":"160b87ab.b78738","group":"7b5a0c8c.3bd514","order":2,"width":3,"height":1,"name":"metalcounter","label":"METAL COUNT","format":"{{msg.count_metal}}","layout":"row-spread","x":450,"y":1040,"wires":[]},{"id":"36fe4272.3ed57e","type":"ui_text","z":"160b87ab.b78738","group":"7b5a0c8c.3bd514","order":3,"width":3,"height":1,"name":"itemcounter","label":"ITEM COUNT","format":"{{msg.count_item}}","layout":"row-spread","x":450,"y":1120,"wires":[]},{"id":"a917ce48.77709","type":"ui_text","z":"160b87ab.b78738","group":"7b5a0c8c.3bd514","order":6,"width":3,"height":1,"name":"start/position","label":"START","format":"{{msg.count_start}}","layout":"row-spread","x":450,"y":960,"wires":[]},{"id":"9e71ee03.91e9d","type":"ui_text","z":"160b87ab.b78738","group":"7b5a0c8c.3bd514","order":4,"width":3,"height":1,"name":"lift/metal_counter","label":"LIFT-METAL","format":"{{msg.count_lift_metal}}","layout":"row-spread","x":470,"y":1240,"wires":[]},{"id":"2094d830.c53308","type":"ui_text","z":"160b87ab.b78738","group":"7b5a0c8c.3bd514","order":7,"width":3,"height":1,"name":"end/position","label":"END","format":"{{msg.count_end}}","layout":"row-spread","x":450,"y":1200,"wires":[]},{"id":"55e3e9d6.b71d18","type":"ui_text","z":"160b87ab.b78738","group":"7b5a0c8c.3bd514","order":5,"width":3,"height":1,"name":"lift/item_counter","label":"LIFT-ITEM","format":"{{msg.count_lift_item}}","layout":"row-spread","x":460,"y":1280,"wires":[]},{"id":"193100d9.72e60f","type":"ui_text","z":"160b87ab.b78738","group":"7b5a0c8c.3bd514","order":8,"width":6,"height":1,"name":"lift_alarm","label":"ALARM","format":"<font color= {{msg.color}} > {{msg.payload}} </font>","layout":"row-spread","x":440,"y":1320,"wires":[]},{"id":"433bfc20.8f2af4","type":"ui_text","z":"160b87ab.b78738","group":"eb9f7d68.6ff01","order":11,"width":3,"height":1,"name":"run","label":"Run","format":"<font color={{msg.color}} ><i class=\"fa fa-circle\" style=\"font-size:24px;\"></i></font>","layout":"row-spread","x":590,"y":520,"wires":[]},{"id":"5577a21f.a56fec","type":"ui_text","z":"160b87ab.b78738","group":"d51ef907.bef4d8","order":11,"width":3,"height":1,"name":"sensor/end_item","label":"End Item","format":"<font color={{msg.color}} ><i class=\"fa fa-circle\" style=\"font-size:24px;\"></i></font>","layout":"row-spread","x":630,"y":880,"wires":[]},{"id":"bc4f2d54.4aa19","type":"ui_text","z":"160b87ab.b78738","group":"7b5a0c8c.3bd514","order":2,"width":3,"height":1,"name":"templ/metal_counter","label":"TEMPL METAL COUNT","format":"{{msg.templ_count_metal}}","layout":"row-spread","x":480,"y":1000,"wires":[]},{"id":"27d86b9e.994854","type":"ui_text","z":"160b87ab.b78738","group":"7b5a0c8c.3bd514","order":3,"width":3,"height":1,"name":"templ/item_counter","label":"TEMPL ITEM COUNT","format":"{{msg.templ_count_item}}","layout":"row-spread","x":470,"y":1080,"wires":[]},{"id":"d01dec97.45b14","type":"delay","z":"160b87ab.b78738","name":"delay1","pauseType":"delay","timeout":"3","timeoutUnits":"seconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":930,"y":260,"wires":[["c82bc45f.6e78f8"]]},{"id":"296441be.1a167e","type":"delay","z":"160b87ab.b78738","name":"delay2","pauseType":"delay","timeout":"2.5","timeoutUnits":"seconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":930,"y":300,"wires":[["c82bc45f.6e78f8"]]},{"id":"ced4a46f.8c1738","type":"function","z":"160b87ab.b78738","name":"","func":"let input = flow.get('timer1') || 0;\nlet status = context.get('status') || false;\nif(input === 1 && status === false) {\n    msg.topic = \"timer1\";\n    context.set('status', true);\n    return msg;\n}\nif(input === 0 && status === true) {\n    context.set('status', false);\n    return null;\n}","outputs":1,"noerr":0,"x":730,"y":220,"wires":[["d01dec97.45b14"]]},{"id":"c82bc45f.6e78f8","type":"function","z":"160b87ab.b78738","name":"","func":"let topic = msg.topic;\nif(topic === \"timer1\") {\n    flow.set('delay1', 1);\n    msg.payload = flow.get('delay1') + \" => delay 1\";\n    return msg;\n}\nif(topic === \"timer2\") {\n    flow.set('delay2', 1);\n    msg.payload = flow.get('delay2') + \" => delay 2\";\n    return msg;\n}\nif(topic === \"timer3\") {\n    flow.set('delay3', 1);\n    msg.payload = flow.get('delay3') + \" => delay 3\";\n    return msg;\n}\nif(topic === \"timer4\") {\n    flow.set('delay4', 1);\n    msg.payload = flow.get('delay4') + \" => delay 4\";\n    return msg;\n}","outputs":1,"noerr":0,"x":1070,"y":340,"wires":[["d1654548.004128"]]},{"id":"8db1e317.0f4ef","type":"function","z":"160b87ab.b78738","name":"","func":"let input = flow.get('timer2') || 0;\nlet status = context.get('status') || false;\nif(input === 1 && status === false) {\n    msg.topic = \"timer2\";\n    context.set('status', true);\n    return msg;\n}\nif(input === 0 && status === true) {\n    context.set('status', false);\n    return null;\n}","outputs":1,"noerr":0,"x":770,"y":300,"wires":[["296441be.1a167e"]]},{"id":"597d023a.74922c","type":"function","z":"160b87ab.b78738","name":"","func":"\nreturn msg;","outputs":1,"noerr":0,"x":650,"y":1360,"wires":[["ff2abfa8.c00ba"]]},{"id":"d1654548.004128","type":"debug","z":"160b87ab.b78738","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":970,"y":580,"wires":[]},{"id":"f97b6ee.7aa069","type":"function","z":"160b87ab.b78738","name":"","func":"let input = flow.get('timer3') || 0;\nlet status = context.get('status') || false;\nif(input === 1 && status === false) {\n    msg.topic = \"timer3\";\n    context.set('status', true);\n    return msg;\n}\nif(input === 0 && status === true) {\n    context.set('status', false);\n    return null;\n}","outputs":1,"noerr":0,"x":630,"y":340,"wires":[["f66a12a4.f4908"]]},{"id":"f66a12a4.f4908","type":"delay","z":"160b87ab.b78738","name":"delay3","pauseType":"delay","timeout":"9","timeoutUnits":"seconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":930,"y":340,"wires":[["c82bc45f.6e78f8"]]},{"id":"7c266925.b70c48","type":"delay","z":"160b87ab.b78738","name":"delay4","pauseType":"delay","timeout":"3.5","timeoutUnits":"seconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":930,"y":420,"wires":[["c82bc45f.6e78f8"]]},{"id":"f7c6a35c.5513e","type":"function","z":"160b87ab.b78738","name":"","func":"let input = flow.get('timer4') || 0;\nlet status = context.get('status') || false;\nif(input === 1 && status === false) {\n    msg.topic = \"timer4\";\n    context.set('status', true);\n    return msg;\n}\nif(input === 0 && status === true) {\n    context.set('status', false);\n    return null;\n}","outputs":1,"noerr":0,"x":790,"y":360,"wires":[["7c266925.b70c48"]]},{"id":"e2f93381.8c89b","type":"mqtt-broker","z":"","name":"MyMQTT","broker":"localhost","port":"1883","clientid":"","usetls":false,"compatmode":true,"keepalive":"60","cleansession":true,"birthTopic":"","birthQos":"0","birthPayload":"","closeTopic":"","closeQos":"0","closePayload":"","willTopic":"","willQos":"0","willPayload":""},{"id":"eb862384.17ef08","type":"modbus-client","z":"","name":"","clienttype":"tcp","bufferCommands":true,"stateLogEnabled":false,"tcpHost":"172.20.20.111","tcpPort":"502","tcpType":"DEFAULT","serialPort":"/dev/ttyUSB","serialType":"RTU-BUFFERD","serialBaudrate":"9600","serialDatabits":"8","serialStopbits":"1","serialParity":"none","serialConnectionDelay":"100","unit_id":1,"commandDelay":1,"clientTimeout":1000,"reconnectTimeout":2000},{"id":"eb9f7d68.6ff01","type":"ui_group","z":"","name":"Control","tab":"16979172.8fcfef","disp":true,"width":"6","collapse":false},{"id":"d51ef907.bef4d8","type":"ui_group","z":"","name":"Sensors","tab":"16979172.8fcfef","disp":true,"width":"6","collapse":false},{"id":"7b5a0c8c.3bd514","type":"ui_group","z":"","name":"Display","tab":"16979172.8fcfef","order":1,"disp":true,"width":"6","collapse":false},{"id":"16979172.8fcfef","type":"ui_tab","z":"","name":"LentaNew","icon":"dashboard","disabled":false,"hidden":false}]