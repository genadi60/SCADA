[{"id":"7e8645a7.57674c","type":"tab","label":"LentaNew","disabled":false,"info":""},{"id":"7e31b154.8a6e8","type":"function","z":"7e8645a7.57674c","name":"Enable","func":"let status = context.get('status') || 0;\nlet isFirst = flow.get('initial') || 0;\nlet input = flow.get('led_enable') || 0;\nif(isFirst === 1) {\n        if(input === 0) {\n            msg.payload = \"OFF\";\n            msg.color = \"red\";\n            context.set('status', 0);\n            return msg;\n        }\n        else {\n            msg.payload = \"ON\";\n            msg.color = \"lime\";\n            context.set('status', 1);\n            return msg;\n        }\n}\nelse {\n    if(input === status) {\n        return null;\n    }\n    else if(input === 1) {\n       msg.payload = \"ON\";\n        msg.color = \"lime\";\n        context.set('status', 1);\n        return msg; \n    }\n    else {\n        msg.payload = \"OFF\";\n        msg.color = \"red\";\n        context.set('status', 0);\n        return msg;\n    }\n}\nreturn null;\n","outputs":1,"noerr":0,"x":420,"y":440,"wires":[["701b15f9.342a8c"]]},{"id":"22284bee.329424","type":"function","z":"7e8645a7.57674c","name":"Main","func":"let status = context.get('status') || 0;\nlet isFirst = flow.get('initial') || 0;\nlet input = flow.get('led_main') || 0;\nif(isFirst === 1) {\n        if(input === 0) {\n            msg.payload = \"OFF\";\n            msg.color = \"red\";\n            context.set('status', 0);\n            return msg;\n        }\n        else {\n            msg.payload = \"ON\";\n            msg.color = \"lime\";\n            context.set('status', 1);\n            return msg;\n        }\n}\nelse {\n    if(input === status) {\n        return null;\n    }\n    else if(input === 1) {\n       msg.payload = \"ON\";\n        msg.color = \"lime\";\n        context.set('status', 1);\n        return msg; \n    }\n    else {\n        msg.payload = \"OFF\";\n        msg.color = \"red\";\n        context.set('status', 0);\n        return msg;\n    }\n}\nreturn null;","outputs":1,"noerr":0,"x":410,"y":560,"wires":[["73cbb21c.97e23c"]]},{"id":"9757cab.cfdaa38","type":"function","z":"7e8645a7.57674c","name":"Forward","func":"let status = context.get('status') || 0;\nlet isFirst = flow.get('initial') || 0;\nlet input = flow.get('led_forward') || 0;\nif(isFirst === 1) {\n        if(input === 0) {\n            msg.payload = \"OFF\";\n            msg.color = \"red\";\n            context.set('status', 0);\n            return msg;\n        }\n        else {\n            msg.payload = \"ON\";\n            msg.color = \"lime\";\n            context.set('status', 1);\n            return msg;\n        }\n}\nelse {\n    if(input === status) {\n        return null;\n    }\n    else if(input === 1) {\n       msg.payload = \"ON\";\n        msg.color = \"lime\";\n        context.set('status', 1);\n        return msg; \n    }\n    else {\n        msg.payload = \"OFF\";\n        msg.color = \"red\";\n        context.set('status', 0);\n        return msg;\n    }\n}\nreturn null;","outputs":1,"noerr":0,"x":420,"y":600,"wires":[["cf680a37.a47108"]]},{"id":"ea64c182.89621","type":"function","z":"7e8645a7.57674c","name":"Backward","func":"let status = context.get('status') || 0;\nlet isFirst = flow.get('initial') || 0;\nlet input = flow.get('led_backward') || 0;\nif(isFirst === 1) {\n        if(input === 0) {\n            msg.payload = \"OFF\";\n            msg.color = \"red\";\n            context.set('status', 0);\n            return msg;\n        }\n        else {\n            msg.payload = \"ON\";\n            msg.color = \"lime\";\n            context.set('status', 1);\n            return msg;\n        }\n}\nelse {\n    if(input === status) {\n        return null;\n    }\n    else if(input === 1) {\n       msg.payload = \"ON\";\n        msg.color = \"lime\";\n        context.set('status', 1);\n        return msg; \n    }\n    else {\n        msg.payload = \"OFF\";\n        msg.color = \"red\";\n        context.set('status', 0);\n        return msg;\n    }\n}\nreturn null;","outputs":1,"noerr":0,"x":420,"y":640,"wires":[["28e90f29.6ce9b"]]},{"id":"538af961.e2e0f8","type":"function","z":"7e8645a7.57674c","name":"Start","func":"let status = context.get('status') || 0;\nlet isFirst = flow.get('initial') || 0;\nlet input = flow.get('led_start') || 0;\nif(isFirst === 1) {\n        if(input === 0) {\n            msg.payload = \"OFF\";\n            msg.color = \"red\";\n            context.set('status', 0);\n            return msg;\n        }\n        else {\n            msg.payload = \"ON\";\n            msg.color = \"lime\";\n            context.set('status', 1);\n            return msg;\n        }\n}\nelse {\n    if(input === status) {\n        return null;\n    }\n    else if(input === 1) {\n       msg.payload = \"ON\";\n        msg.color = \"lime\";\n        context.set('status', 1);\n        return msg; \n    }\n    else {\n        msg.payload = \"OFF\";\n        msg.color = \"red\";\n        context.set('status', 0);\n        return msg;\n    }\n}\nreturn null;","outputs":1,"noerr":0,"x":410,"y":680,"wires":[["24eee787.ba33b8"]]},{"id":"747d2d9b.b21604","type":"function","z":"7e8645a7.57674c","name":"Metal","func":"let status = context.get('status') || 0;\nlet isFirst = flow.get('initial') || 0;\nlet input = flow.get('led_metal') || 0;\nif(isFirst === 1) {\n        if(input === 0) {\n            msg.payload = \"OFF\";\n            msg.color = \"red\";\n            context.set('status', 0);\n            return msg;\n        }\n        else {\n            msg.payload = \"ON\";\n            msg.color = \"lime\";\n            context.set('status', 1);\n            return msg;\n        }\n}\nelse {\n    if(input === status) {\n        return null;\n    }\n    else if(input === 1) {\n       msg.payload = \"ON\";\n        msg.color = \"lime\";\n        context.set('status', 1);\n        return msg; \n    }\n    else {\n        msg.payload = \"OFF\";\n        msg.color = \"red\";\n        context.set('status', 0);\n        return msg;\n    }\n}\nreturn null;","outputs":1,"noerr":0,"x":410,"y":720,"wires":[["afd42347.f7c7a"]]},{"id":"dd9c19f4.fa21b8","type":"function","z":"7e8645a7.57674c","name":"Item","func":"let status = context.get('status') || 0;\nlet isFirst = flow.get('initial') || 0;\nlet input = flow.get('led_item') || 0;\nif(isFirst === 1) {\n        if(input === 0) {\n            msg.payload = \"OFF\";\n            msg.color = \"red\";\n            context.set('status', 0);\n            return msg;\n        }\n        else {\n            msg.payload = \"ON\";\n            msg.color = \"lime\";\n            context.set('status', 1);\n            return msg;\n        }\n}\nelse {\n    if(input === status) {\n        return null;\n    }\n    else if(input === 1) {\n       msg.payload = \"ON\";\n        msg.color = \"lime\";\n        context.set('status', 1);\n        return msg; \n    }\n    else {\n        msg.payload = \"OFF\";\n        msg.color = \"red\";\n        context.set('status', 0);\n        return msg;\n    }\n}\nreturn null;","outputs":1,"noerr":0,"x":410,"y":760,"wires":[["a54bc45d.3d3e88"]]},{"id":"dfb49eec.cc47e","type":"function","z":"7e8645a7.57674c","name":"Counter","func":"let status = context.get('status') || 0;\nlet isFirst = flow.get('initial') || 0;\nlet input = flow.get('led_counter') || 0;\nif(isFirst === 1) {\n        if(input === 0) {\n            msg.payload = \"OFF\";\n            msg.color = \"red\";\n            context.set('status', 0);\n            return msg;\n        }\n        else {\n            msg.payload = \"ON\";\n            msg.color = \"lime\";\n            context.set('status', 1);\n            return msg;\n        }\n}\nelse {\n    if(input === status) {\n        return null;\n    }\n    else if(input === 1) {\n       msg.payload = \"ON\";\n        msg.color = \"lime\";\n        context.set('status', 1);\n        return msg; \n    }\n    else {\n        msg.payload = \"OFF\";\n        msg.color = \"red\";\n        context.set('status', 0);\n        return msg;\n    }\n}\nreturn null;","outputs":1,"noerr":0,"x":420,"y":800,"wires":[["a97e4d48.19e02"]]},{"id":"dd1f7bbe.92db88","type":"function","z":"7e8645a7.57674c","name":"End Metal","func":"let status = context.get('status') || 0;\nlet isFirst = flow.get('initial') || 0;\nlet input = flow.get('led_end_metal') || 0;\nif(isFirst === 1) {\n        if(input === 0) {\n            msg.payload = \"OFF\";\n            msg.color = \"red\";\n            context.set('status', 0);\n            return msg;\n        }\n        else {\n            msg.payload = \"ON\";\n            msg.color = \"lime\";\n            context.set('status', 1);\n            return msg;\n        }\n}\nelse {\n    if(input === status) {\n        return null;\n    }\n    else if(input === 1) {\n       msg.payload = \"ON\";\n        msg.color = \"lime\";\n        context.set('status', 1);\n        return msg; \n    }\n    else {\n        msg.payload = \"OFF\";\n        msg.color = \"red\";\n        context.set('status', 0);\n        return msg;\n    }\n}\nreturn null;","outputs":1,"noerr":0,"x":420,"y":840,"wires":[["322a267d.0d287a"]]},{"id":"4fd5c49b.ac6b8c","type":"ui_button","z":"7e8645a7.57674c","name":"button/enable","group":"52c66c8b.e6f7f4","order":2,"width":3,"height":1,"passthru":false,"label":"ENABLE","tooltip":"","color":"black","bgcolor":"orange","icon":"","payload":"1","payloadType":"num","topic":"button/enable","x":140,"y":1840,"wires":[["aa8e8214.c2361"]]},{"id":"264f8769.e492e8","type":"ui_button","z":"7e8645a7.57674c","name":"button/backward","group":"52c66c8b.e6f7f4","order":8,"width":3,"height":1,"passthru":false,"label":"BACKWARD","tooltip":"","color":"","bgcolor":"","icon":"","payload":"1","payloadType":"num","topic":"button/backward","x":140,"y":2040,"wires":[["b2246011.1328e"]]},{"id":"a7b3db9c.aba578","type":"ui_button","z":"7e8645a7.57674c","name":"button/forward","group":"52c66c8b.e6f7f4","order":6,"width":3,"height":1,"passthru":false,"label":"FORWARD","tooltip":"","color":"","bgcolor":"","icon":"","payload":"1","payloadType":"num","topic":"button/forward","x":140,"y":2000,"wires":[["18e7ec13.93b234"]]},{"id":"b6027270.46da2","type":"ui_button","z":"7e8645a7.57674c","name":"button/main","group":"52c66c8b.e6f7f4","order":4,"width":3,"height":1,"passthru":true,"label":"MAIN","tooltip":"","color":"","bgcolor":"","icon":"","payload":"1","payloadType":"num","topic":"button/main","x":130,"y":1960,"wires":[["7624d5b2.0c149c"]]},{"id":"18e7ec13.93b234","type":"function","z":"7e8645a7.57674c","name":"Forward","func":"flow.set('button_forward', 1);","outputs":1,"noerr":0,"x":320,"y":2000,"wires":[[]]},{"id":"7624d5b2.0c149c","type":"function","z":"7e8645a7.57674c","name":"Main","func":"flow.set('button_main', 1);","outputs":1,"noerr":0,"x":310,"y":1960,"wires":[[]]},{"id":"687a720e.0a7f2c","type":"function","z":"7e8645a7.57674c","name":"Start","func":"flow.set('button_start', 1);","outputs":1,"noerr":0,"x":310,"y":2140,"wires":[[]]},{"id":"783924cd.56df5c","type":"function","z":"7e8645a7.57674c","name":"Metal","func":"flow.set('button_metal', 1);","outputs":1,"noerr":0,"x":310,"y":2180,"wires":[[]]},{"id":"ab88b577.ec4e58","type":"function","z":"7e8645a7.57674c","name":"Item","func":"flow.set('button_item', 1);","outputs":1,"noerr":0,"x":310,"y":2220,"wires":[[]]},{"id":"6ecc1b7b.8cfa44","type":"function","z":"7e8645a7.57674c","name":"Counter","func":"flow.set('button_counter', 1);","outputs":1,"noerr":0,"x":320,"y":2260,"wires":[[]]},{"id":"e2856a4f.a0c888","type":"function","z":"7e8645a7.57674c","name":"End Metal","func":"flow.set('button_end_metal', 1);","outputs":1,"noerr":0,"x":320,"y":2300,"wires":[[]]},{"id":"701b15f9.342a8c","type":"ui_text","z":"7e8645a7.57674c","group":"52c66c8b.e6f7f4","order":1,"width":3,"height":1,"name":"output/enable","label":"Enable","format":"<font color={{msg.color}} ><i class=\"fa fa-circle\" style=\"font-size:24px;\"></i></font>","layout":"row-spread","x":620,"y":440,"wires":[]},{"id":"73cbb21c.97e23c","type":"ui_text","z":"7e8645a7.57674c","group":"52c66c8b.e6f7f4","order":3,"width":3,"height":1,"name":"output/main","label":"Main Band","format":"<font color={{msg.color}} ><i class=\"fa fa-circle\" style=\"font-size:24px;\"></i></font>","layout":"row-spread","x":610,"y":560,"wires":[]},{"id":"cf680a37.a47108","type":"ui_text","z":"7e8645a7.57674c","group":"52c66c8b.e6f7f4","order":5,"width":3,"height":1,"name":"output/forward","label":"Distribution Forward","format":"<font color={{msg.color}} ><i class=\"fa fa-circle\" style=\"font-size:24px;\"></i></font>","layout":"row-spread","x":620,"y":600,"wires":[]},{"id":"28e90f29.6ce9b","type":"ui_text","z":"7e8645a7.57674c","group":"52c66c8b.e6f7f4","order":7,"width":3,"height":1,"name":"output/backward","label":"Distribution Backward","format":"<font color={{msg.color}} ><i class=\"fa fa-circle\" style=\"font-size:24px;\"></i></font>","layout":"row-spread","x":620,"y":640,"wires":[]},{"id":"24eee787.ba33b8","type":"ui_text","z":"7e8645a7.57674c","group":"14da9a56.d47c76","order":1,"width":3,"height":1,"name":"sensor/start","label":"Start","format":"<font color={{msg.color}} ><i class=\"fa fa-circle\" style=\"font-size:24px;\"></i></font>","layout":"row-spread","x":610,"y":680,"wires":[]},{"id":"afd42347.f7c7a","type":"ui_text","z":"7e8645a7.57674c","group":"14da9a56.d47c76","order":3,"width":3,"height":1,"name":"sensor/metal","label":"Metal","format":"<font color={{msg.color}} ><i class=\"fa fa-circle\" style=\"font-size:24px;\"></i></font>","layout":"row-spread","x":610,"y":720,"wires":[]},{"id":"a54bc45d.3d3e88","type":"ui_text","z":"7e8645a7.57674c","group":"14da9a56.d47c76","order":5,"width":3,"height":1,"name":"sensor/item","label":"Item","format":"<font color={{msg.color}} ><i class=\"fa fa-circle\" style=\"font-size:24px;\"></i></font>","layout":"row-spread","x":610,"y":760,"wires":[]},{"id":"a97e4d48.19e02","type":"ui_text","z":"7e8645a7.57674c","group":"14da9a56.d47c76","order":7,"width":3,"height":1,"name":"sensor/counter","label":"Counter","format":"<font color={{msg.color}} ><i class=\"fa fa-circle\" style=\"font-size:24px;\"></i></font>","layout":"row-spread","x":620,"y":800,"wires":[]},{"id":"322a267d.0d287a","type":"ui_text","z":"7e8645a7.57674c","group":"14da9a56.d47c76","order":9,"width":3,"height":1,"name":"sensor/end_metal","label":"End Metal","format":"<font color={{msg.color}} ><i class=\"fa fa-circle\" style=\"font-size:24px;\"></i></font>","layout":"row-spread","x":630,"y":840,"wires":[]},{"id":"284dc367.0b7e2c","type":"ui_button","z":"7e8645a7.57674c","name":"button/A#M","group":"52c66c8b.e6f7f4","order":10,"width":3,"height":1,"passthru":false,"label":"Auto","tooltip":"","color":"yellow","bgcolor":"","icon":"","payload":"1","payloadType":"num","topic":"auto","x":130,"y":1920,"wires":[["41364598.331bdc"]]},{"id":"16e65419.ec921c","type":"ui_text","z":"7e8645a7.57674c","group":"52c66c8b.e6f7f4","order":9,"width":3,"height":1,"name":"auto/man","label":"Auto","format":"<font color={{msg.color}} ><i class=\"fa fa-circle\" style=\"font-size:24px;\"></i></font>","layout":"row-spread","x":600,"y":480,"wires":[]},{"id":"61e450bf.3dccd","type":"ui_button","z":"7e8645a7.57674c","name":"button/start","group":"14da9a56.d47c76","order":2,"width":3,"height":1,"passthru":false,"label":"SENSOR START","tooltip":"","color":"","bgcolor":"","icon":"","payload":"1","payloadType":"num","topic":"button/start","x":130,"y":2140,"wires":[["687a720e.0a7f2c"]]},{"id":"69439e3d.19fe6","type":"ui_button","z":"7e8645a7.57674c","name":"button/metal","group":"14da9a56.d47c76","order":4,"width":3,"height":1,"passthru":false,"label":"SENSOR METAL","tooltip":"","color":"","bgcolor":"","icon":"","payload":"1","payloadType":"num","topic":"button/metal","x":130,"y":2180,"wires":[["783924cd.56df5c"]]},{"id":"3240b276.9cb0be","type":"ui_button","z":"7e8645a7.57674c","name":"button/item","group":"14da9a56.d47c76","order":6,"width":3,"height":1,"passthru":false,"label":"SENSOR ITEM","tooltip":"","color":"","bgcolor":"","icon":"","payload":"1","payloadType":"num","topic":"button/item","x":130,"y":2220,"wires":[["ab88b577.ec4e58"]]},{"id":"cbd1bf21.d9ac","type":"ui_button","z":"7e8645a7.57674c","name":"button/counter","group":"14da9a56.d47c76","order":8,"width":3,"height":1,"passthru":false,"label":"SENSOR COUNTER","tooltip":"","color":"","bgcolor":"#FF00FF","icon":"","payload":"1","payloadType":"num","topic":"button/counter","x":140,"y":2260,"wires":[["6ecc1b7b.8cfa44"]]},{"id":"35b1eb99.0b8274","type":"ui_button","z":"7e8645a7.57674c","name":"button/end_metal","group":"14da9a56.d47c76","order":10,"width":3,"height":1,"passthru":false,"label":"SENSOR END METAL","tooltip":"","color":"","bgcolor":"","icon":"","payload":"1","payloadType":"num","topic":"button/end_metal","x":150,"y":2300,"wires":[["e2856a4f.a0c888"]]},{"id":"7fdbd303.f8152c","type":"function","z":"7e8645a7.57674c","name":"Logic","func":"//let msg = {};\n//let flow = class{};\n//let global = class{};\n//let context = class{};\n\n//==========================================================\n\nlet sensorStart = flow.get('sensor_start') || 0;\nlet sensorMetal = flow.get('sensor_metal') || 0;\nlet sensorItem = flow.get('sensor_item') || 0;\nlet sensorCounter = flow.get('sensor_counter') || 0;\nlet sensorEndMetal = flow.get('sensor_end_metal') || 0;\nlet sensorEndItem = flow.get('sensor_end_item') || 0;\nlet flagEndItem = flow.get('flag_end_item') || 0;\nlet flag = flow.get('flag') || 0;\n\n//=========================================================\n\nlet ledEnable = flow.get('led_enable') || 0;\nlet ledRun = flow.get('led_run') || 0;\nlet ledAuto = flow.get('led_auto') || 0;\nlet ledMain = flow.get('led_main') || 0;\nlet ledForward = flow.get('led_forward') || 0;\nlet ledBackward = flow.get('led_backward') || 0;\nlet ledStart = flow.get('led_start') || 0;\nlet ledMetal = flow.get('led_metal') || 0;\nlet ledItem = flow.get('led_item') || 0;\nlet ledCounter = flow.get('led_counter') || 0;\nlet ledEndMetal = flow.get('led_end_metal') || 0;\nlet ledEndItem = flow.get('led_end_item') || 0;\n\n//=========================================================\n\nlet buttonAuto = flow.get('button_auto') || 0;\nlet buttonDeployment = flow.get('button_deployment') || 0;\nlet buttonRun = flow.get('button_run') || 0;\nlet buttonReset = flow.get('button_reset') || 0;\nlet buttonEnable = flow.get('button_enable') || 0;\nlet buttonMain = flow.get('button_main') || 0;\nlet buttonForward = flow.get('button_forward') || 0;\nlet buttonBackward = flow.get('button_backward') || 0;\nlet buttonStart = flow.get('button_start') || 0;\nlet buttonMetal = flow.get('button_metal') || 0;\nlet buttonItem = flow.get('button_item') || 0;\nlet buttonCounter = flow.get('button_counter') || 0;\nlet buttonEndMetal = flow.get('button_end_metal') || 0;\nlet buttonEndItem = flow.get('button_end_item') || 0;\n\n//=========================================================\n\nlet outputEnable = flow.get('output_enable') || 0;\nlet outputMain = flow.get('output_main') || 0;\nlet outputForward = flow.get('output_forward') || 0;\nlet outputBackward = flow.get('output_backward') || 0;\n\n//=========================================================\n\nlet localAuto = flow.get('local_auto') || 0;\nlet localRun = flow.get('local_run') || 0;\nlet localReset = flow.get('local_reset') || 0;\nlet localEndItem = flow.get('local_end_item') || 0;\n\n//=========================================================\n\nlet counterStart = flow.get('counter_start') || 0;\nlet templCounterMetal = flow.get('templ_counter_metal') || 0;\nlet templCounterItem = flow.get('templ_counter_item') || [];\nlet counterCounter = flow.get('counter_counter') || [];\nlet counterEnd = flow.get('counter_end') || [];\nlet counterTotal = global.get('counter_total') || 0;\nlet counterMetal = global.get('counter_metal') || 0;\nlet counterItem = global.get('counter_item') || 0;\nlet counterLiftMetal = global.get('counter_lift_metal') || 0;\nlet counterLiftItem = global.get('counter_lift_item') || 0;\n\n//=========================================================\n\nlet outputsMatrix = flow.get('outputs_matrix') || [];\nlet inputsMatrix = flow.get('inputs_matrix') || [];\nlet inputsStatus = flow.get('inputs_status') || [];\n\nfunction confirmOutputs(outputsMatrix) {\n    return {\n        'payload': {\n            'value': outputsMatrix,\n            'fc': 16,\n            'unitid': 1,\n            'address': 16384,\n            'quantity': 4\n        }\n    };\n}\n\nfunction confirmInputs(inputsMatrix) {\n    return {\n        'payload': {\n            'value': inputsMatrix,\n            'fc': 16,\n            'unitid': 1,\n            'address': 16388,\n            'quantity': 5\n        }\n    };\n}\n\nlet arr = [counterMetal, counterItem, templCounterMetal, templCounterItem.length, counterTotal, counterLiftMetal, counterLiftItem, counterStart, counterCounter.length, counterEnd.length];\n\nfunction initialMessage(msg, arr) {\n    msg.count_metal = arr[0];           //counterMetal;\n    msg.count_item = arr[1];            //counterItem;\n    msg.templ_count_metal = arr[2];     //templCounterMetal;\n    msg.templ_count_item = arr[3];      //templCounterItem.length;\n    msg.count_total = arr[4];           //counterTotal;\n    msg.count_lift_metal = arr[5];      //counterLiftMetal;\n    msg.count_lift_item = arr[6];       //counterLiftItem;\n    msg.count_start = arr[7];           //counterStart;\n    msg.count_counter = arr[8];         //counterCounter.length;\n    msg.count_end = arr[9];             //counterEnd.length;\n    msg.alarm = 0;\n\n    return msg;\n}\n\n//==========================================================\n//  Initial state\n//==========================================================\n\nlet statusInitial = context.get('status_initial') || 0;\nlet isFirst = flow.get('initial');\nif (isFirst === 1 && statusInitial === 0) {\n    sensorStart = inputsStatus[4];\n    flow.set('sensor_start', sensorStart);\n    sensorMetal = inputsStatus[5];\n    flow.set('sensor_metal', sensorMetal);\n    sensorItem = inputsStatus[6];\n    flow.set('sensor_item', sensorItem);\n    sensorCounter = inputsStatus[7];\n    flow.set('sensor_counter', sensorCounter);\n    sensorEndMetal = inputsStatus[8];\n    flow.set('sensor_end_metal', sensorEndMetal);\n    sensorEndItem = 0;\n    flow.set('sensor_end_item', sensorEndItem);\n\n//=========================================================\n\n    outputEnable = inputsStatus[0];\n    flow.set('output_enable', outputEnable);\n    outputMain = inputsStatus[1];\n    flow.set('output_main', outputMain);\n    outputForward = inputsStatus[2];\n    flow.set('output_forward', outputForward);\n    outputBackward = inputsStatus[3];\n    flow.set('output_backward', outputBackward);\n\n//=========================================================\n\n    buttonAuto = 0;\n    flow.set('button_auto', buttonAuto);\n    buttonDeployment = 0;\n    flow.set('button_deployment', buttonDeployment);\n    buttonRun = 0;\n    flow.set('button_run', buttonRun);\n    buttonReset = 0;\n    flow.set('button_reset', buttonReset);\n\n// TODO: Only in deployment mode\n//=========================================================\n\n    buttonEnable = 0;\n    flow.set('button_enable', buttonEnable);\n    buttonMain = 0;\n    flow.set('button_main', buttonMain);\n    buttonForward = 0;\n    flow.set('button_forward', buttonForward);\n    buttonBackward = 0;\n    flow.set('button_backward', buttonBackward);\n    buttonStart = 0;\n    flow.set('button_start', buttonStart);\n    buttonMetal = 0;\n    flow.set('button_metal', buttonMetal);\n    buttonItem = 0;\n    flow.set('button_item', buttonItem);\n    buttonCounter = 0;\n    flow.set('button_counter', buttonCounter);\n    buttonEndMetal = 0;\n    flow.set('button_end_metal', buttonEndMetal);\n    buttonEndItem = 0;\n    flow.set('button_end_item', buttonEndItem);\n\n//=========================================================\n\n    ledEnable = outputEnable;\n    flow.set('led_enable', ledEnable);\n    ledRun = 0;\n    flow.set('led_run', ledRun);\n    ledAuto = 0;\n    flow.set('led_auto', ledAuto);\n    ledMain = outputMain;\n    flow.set('led_main', ledMain);\n    ledForward = outputForward;\n    flow.set('led_forward', ledForward);\n    ledBackward = outputBackward;\n    flow.set('led_backward', ledBackward);\n    ledStart = sensorStart;\n    flow.set('led_start', ledStart);\n    ledMetal = sensorMetal;\n    flow.set('led_metal', ledMetal);\n    ledItem = sensorItem;\n    flow.set('led_item', ledItem);\n    ledCounter = sensorCounter;\n    flow.set('led_counter', ledCounter);\n    ledEndMetal = sensorEndMetal;\n    flow.set('led_end_metal', ledEndMetal);\n    ledEndItem = 0;\n    flow.set('led_end_item', ledEndItem);\n\n\n//=========================================================\n\n    localAuto = 0;\n    flow.set('local_auto', localAuto);\n    localRun = 0;\n    flow.set('local_run', localRun);\n    localReset = 0;\n    flow.set('local_reset', localReset);\n    localEndItem = 0;\n    flow.set('local_end_item', localEndItem);\n\n//=========================================================\n\n    counterStart = 0;\n    flow.set('counter_start', counterStart);\n    templCounterMetal = 0;\n    flow.set('templ_counter_metal', templCounterMetal);\n    templCounterItem = [];\n    flow.set('templ_counter_item', templCounterItem);\n    counterCounter = [];\n    flow.set('counter_counter', counterCounter);\n    counterEnd = [];\n    flow.set('counter_end', counterEnd);\n\n//=========================================================\n\n    outputsMatrix = [0, 0, 0, 0];\n    flow.set('outputs_matrix', outputsMatrix);\n    inputsMatrix = [0, 0, 0, 0, 0];\n    flow.set('inputs_matrix', inputsMatrix);\n\n//=========================================================\n    arr = [counterMetal, counterItem, templCounterMetal, templCounterItem.length, counterTotal, counterLiftMetal, counterLiftItem, counterStart, counterCounter.length, counterEnd.length];\n    msg = initialMessage(msg, arr);\n    msg.topic = \"initial\";\n\n//=========================================================\n\n    statusInitial = 1;\n    context.set('status_initial', statusInitial);\n\n    return [ msg, msg, null ];\n}\n\n// When lift limit is reached\n//=================================================================\n\nlet limitFlag = global.get('lift_limit_flag') || 0;\ncounterLiftMetal = global.get('counter_lift_metal');\ncounterLiftItem = global.get('counter_lift_item');\n\nlet limit = global.get('lift_limit');\nif(counterLiftMetal === limit || counterLiftItem === limit) {\n    limitFlag = 1;\n    global.set('lift_limit_flag', limitFlag);\n    msg.forward = 0;\n    msg.backward = 0;\n    msg.main = 0;\n    msg.topic = \"server/main_stop\";\n    msg.alarm = 1;\n}\nelse {\n    if(limitFlag === 1) {\n        limitFlag = 0;\n        global.set('lift_limit_flag', limitFlag);\n    }\n    msg.alarm = 0;\n}\n\n// Work in mode auto\n//==================================================================\n\nlet msg1 = null;\nlet msg2 = null;\n\nmsg = initialMessage(msg, arr);\nmsg.topic = \"inner\";\n\nlet currentEnable = inputsStatus[0];\noutputEnable = flow.get('output_enable') || 0;\nif(outputEnable !== currentEnable) {\n    outputEnable = currentEnable;\n    ledEnable = outputEnable;\n    flow.set('output_enable', outputEnable);\n    flow.set('led_enable', ledEnable);\n}\n\n// Auto\nif(localAuto !== ledAuto) {\n    ledAuto = localAuto;\n    flow.set('led_auto', ledAuto);\n}\n// Run\nif(localRun !== ledRun) {\n    ledRun = localRun;\n    flow.set('led_run', ledRun);\n}\n\nif(localEndItem !== ledEndItem) {\n    ledEndItem = localEndItem;\n    flow.set('led_end_item', ledEndItem);\n}\n\noutputMain = inputsStatus[1];\nlet currentMain = flow.get('output_main') || 0;\nif(outputMain !== currentMain) {\n    currentMain = outputMain;\n    ledMain = currentMain;\n    flow.set('output_main', currentMain);\n    flow.set('led_main', ledMain);\n}\n\noutputForward = inputsStatus[2];\nlet currentForward = flow.get('output_forward') || 0;\nif(outputForward !== currentForward) {\n    currentForward = outputForward;\n    ledForward = currentForward;\n    flow.set('output_forward', currentForward);\n    flow.set('led_forward', ledForward);\n}\n\noutputBackward = inputsStatus[3];\nlet currentBackward = flow.get('output_backward') || 0;\nif(outputBackward !== currentBackward) {\n    currentBackward = outputBackward;\n    ledBackward = currentBackward;\n    flow.set('output_backward', currentBackward);\n    flow.set('led_backward', ledBackward);\n}\n\nlet currentStart = inputsStatus[4];\nsensorStart = flow.get('sensor_start') || 0;\nif(sensorStart !== currentStart) {\n    sensorStart = currentStart;\n    ledStart = sensorStart;\n    flow.set('sensor_start', sensorStart);\n    flow.set('led_start', ledStart);\n    let oddStart = context.get('odd_start') || false;\n    if(flow.get('led_start') === 1 && oddStart === false) {\n        counterStart = flow.get('counter_start') || 0;\n        counterStart ++;\n        flow.set('counter_start', counterStart);\n        msg.count_start = counterStart;\n        msg1 = msg;\n\n        oddStart = true;\n        context.set('odd_start', oddStart);\n    }\n    else {\n        oddStart = false;\n        context.set('odd_start', oddStart);\n    }\n}\n\nlet currentMetal = inputsStatus[5];\nsensorMetal = flow.get('sensor_metal') || 0;\nif(sensorMetal !== currentMetal) {\n    sensorMetal = currentMetal;\n    ledMetal = sensorMetal;\n    flow.set('sensor_metal', sensorMetal);\n    flow.set('led_metal', ledMetal);\n    let oddMetal = context.get('odd_metal') || false;\n    if(flow.get('led_metal') === 1 && oddMetal === false) {\n\n        counterMetal = global.get('counter_metal') || 0;\n        counterMetal ++;\n        global.set('counter_metal', counterMetal);\n        msg.count_metal = counterMetal;\n\n        templCounterMetal = flow.get('templ_counter_metal');\n        templCounterMetal ++;\n        flow.set('templ_counter_metal',templCounterMetal);\n        msg.templ_count_metal = templCounterMetal;\n\n        counterTotal = global.get('counter_total') || 0;\n        counterTotal ++;\n        global.set('counter_total', counterTotal);\n        msg.count_total = counterTotal;\n\n        msg1 = msg;\n        msg1.topic = \"metal/counter\";\n\n        oddMetal = true;\n        context.set('odd_metal', oddMetal);\n    }\n    else {\n        oddMetal = false;\n        context.set('odd_metal', oddMetal);\n    }\n}\n\nlet currentItem = inputsStatus[6];\nsensorItem = flow.get('sensor_item') || 0;\nif(sensorItem !== currentItem) {\n    sensorItem = currentItem;\n    ledItem = sensorItem;\n    flow.set('sensor_item', sensorItem);\n    flow.set('led_item', ledItem);\n    let oddItem = context.get('odd_item') || false;\n    if(flow.get('led_item') === 1 && oddItem === false) {\n\n        templCounterMetal = flow.get('templ_counter_metal');\n        let out = 0;\n        if (templCounterMetal > 0) {\n            out = 1;\n            templCounterMetal -= 1;\n            flow.set('templ_counter_metal', templCounterMetal);\n            msg.templ_count_metal = templCounterMetal;\n        }\n        else {\n            counterItem = global.get('counter_item') || 0;\n            counterItem ++;\n            global.set('counter_item', counterItem);\n            msg.count_item = counterItem;\n\n            counterTotal = global.get('counter_total') || 0;\n            counterTotal ++;\n            global.set('counter_total', counterTotal);\n            msg.count_total = counterTotal;\n        }\n\n        templCounterItem = flow.get('templ_counter_item');\n        templCounterItem.push(out);\n        flow.set('templ_counter_item',templCounterItem);\n        msg.templ_count_item = templCounterItem.length;\n\n        msg1 = msg;\n        msg1.topic = \"item/counter\";\n\n        oddItem = true;\n        context.set('odd_item', oddItem);\n    }\n    else {\n        oddItem = false;\n        context.set('odd_item', oddItem);\n    }\n}\n\nlet currentCounter = inputsStatus[7];\nsensorCounter = flow.get('sensor_counter') || 0;\nif(sensorCounter !== currentCounter) {\n    sensorCounter = currentCounter;\n    ledCounter = sensorCounter;\n    flow.set('sensor_counter', sensorCounter);\n    flow.set('led_counter', ledCounter);\n    let oddCounter = context.get('odd_counter') || false;\n    if (flow.get('led_counter') === 1 && oddCounter === false) {\n\n        templCounterItem = flow.get('templ_counter_item');\n        out = templCounterItem.shift();\n        flow.set('templ_counter_item', templCounterItem);\n        msg.templ_count_item = templCounterItem.length;\n\n        counterStart = flow.get('counter_start') || 0;\n        counterStart -= 1;\n        flow.set('counter_start', counterStart);\n        msg.count_start = counterStart;\n\n        counterCounter = flow.get('counter_counter') || 0;\n        counterCounter.push(out);\n        flow.set('counter_counter', counterCounter);\n        msg.count_counter = counterCounter.length;\n\n        counterEnd = flow.get('counter_end') || [];\n        counterEnd.push(out);\n        flow.set('counter_end', counterEnd);\n        msg.count_end = counterEnd.length;\n\n// TODO: here output logic\n\n        msg1 = msg;\n        msg1.topic = \"counter/counter\";\n\n        oddCounter = true;\n        context.set('odd_counter', oddCounter);\n    } else {\n        oddCounter = false;\n        context.set('odd_counter', oddCounter);\n    }\n}\n\nlet currentEndMetal = inputsStatus[8];\nsensorEndMetal = flow.get('sensor_end_metal') || 0;\nif(sensorEndMetal !== currentEndMetal) {\n    sensorEndMetal = currentEndMetal;\n    ledEndMetal = sensorEndMetal;\n    flow.set('sensor_end_metal', sensorEndMetal);\n    flow.set('led_end_metal', ledEndMetal);\n    let oddEndMetal = context.get('odd_end_metal') || false;\n    if (flow.get('led_end_metal') === 1 && oddEndMetal === false) {\n        \n        if (counterCounter.length > 0 && counterEnd.length > 0 && counterEnd[0] === 1) {\n            counterCounter = flow.get('counter_counter') || 0;\n            counterCounter.shift();\n            flow.set('counter_counter', counterCounter);\n            msg.count_counter = counterCounter.length;\n\n            counterEnd = flow.get('counter_end') || [];\n            counterEnd.shift();\n            flow.set('counter_end', counterEnd);\n            msg.count_end = counterEnd.length;\n\n            counterLiftMetal = global.get('counter_lift_metal') || 0;\n            counterLiftMetal++;\n            global.set('counter_lift_metal', counterLiftMetal);\n            msg.count_lift_metal = counterLiftMetal;\n\n// TODO: here logic\n\n            msg1 = msg;\n            msg1.topic = \"lift_metal/counter\";\n        }\n        \n        oddEndMetal = true;\n        context.set('odd_end_metal', oddEndMetal);\n    } else {\n        oddEndMetal = false;\n        context.set('odd_end_metal', oddEndMetal);\n    }\n}\n\nlet currentEndItem = flow.get('flag') || 0;\nsensorEndItem = flow.get('sensor_end_item') || 0;\nif(sensorEndItem !== currentEndItem) {\n    sensorEndItem = currentEndItem;\n    ledEndItem = sensorEndItem;\n    flow.set('sensor_end_item', sensorEndItem);\n    flow.set('led_end_item', ledEndItem);\n\n    if(currentEndItem === 1) {\n        currentEndItem = 0;\n        flow.set('flag', currentEndItem);\n    }\n\n    let oddEndItem = context.get('odd_end_item') || false;\n    if (flow.get('led_end_item') === 1 && oddEndItem === false) {\n\n        if (counterCounter.length > 0 && counterEnd.length > 0 && counterEnd[0] === 0) {\n            counterCounter = flow.get('counter_counter') || 0;\n            counterCounter.shift();\n            flow.set('counter_counter', counterCounter);\n            msg.count_counter = counterCounter.length;\n            \n            counterEnd = flow.get('counter_end') || [];\n            counterEnd.shift();\n            flow.set('counter_end', counterEnd);\n            msg.count_end = counterEnd.length;\n\n            counterLiftItem = global.get('counter_lift_item') || 0;\n            counterLiftItem++;\n            global.set('counter_lift_item', counterLiftItem);\n            msg.count_lift_item = counterLiftItem;\n\n// TODO: here logic\n\n            msg1 = msg;\n            msg1.topic = \"lift_item/counter\";\n        }\n        oddEndItem = true;\n        context.set('odd_end_item', oddEndItem);\n    } else {\n        oddEndItem = false;\n        context.set('odd_end_item', oddEndItem);\n    }\n}\n\nbuttonEnable = flow.get('button_enable') || 0;\nif(buttonEnable === 1) {\n    if(outputEnable === 1) {\n        outputEnable = 0;\n    }\n    else {\n        outputEnable = 1;\n    }\n    flow.set('output_enable', outputEnable);\n    buttonEnable = 0;\n    flow.set('button_enable', buttonEnable);\n\n    outputMatrix = flow.get('outputs_matrix');\n    outputsMatrix[0] = outputEnable;\n    flow.set('outputs_matrix', outputMatrix);\n\n    msg2 = confirmOutputs(outputsMatrix);\n}\n\nbuttonReset = flow.get('button_reset') || 0;\nif(buttonReset === 1) {\n    flow.set('counter_start', 0);\n    flow.set('templ_counter_metal', 0);\n    flow.set('templ_counter_item', []);\n    flow.set('counter_counter', []);\n    flow.set('counter_end', []);\n    flow.set('local_auto', 0);\n    flow.set('local_run', 0);\n    global.set('counter_total', 0);\n    global.set('counter_metal', 0);\n    global.set('counter_item', 0);\n    global.set('counter_lift_metal', 0);\n    global.set('counter_lift_item', 0);\n\n    outputsMatrix = [0, 0, 0, 0];\n    flow.set('outputs_matrix', outputsMatrix);\n\n    msg2 = confirmOutputs(outputsMatrix);\n\n    buttonReset = 0;\n    flow.set('button_reset', buttonReset);\n}\n\nbuttonAuto = flow.get('button_auto') || 0;\nif(buttonAuto === 1) {\n    if(localAuto === 1) {\n        localAuto = 0;\n    }\n    else {\n        localAuto = 1;\n    }\n    flow.set('local_auto', localAuto);\n    buttonAuto = 0;\n    flow.set('button_auto', buttonAuto);\n}\n\nbuttonRun = flow.get('button_run') || 0;\nif(buttonRun === 1) {\n    if(localRun === 1) {\n        localRun = 0;\n    }\n    else {\n        localRun = 1;\n    }\n    flow.set('local_run', localRun);\n    buttonRun = 0;\n    flow.set('button_run', buttonRun);\n}\n\nbuttonMain = flow.get('button_main') || 0;\nif(buttonMain === 1) {\n    if(outputMain === 1) {\n        outputMain = 0;\n    }\n    else {\n        outputMain = 1;\n    }\n    flow.set('output_main', outputMain);\n    buttonMain = 0;\n    flow.set('button_main', buttonMain);\n\n    outputMatrix = flow.get('outputs_matrix');\n    outputsMatrix[1] = outputMain;\n    flow.set('outputs_matrix', outputMatrix);\n\n    msg2 = confirmOutputs(outputsMatrix);\n}\n\nbuttonForward = flow.get('button_forward') || 0;\nif(buttonForward === 1) {\n    if(outputForward === 1) {\n        outputForward = 0;\n    }\n    else {\n        outputForward = 1;\n    }\n    flow.set('output_forward', outputForward);\n    buttonForward = 0;\n    flow.set('button_forward', buttonForward);\n\n    outputMatrix = flow.get('outputs_matrix');\n    outputsMatrix[2] = outputForward;\n    flow.set('outputs_matrix', outputMatrix);\n\n    msg2 = confirmOutputs(outputsMatrix);\n}\n\nbuttonBackward = flow.get('button_backward') || 0;\nif(buttonBackward === 1) {\n    if(outputBackward === 1) {\n        outputBackward = 0;\n    }\n    else {\n        outputBackward = 1;\n    }\n    flow.set('output_backward', outputBackward);\n    buttonBackward = 0;\n    flow.set('button_backward', buttonBackward);\n\n    outputMatrix = flow.get('outputs_matrix');\n    outputsMatrix[3] = outputBackward;\n    flow.set('outputs_matrix', outputMatrix);\n\n    msg2 = confirmOutputs(outputsMatrix);\n}\n\nbuttonStart = flow.get('button_start') || 0;\nif(buttonStart === 1) {\n    if(sensorStart === 1) {\n        sensorStart = 0;\n    }\n    else {\n        sensorStart = 1;\n    }\n    flow.set('sensor_start', sensorStart);\n    buttonStart = 0;\n    flow.set('button_start', buttonStart);\n\n    inputsMatrix = flow.get('inputs_matrix');\n    inputsMatrix[0] = sensorStart;\n    flow.set('inputs_matrix', inputsMatrix);\n\n    msg2 = confirmInputs(inputsMatrix);\n}\n\nbuttonMetal = flow.get('button_metal') || 0;\nif(buttonMetal === 1) {\n    if(sensorMetal === 1) {\n        sensorMetal = 0;\n    }\n    else {\n        sensorMetal = 1;\n    }\n    flow.set('sensor_metal', sensorMetal);\n    buttonMetal = 0;\n    flow.set('button_metal', buttonMetal);\n\n    inputsMatrix = flow.get('inputs_matrix');\n    inputsMatrix[1] = sensorMetal;\n    flow.set('inputs_matrix', inputsMatrix);\n\n    msg2 = confirmInputs(inputsMatrix);\n}\n\nbuttonItem = flow.get('button_item') || 0;\nif(buttonItem === 1) {\n    if(sensorItem === 1) {\n        sensorItem = 0;\n    }\n    else {\n        sensorItem = 1;\n    }\n    flow.set('sensor_item', sensorItem);\n    buttonItem = 0;\n    flow.set('button_item', buttonItem);\n\n    inputsMatrix = flow.get('inputs_matrix');\n    inputsMatrix[2] = sensorItem;\n    flow.set('inputs_matrix', inputsMatrix);\n\n    msg2 = confirmInputs(inputsMatrix);\n}\n\nbuttonCounter = flow.get('button_counter') || 0;\nif(buttonCounter === 1) {\n    if(sensorCounter === 1) {\n        sensorCounter = 0;\n    }\n    else {\n        sensorCounter = 1;\n    }\n    flow.set('sensor_counter', sensorCounter);\n    buttonCounter = 0;\n    flow.set('button_counter', buttonCounter);\n\n    inputsMatrix = flow.get('inputs_matrix');\n    inputsMatrix[3] = sensorCounter;\n    flow.set('inputs_matrix', inputsMatrix);\n\n    msg2 = confirmInputs(inputsMatrix);\n}\n\nbuttonEndMetal = flow.get('button_end_metal') || 0;\nif(buttonEndMetal === 1) {\n    if(sensorEndMetal === 1) {\n        sensorEndMetal = 0;\n    }\n    else {\n        sensorEndMetal = 1;\n    }\n    flow.set('sensor_end_metal', sensorEndMetal);\n    buttonEndMetal = 0;\n    flow.set('button_end_metal', buttonEndMetal);\n\n    inputsMatrix = flow.get('inputs_matrix');\n    inputsMatrix[4] = sensorEndMetal;\n    flow.set('inputs_matrix', inputsMatrix);\n\n    msg2 = confirmInputs(inputsMatrix);\n}\n\nbuttonEndItem = flow.get('button_end_item') || 0;\nif(buttonEndItem === 1) {\n    if(sensorEndItem === 1) {\n        sensorEndItem = 0;\n    }\n    else {\n        sensorEndItem = 1;\n    }\n    flow.set('sensor_end_item', sensorEndItem);\n\n    buttonEndItem = 0;\n    flow.set('button_end_item', buttonEndItem);\n\n    flagEndItem = sensorEndItem;\n    flow.set('flag_end_item', flagEndItem);\n\n    localEndItem = sensorEndItem;\n    flow.set('local_end_item', localEndItem);\n}\nreturn [ msg, msg1, msg2 ];","outputs":3,"noerr":0,"x":110,"y":660,"wires":[["3048524e.22ad9e"],["cfdfc55.534b338"],["8b86bd6c.ed94e"]]},{"id":"c3a12913.d2c818","type":"ui_text","z":"7e8645a7.57674c","group":"e696c741.2d8e58","order":1,"width":6,"height":1,"name":"totalcounter","label":"TOTAL COUNT","format":"{{msg.count_total}}","layout":"col-center","x":450,"y":1160,"wires":[]},{"id":"9a4cca4c.d28fd8","type":"ui_text","z":"7e8645a7.57674c","group":"e696c741.2d8e58","order":2,"width":3,"height":1,"name":"metalcounter","label":"METAL COUNT","format":"{{msg.count_metal}}","layout":"row-spread","x":450,"y":1040,"wires":[]},{"id":"b293efd7.49acc","type":"ui_text","z":"7e8645a7.57674c","group":"e696c741.2d8e58","order":3,"width":3,"height":1,"name":"itemcounter","label":"ITEM COUNT","format":"{{msg.count_item}}","layout":"row-spread","x":450,"y":1120,"wires":[]},{"id":"8d57441.0bb5bb8","type":"ui_button","z":"7e8645a7.57674c","name":"button/reset","group":"52c66c8b.e6f7f4","order":13,"width":6,"height":1,"passthru":false,"label":"RESET","tooltip":"","color":"white","bgcolor":"red","icon":"","payload":"1","payloadType":"num","topic":"system/reset","x":130,"y":1800,"wires":[["3d715761.947a68"]]},{"id":"b2246011.1328e","type":"function","z":"7e8645a7.57674c","name":"Backward","func":"flow.set('button_backward', 1);","outputs":1,"noerr":0,"x":320,"y":2040,"wires":[[]]},{"id":"39696707.f6f298","type":"debug","z":"7e8645a7.57674c","name":"ERROR","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":320,"y":20,"wires":[]},{"id":"17204939.c2f6b7","type":"inject","z":"7e8645a7.57674c","name":"","topic":"","payload":"1","payloadType":"num","repeat":"","crontab":"","once":true,"onceDelay":0.1,"x":130,"y":100,"wires":[["1b175949.34e767"]]},{"id":"274d1212.e108fe","type":"catch","z":"7e8645a7.57674c","name":"CATCH ERROR","scope":null,"uncaught":false,"x":140,"y":20,"wires":[["39696707.f6f298"]]},{"id":"6a3d04b5.36523c","type":"debug","z":"7e8645a7.57674c","name":"debuging/message","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":150,"y":860,"wires":[]},{"id":"1b175949.34e767","type":"function","z":"7e8645a7.57674c","name":"Initial","func":"if(msg.payload === 1) {\n    flow.set('initial', 1);\n    \n}\nelse {\n    flow.set('initial', 0);\n    return null;\n}\nreturn msg;","outputs":1,"noerr":0,"x":270,"y":100,"wires":[["abf706cc.2f9468"]]},{"id":"abf706cc.2f9468","type":"change","z":"7e8645a7.57674c","name":"","rules":[{"t":"change","p":"payload","pt":"msg","from":"1","fromt":"num","to":"0","tot":"num"}],"action":"","property":"","from":"","to":"","reg":false,"x":460,"y":100,"wires":[["71442b83.d71484"]]},{"id":"71442b83.d71484","type":"delay","z":"7e8645a7.57674c","name":"50ms","pauseType":"delay","timeout":"50","timeoutUnits":"milliseconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":670,"y":100,"wires":[["1b175949.34e767"]]},{"id":"3919afc8.1cc5e","type":"comment","z":"7e8645a7.57674c","name":"Error Catch","info":"Catchig every error in groups.","x":90,"y":60,"wires":[]},{"id":"df1c4f2e.a4c24","type":"comment","z":"7e8645a7.57674c","name":"Initial","info":"Initializing displays with I/O data at startup.","x":70,"y":140,"wires":[]},{"id":"2181ed8f.e77ab2","type":"comment","z":"7e8645a7.57674c","name":"Read","info":"Reads data from the server.","x":70,"y":400,"wires":[]},{"id":"b9b6c88e.9c7408","type":"comment","z":"7e8645a7.57674c","name":"Write Outputs","info":"Writes data to the server's outputs.","x":90,"y":2080,"wires":[]},{"id":"872fd63e.aa4e38","type":"function","z":"7e8645a7.57674c","name":"Auto/Man","func":"let status = context.get('status') || 0;\nlet isFirst = flow.get('initial') || 0;\nlet input = flow.get('led_auto') || 0;\nif(isFirst === 1) {\n        if(input === 0) {\n            msg.payload = \"OFF\";\n            msg.color = \"red\";\n            context.set('status', 0);\n            return msg;\n        }\n        else {\n            msg.payload = \"ON\";\n            msg.color = \"lime\";\n            context.set('status', 1);\n            return msg;\n        }\n}\nelse {\n    if(input === status) {\n        return null;\n    }\n    else if(input === 1) {\n       msg.payload = \"ON\";\n        msg.color = \"lime\";\n        context.set('status', 1);\n        return msg; \n    }\n    else {\n        msg.payload = \"OFF\";\n        msg.color = \"red\";\n        context.set('status', 0);\n        return msg;\n    }\n}\nreturn null;","outputs":1,"noerr":0,"x":420,"y":480,"wires":[["16e65419.ec921c"]]},{"id":"aa8e8214.c2361","type":"function","z":"7e8645a7.57674c","name":"Enable","func":"flow.set('button_enable', 1);","outputs":1,"noerr":0,"x":320,"y":1840,"wires":[[]]},{"id":"3d715761.947a68","type":"function","z":"7e8645a7.57674c","name":"Reset","func":"flow.set('button_reset', 1);","outputs":1,"noerr":0,"x":310,"y":1800,"wires":[[]]},{"id":"f0a142ce.cd175","type":"comment","z":"7e8645a7.57674c","name":"Write Inputs","info":"Writes data to the server's inputs.","x":90,"y":2380,"wires":[]},{"id":"c692ec16.beabe","type":"delay","z":"7e8645a7.57674c","name":"5s","pauseType":"delay","timeout":"5","timeoutUnits":"seconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":510,"y":2560,"wires":[["a9673ad0.0388a8"]]},{"id":"94959745.b7afc8","type":"delay","z":"7e8645a7.57674c","name":"50ms","pauseType":"delay","timeout":"50","timeoutUnits":"milliseconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":70,"y":2660,"wires":[["30db3450.cf439c"]]},{"id":"58ac8015.fef84","type":"delay","z":"7e8645a7.57674c","name":"100ms","pauseType":"delay","timeout":"100","timeoutUnits":"milliseconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":70,"y":2820,"wires":[["3dbdc498.fc380c"]]},{"id":"5ba9872f.c64358","type":"switch","z":"7e8645a7.57674c","name":"main_control","property":"main_delay","propertyType":"msg","rules":[{"t":"eq","v":"0","vt":"num"},{"t":"eq","v":"1","vt":"num"},{"t":"eq","v":"2","vt":"num"},{"t":"eq","v":"3","vt":"str"},{"t":"eq","v":"4","vt":"str"}],"checkall":"true","repair":false,"outputs":5,"x":210,"y":2560,"wires":[["a9673ad0.0388a8"],["2a27fb46.a00a44"],["5d539e01.21fee"],["d8d56574.4172c8"],["c692ec16.beabe"]]},{"id":"efcaf9d9.b033e8","type":"ui_text","z":"7e8645a7.57674c","group":"e696c741.2d8e58","order":6,"width":3,"height":1,"name":"start/position","label":"START","format":"{{msg.count_start}}","layout":"row-spread","x":450,"y":960,"wires":[]},{"id":"4d5b4df3.2376c4","type":"ui_text","z":"7e8645a7.57674c","group":"e696c741.2d8e58","order":4,"width":3,"height":1,"name":"lift/metal_counter","label":"LIFT-METAL","format":"{{msg.count_lift_metal}}","layout":"row-spread","x":470,"y":1240,"wires":[]},{"id":"f06cc6a6.09dad8","type":"ui_text","z":"7e8645a7.57674c","group":"e696c741.2d8e58","order":7,"width":3,"height":1,"name":"end/position","label":"END","format":"{{msg.count_end}}","layout":"row-spread","x":450,"y":1200,"wires":[]},{"id":"4db1fbe1.beaa24","type":"delay","z":"7e8645a7.57674c","name":"2s","pauseType":"delay","timeout":"2","timeoutUnits":"seconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":530,"y":2680,"wires":[["1ae98992.e57316"]]},{"id":"184c7f4c.09ed61","type":"ui_text","z":"7e8645a7.57674c","group":"e696c741.2d8e58","order":5,"width":3,"height":1,"name":"lift/item_counter","label":"LIFT-ITEM","format":"{{msg.count_lift_item}}","layout":"row-spread","x":460,"y":1280,"wires":[]},{"id":"a4cf87e2.bf83d8","type":"ui_numeric","z":"7e8645a7.57674c","name":"limit","label":"Lift limit","tooltip":"","group":"52c66c8b.e6f7f4","order":12,"width":0,"height":0,"passthru":false,"topic":"limit/display","format":"{{value}}","min":"1","max":"3","step":1,"x":330,"y":1520,"wires":[["37e81317.9f838c"]]},{"id":"37e81317.9f838c","type":"function","z":"7e8645a7.57674c","name":"gl/limit","func":"global.set('lift_limit', msg.payload);\nreturn msg;","outputs":1,"noerr":0,"x":330,"y":1480,"wires":[["95e17275.01383"]]},{"id":"701799c6.f071b8","type":"ui_text","z":"7e8645a7.57674c","group":"e696c741.2d8e58","order":8,"width":6,"height":1,"name":"lift_alarm","label":"ALARM","format":"<font color= {{msg.color}} > {{msg.payload}} </font>","layout":"row-spread","x":440,"y":1320,"wires":[]},{"id":"932227aa.27fb08","type":"function","z":"7e8645a7.57674c","name":"alm","func":"if(msg.alarm === 1) {\n    msg.payload = \"LIFT LIMIT is REACHED\";\n    msg.color = \"red\";\n}\nelse if(msg.alarm === 0) {\n    msg.payload = \"OK\";\n    msg.color = \"lime\";\n}\nreturn msg;","outputs":1,"noerr":0,"x":290,"y":1320,"wires":[["701799c6.f071b8","35a3bfa1.7fb1c"]]},{"id":"54c7f570.8fad7c","type":"modbus-response","z":"7e8645a7.57674c","name":"","registerShowMax":20,"x":370,"y":240,"wires":[]},{"id":"2566f3c5.e11ecc","type":"function","z":"7e8645a7.57674c","name":"set flag_backward","func":"//let flag = flow.get('flag_nonmetal_out');\n//flag++;\nflow.set('flag_nonmetal_out', 1);\n//return msg;","outputs":1,"noerr":0,"x":690,"y":2840,"wires":[[]]},{"id":"3dbdc498.fc380c","type":"switch","z":"7e8645a7.57674c","name":"backward_control","property":"backward_delay","propertyType":"msg","rules":[{"t":"eq","v":"0","vt":"num"},{"t":"eq","v":"1","vt":"num"},{"t":"eq","v":"2","vt":"num"},{"t":"eq","v":"3","vt":"str"},{"t":"eq","v":"4","vt":"str"}],"checkall":"true","repair":false,"outputs":5,"x":230,"y":2820,"wires":[["40dd4898.7b7a68"],["4db1fbe1.beaa24"],["bd09fe24.c84d8"],["a8cae956.70fe88"],["c12dba56.3796d8"]]},{"id":"30db3450.cf439c","type":"switch","z":"7e8645a7.57674c","name":"forward_control","property":"forward_delay","propertyType":"msg","rules":[{"t":"eq","v":"0","vt":"num"},{"t":"eq","v":"1","vt":"num"},{"t":"eq","v":"2","vt":"num"},{"t":"eq","v":"3","vt":"str"},{"t":"eq","v":"4","vt":"str"}],"checkall":"true","repair":false,"outputs":5,"x":220,"y":2660,"wires":[["431b448f.371f9c"],["5f3778a5.43e628"],["56296680.45da08"],["62e7f7ec.63d8a8"],["3f8bee17.4b4002"]]},{"id":"5f3778a5.43e628","type":"delay","z":"7e8645a7.57674c","name":"2s","pauseType":"delay","timeout":"2","timeoutUnits":"seconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":390,"y":2620,"wires":[["7a8ef4e6.66df6c"]]},{"id":"1b6850e9.ecef9f","type":"mqtt out","z":"7e8645a7.57674c","name":"SCADA Output","topic":"scada","qos":"","retain":"","broker":"1e3b7ff5.14d978","x":580,"y":1420,"wires":[]},{"id":"71fe3c6b.d06dd4","type":"mqtt in","z":"7e8645a7.57674c","name":"Scada Input","topic":"scada/view","qos":"2","datatype":"auto","broker":"1e3b7ff5.14d978","x":130,"y":1520,"wires":[["1c73b6ee.af6ab9"]]},{"id":"1c73b6ee.af6ab9","type":"json","z":"7e8645a7.57674c","name":"Json","property":"payload","action":"","pretty":false,"x":110,"y":1580,"wires":[["5229427f.f7d32c"]]},{"id":"5229427f.f7d32c","type":"switch","z":"7e8645a7.57674c","name":"","property":"payload.topic","propertyType":"msg","rules":[{"t":"eq","v":"button/limit","vt":"str"},{"t":"eq","v":"button/auto","vt":"str"},{"t":"eq","v":"button/main","vt":"str"},{"t":"eq","v":"system/reset","vt":"str"}],"checkall":"true","repair":false,"outputs":4,"x":110,"y":1640,"wires":[["78e091fd.ed3db"],["3a4abe71.092f62"],["5042403c.e0e4e"],["bc1963ac.67387"]]},{"id":"5042403c.e0e4e","type":"change","z":"7e8645a7.57674c","name":"MAIN","rules":[{"t":"set","p":"topic","pt":"msg","to":"button/main","tot":"str"},{"t":"set","p":"payload","pt":"msg","to":"1","tot":"num"}],"action":"","property":"","from":"","to":"","reg":false,"x":310,"y":1680,"wires":[["7624d5b2.0c149c"]]},{"id":"3a4abe71.092f62","type":"change","z":"7e8645a7.57674c","name":"AUTO","rules":[{"t":"set","p":"topic","pt":"msg","to":"button/auto","tot":"str"},{"t":"set","p":"payload","pt":"msg","to":"1","tot":"num"}],"action":"","property":"","from":"","to":"","reg":false,"x":290,"y":1640,"wires":[["41364598.331bdc"]]},{"id":"bc1963ac.67387","type":"change","z":"7e8645a7.57674c","name":"Reset","rules":[{"t":"set","p":"topic","pt":"msg","to":"system/reset","tot":"str"},{"t":"set","p":"payload","pt":"msg","to":"1","tot":"num"}],"action":"","property":"","from":"","to":"","reg":false,"x":310,"y":1740,"wires":[["3d715761.947a68"]]},{"id":"78e091fd.ed3db","type":"change","z":"7e8645a7.57674c","name":"Limit","rules":[{"t":"set","p":"topic","pt":"msg","to":"button/limit","tot":"str"},{"t":"set","p":"payload","pt":"msg","to":"payload.value","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":270,"y":1600,"wires":[["a4cf87e2.bf83d8"]]},{"id":"2738f49d.af412c","type":"function","z":"7e8645a7.57674c","name":"Start Counter","func":"msg.payload = {\n    \"value\": msg.start_pos,\n    \"topic\": \"start/counter\"\n}\nreturn msg;","outputs":1,"noerr":0,"x":670,"y":960,"wires":[["1b6850e9.ecef9f"]]},{"id":"35a3bfa1.7fb1c","type":"function","z":"7e8645a7.57674c","name":"Alarm Message","func":"let textColor = \"black\";\nif(msg.color === \"red\") {\n    textColor = \"white\";\n}\nmsg.payload = {\n    \"value\": msg.payload,\n    \"topic\": \"lift/alarm\",\n    \"color\": msg.color,\n    \"textColor\": textColor\n}\n\nreturn msg;","outputs":1,"noerr":0,"x":680,"y":1320,"wires":[["1b6850e9.ecef9f"]]},{"id":"a8543d75.f6a9d","type":"function","z":"7e8645a7.57674c","name":"Lift Metal Counter","func":"msg.payload = {\n    \"value\": msg.lift_metal_count,\n    \"topic\": \"lift_metal/counter\"\n}\nreturn msg;","outputs":1,"noerr":0,"x":810,"y":1240,"wires":[["1b6850e9.ecef9f"]]},{"id":"37af5f55.79774","type":"function","z":"7e8645a7.57674c","name":"Lift Nonmetal Counter","func":"msg.payload = {\n    \"value\": msg.lift_nonmetal_count,\n    \"topic\": \"lift_nonmetal/counter\"\n}\nreturn msg;","outputs":1,"noerr":0,"x":820,"y":1280,"wires":[["1b6850e9.ecef9f"]]},{"id":"84eb5e36.9bfc6","type":"delay","z":"7e8645a7.57674c","name":"2ms","pauseType":"delay","timeout":"5","timeoutUnits":"milliseconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":650,"y":1280,"wires":[["37af5f55.79774"]]},{"id":"4b84ebf2.35e134","type":"delay","z":"7e8645a7.57674c","name":"2ms","pauseType":"delay","timeout":"2","timeoutUnits":"milliseconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":650,"y":1240,"wires":[["a8543d75.f6a9d"]]},{"id":"6fa85742.1f61e8","type":"function","z":"7e8645a7.57674c","name":"End Position Counter","func":"msg.payload = {\n    \"value\": msg.end_pos,\n    \"topic\": \"end_pos/counter\"\n}\nreturn msg;","outputs":1,"noerr":0,"x":700,"y":1200,"wires":[["1b6850e9.ecef9f"]]},{"id":"a1197d0a.ca8de","type":"function","z":"7e8645a7.57674c","name":"Inputs buff","func":"let inputs = msg.payload;\nflow.set('inputs_status', inputs);\n\n\n//let inputsStatus = flow.get('inputs_status') || [];\n//let outputsStatus = flow.get('outputs_status') || [];\n//return [ msg, msg, msg, msg, msg, msg, msg, msg, msg, msg ];","outputs":1,"noerr":0,"x":350,"y":200,"wires":[[]]},{"id":"a9673ad0.0388a8","type":"function","z":"7e8645a7.57674c","name":"buff","func":"\nreturn msg;","outputs":1,"noerr":0,"x":630,"y":2480,"wires":[[]]},{"id":"7a8ef4e6.66df6c","type":"function","z":"7e8645a7.57674c","name":"buff","func":"\nreturn msg;","outputs":1,"noerr":0,"x":530,"y":2600,"wires":[[]]},{"id":"1ae98992.e57316","type":"function","z":"7e8645a7.57674c","name":"buff","func":"\nreturn msg;","outputs":1,"noerr":0,"x":710,"y":2720,"wires":[["9d79f832.610968"]]},{"id":"b43675a8.ee3b58","type":"function","z":"7e8645a7.57674c","name":"buff","func":"\nreturn [ msg, msg ];","outputs":2,"noerr":0,"x":290,"y":960,"wires":[["efcaf9d9.b033e8"],["2738f49d.af412c"]]},{"id":"1b182d6c.73f3f3","type":"function","z":"7e8645a7.57674c","name":"buff","func":"\nreturn [ msg, msg ];","outputs":2,"noerr":0,"x":290,"y":1200,"wires":[["f06cc6a6.09dad8"],["6fa85742.1f61e8"]]},{"id":"f1ae20bd.0eb1b","type":"function","z":"7e8645a7.57674c","name":"buff","func":"\nreturn [ msg, msg ];","outputs":2,"noerr":0,"x":290,"y":1240,"wires":[["4d5b4df3.2376c4"],["4b84ebf2.35e134"]]},{"id":"7c96b92c.c4ec78","type":"function","z":"7e8645a7.57674c","name":"buff","func":"\nreturn [ msg, msg ];","outputs":2,"noerr":0,"x":290,"y":1280,"wires":[["184c7f4c.09ed61"],["84eb5e36.9bfc6"]]},{"id":"95e17275.01383","type":"function","z":"7e8645a7.57674c","name":"limit for scada","func":"msg.payload = {\n    \"value\":msg.payload,\n    \"topic\":\"button/limit\"\n}\nreturn msg;","outputs":1,"noerr":0,"x":320,"y":1420,"wires":[["1b6850e9.ecef9f"]]},{"id":"6fc24b76.faefa4","type":"function","z":"7e8645a7.57674c","name":"buff","func":"\nreturn [ msg, msg ];","outputs":2,"noerr":0,"x":290,"y":1040,"wires":[["9a4cca4c.d28fd8"],["49a11b67.bb1db4"]]},{"id":"49a11b67.bb1db4","type":"function","z":"7e8645a7.57674c","name":"Metal Counter","func":"msg.payload = {\n    \"value\": msg.metal_count,\n    \"topic\": \"metal/counter\"\n}\nreturn msg;","outputs":1,"noerr":0,"x":680,"y":1040,"wires":[["1b6850e9.ecef9f"]]},{"id":"97556b62.d4fb38","type":"function","z":"7e8645a7.57674c","name":"buff","func":"\nreturn [ msg, msg ];","outputs":2,"noerr":0,"x":290,"y":1120,"wires":[["b293efd7.49acc"],["dae5f2d.f9a691"]]},{"id":"c78d3a6.0d211c8","type":"function","z":"7e8645a7.57674c","name":"buff","func":"\nreturn [ msg, msg ];","outputs":2,"noerr":0,"x":290,"y":1160,"wires":[["c3a12913.d2c818"],["856cf909.ef7dd8"]]},{"id":"dae5f2d.f9a691","type":"function","z":"7e8645a7.57674c","name":"Nonmetal Counter","func":"msg.payload = {\n    \"value\": msg.nonmetal_count,\n    \"topic\": \"nonmetal/counter\"\n}\nreturn msg;","outputs":1,"noerr":0,"x":690,"y":1120,"wires":[["1b6850e9.ecef9f"]]},{"id":"856cf909.ef7dd8","type":"function","z":"7e8645a7.57674c","name":"Total Counter","func":"msg.payload = {\n    \"value\": msg.total_count,\n    \"topic\": \"total/counter\"\n}\nreturn msg;","outputs":1,"noerr":0,"x":670,"y":1160,"wires":[["1b6850e9.ecef9f"]]},{"id":"2a27fb46.a00a44","type":"delay","z":"7e8645a7.57674c","name":"2s","pauseType":"delay","timeout":"2","timeoutUnits":"seconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":510,"y":2440,"wires":[["a9673ad0.0388a8"]]},{"id":"bd09fe24.c84d8","type":"delay","z":"7e8645a7.57674c","name":"3s","pauseType":"delay","timeout":"3","timeoutUnits":"seconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":530,"y":2720,"wires":[["1ae98992.e57316"]]},{"id":"4ff875b2.5c7e5c","type":"delay","z":"7e8645a7.57674c","name":"","pauseType":"delay","timeout":"4","timeoutUnits":"seconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":720,"y":2800,"wires":[["2566f3c5.e11ecc"]]},{"id":"40dd4898.7b7a68","type":"delay","z":"7e8645a7.57674c","name":"1s","pauseType":"delay","timeout":"1","timeoutUnits":"seconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":530,"y":2640,"wires":[["1ae98992.e57316"]]},{"id":"431b448f.371f9c","type":"delay","z":"7e8645a7.57674c","name":"1s","pauseType":"delay","timeout":"1","timeoutUnits":"seconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":390,"y":2580,"wires":[["7a8ef4e6.66df6c"]]},{"id":"a8cae956.70fe88","type":"delay","z":"7e8645a7.57674c","name":"4s","pauseType":"delay","timeout":"4","timeoutUnits":"seconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":530,"y":2760,"wires":[["1ae98992.e57316"]]},{"id":"c12dba56.3796d8","type":"delay","z":"7e8645a7.57674c","name":"5s","pauseType":"delay","timeout":"5","timeoutUnits":"seconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":530,"y":2800,"wires":[["1ae98992.e57316"]]},{"id":"56296680.45da08","type":"delay","z":"7e8645a7.57674c","name":"3s","pauseType":"delay","timeout":"3","timeoutUnits":"seconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":390,"y":2660,"wires":[["7a8ef4e6.66df6c"]]},{"id":"62e7f7ec.63d8a8","type":"delay","z":"7e8645a7.57674c","name":"4s","pauseType":"delay","timeout":"4","timeoutUnits":"seconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":390,"y":2700,"wires":[["7a8ef4e6.66df6c"]]},{"id":"3f8bee17.4b4002","type":"delay","z":"7e8645a7.57674c","name":"5s","pauseType":"delay","timeout":"5","timeoutUnits":"seconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":390,"y":2740,"wires":[["7a8ef4e6.66df6c"]]},{"id":"5d539e01.21fee","type":"delay","z":"7e8645a7.57674c","name":"3s","pauseType":"delay","timeout":"3","timeoutUnits":"seconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":510,"y":2480,"wires":[["a9673ad0.0388a8"]]},{"id":"d8d56574.4172c8","type":"delay","z":"7e8645a7.57674c","name":"4s","pauseType":"delay","timeout":"4","timeoutUnits":"seconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":510,"y":2520,"wires":[["a9673ad0.0388a8"]]},{"id":"9d79f832.610968","type":"function","z":"7e8645a7.57674c","name":"","func":"if(msg.backward === 1) {\n    return msg;\n}\nreturn null;","outputs":1,"noerr":0,"x":710,"y":2760,"wires":[["4ff875b2.5c7e5c"]]},{"id":"e2f38e56.c2c17","type":"modbus-flex-getter","z":"7e8645a7.57674c","name":"Input_Registers","showStatusActivities":false,"showErrors":false,"logIOActivities":false,"server":"b7d00bad.eee838","useIOFile":false,"ioFile":"","useIOForPayload":false,"x":140,"y":220,"wires":[["a1197d0a.ca8de"],["54c7f570.8fad7c"]]},{"id":"5b0d57da.f187a8","type":"function","z":"7e8645a7.57674c","name":"","func":"msg.payload = { \n    'fc': 3,\n    'unitid': 1,\n    'address': 16384 ,\n    'quantity': 9\n}\nreturn msg;","outputs":1,"noerr":0,"x":110,"y":320,"wires":[["e2f38e56.c2c17"]]},{"id":"da78e6c7.324e58","type":"inject","z":"7e8645a7.57674c","name":"","topic":"","payload":"","payloadType":"date","repeat":"0.05","crontab":"","once":false,"onceDelay":0.1,"x":150,"y":360,"wires":[["5b0d57da.f187a8","7fdbd303.f8152c","cabe12ae.37ac"]]},{"id":"8b86bd6c.ed94e","type":"modbus-flex-write","z":"7e8645a7.57674c","name":"","showStatusActivities":false,"showErrors":false,"server":"b7d00bad.eee838","x":150,"y":760,"wires":[[],[]]},{"id":"ef6a2214.d3009","type":"ui_text","z":"7e8645a7.57674c","group":"52c66c8b.e6f7f4","order":11,"width":3,"height":1,"name":"run","label":"Run","format":"<font color={{msg.color}} ><i class=\"fa fa-circle\" style=\"font-size:24px;\"></i></font>","layout":"row-spread","x":590,"y":520,"wires":[]},{"id":"7f34d4c7.af97ec","type":"function","z":"7e8645a7.57674c","name":"Run","func":"let status = context.get('status') || 0;\nlet isFirst = flow.get('initial') || 0;\nlet input = flow.get('led_run') || 0;\nif(isFirst === 1) {\n        if(input === 0) {\n            msg.payload = \"OFF\";\n            msg.color = \"red\";\n            context.set('status', 0);\n            return msg;\n        }\n        else {\n            msg.payload = \"ON\";\n            msg.color = \"lime\";\n            context.set('status', 1);\n            return msg;\n        }\n}\nelse {\n    if(input === status) {\n        return null;\n    }\n    else if(input === 1) {\n       msg.payload = \"ON\";\n        msg.color = \"lime\";\n        context.set('status', 1);\n        return msg; \n    }\n    else {\n        msg.payload = \"OFF\";\n        msg.color = \"red\";\n        context.set('status', 0);\n        return msg;\n    }\n}\nreturn null;","outputs":1,"noerr":0,"x":410,"y":520,"wires":[["ef6a2214.d3009"]]},{"id":"db56c49b.d8a138","type":"function","z":"7e8645a7.57674c","name":"End Item","func":"let status = context.get('status') || 0;\nlet isFirst = flow.get('initial') || 0;\nlet input = flow.get('led_end_item') || 0;\nif(isFirst === 1) {\n        if(input === 0) {\n            msg.payload = \"OFF\";\n            msg.color = \"red\";\n            context.set('status', 0);\n            return msg;\n        }\n        else {\n            msg.payload = \"ON\";\n            msg.color = \"lime\";\n            context.set('status', 1);\n            return msg;\n        }\n}\nelse {\n    if(input === status) {\n        return null;\n    }\n    else if(input === 1) {\n       msg.payload = \"ON\";\n        msg.color = \"lime\";\n        context.set('status', 1);\n        return msg; \n    }\n    else {\n        msg.payload = \"OFF\";\n        msg.color = \"red\";\n        context.set('status', 0);\n        return msg;\n    }\n}\nreturn null;","outputs":1,"noerr":0,"x":420,"y":880,"wires":[["5ec11ff2.5e5eb"]]},{"id":"5ec11ff2.5e5eb","type":"ui_text","z":"7e8645a7.57674c","group":"14da9a56.d47c76","order":11,"width":3,"height":1,"name":"sensor/end_item","label":"End Item","format":"<font color={{msg.color}} ><i class=\"fa fa-circle\" style=\"font-size:24px;\"></i></font>","layout":"row-spread","x":620,"y":880,"wires":[]},{"id":"3048524e.22ad9e","type":"function","z":"7e8645a7.57674c","name":"","func":"return msg;","outputs":1,"noerr":0,"x":130,"y":600,"wires":[["7e31b154.8a6e8","872fd63e.aa4e38","7f34d4c7.af97ec","22284bee.329424","9757cab.cfdaa38","ea64c182.89621","538af961.e2e0f8","747d2d9b.b21604","dd9c19f4.fa21b8","dfb49eec.cc47e","dd1f7bbe.92db88","db56c49b.d8a138"]]},{"id":"cfdfc55.534b338","type":"function","z":"7e8645a7.57674c","name":"","func":"\nreturn msg;","outputs":1,"noerr":0,"x":110,"y":1120,"wires":[["f1ae20bd.0eb1b","1b182d6c.73f3f3","b43675a8.ee3b58","7c96b92c.c4ec78","932227aa.27fb08","6fc24b76.faefa4","97556b62.d4fb38","c78d3a6.0d211c8","e4d1fd1a.5f02f","56816ce6.990794"]]},{"id":"691fe21e.76ec9c","type":"ui_button","z":"7e8645a7.57674c","name":"button/run","group":"52c66c8b.e6f7f4","order":12,"width":3,"height":1,"passthru":false,"label":"Run","tooltip":"","color":"","bgcolor":"","icon":"","payload":"1","payloadType":"num","topic":"run","x":120,"y":1880,"wires":[["bbea3ae8.c58638"]]},{"id":"ee4463a0.50447","type":"ui_button","z":"7e8645a7.57674c","name":"button/end_item","group":"14da9a56.d47c76","order":12,"width":3,"height":1,"passthru":false,"label":"SENSOR END ITEM","tooltip":"","color":"","bgcolor":"","icon":"","payload":"1","payloadType":"num","topic":"button/end_item","x":140,"y":2340,"wires":[["d9df56c5.c5fae8"]]},{"id":"bbea3ae8.c58638","type":"function","z":"7e8645a7.57674c","name":"Run","func":"flow.set('button_run', 1);","outputs":1,"noerr":0,"x":310,"y":1880,"wires":[[]]},{"id":"41364598.331bdc","type":"function","z":"7e8645a7.57674c","name":"Auto","func":"flow.set('button_auto', 1);","outputs":1,"noerr":0,"x":310,"y":1920,"wires":[[]]},{"id":"d9df56c5.c5fae8","type":"function","z":"7e8645a7.57674c","name":"End Item","func":"flow.set('button_end_item', 1);","outputs":1,"noerr":0,"x":320,"y":2340,"wires":[[]]},{"id":"bc45edc0.14c14","type":"ui_text","z":"7e8645a7.57674c","group":"e696c741.2d8e58","order":2,"width":3,"height":1,"name":"templ/metal_counter","label":"TEMPL METAL COUNT","format":"{{msg.templ_count_metal}}","layout":"row-spread","x":480,"y":1000,"wires":[]},{"id":"e4d1fd1a.5f02f","type":"function","z":"7e8645a7.57674c","name":"buff","func":"\nreturn [ msg, msg ];","outputs":2,"noerr":0,"x":290,"y":1000,"wires":[["bc45edc0.14c14"],["c7381f3f.910fb"]]},{"id":"c7381f3f.910fb","type":"function","z":"7e8645a7.57674c","name":"Templ Metal Counter","func":"msg.payload = {\n    \"value\": msg.templ_metal_count,\n    \"topic\": \"templ/metal_counter\"\n}\nreturn msg;","outputs":1,"noerr":0,"x":700,"y":1000,"wires":[["1b6850e9.ecef9f"]]},{"id":"33d22705.319948","type":"ui_text","z":"7e8645a7.57674c","group":"e696c741.2d8e58","order":3,"width":3,"height":1,"name":"templ/item_counter","label":"TEMPL ITEM COUNT","format":"{{msg.templ_count_item}}","layout":"row-spread","x":470,"y":1080,"wires":[]},{"id":"56816ce6.990794","type":"function","z":"7e8645a7.57674c","name":"buff","func":"\nreturn [ msg, msg ];","outputs":2,"noerr":0,"x":290,"y":1080,"wires":[["33d22705.319948"],["298a329a.890d4e"]]},{"id":"298a329a.890d4e","type":"function","z":"7e8645a7.57674c","name":"Templ Item Counter","func":"msg.payload = {\n    \"value\": msg.templ_item_count,\n    \"topic\": \"templ/item_counter\"\n}\nreturn msg;","outputs":1,"noerr":0,"x":690,"y":1080,"wires":[["1b6850e9.ecef9f"]]},{"id":"5025cad5.d147e4","type":"debug","z":"7e8645a7.57674c","name":"On Output","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":610,"y":1540,"wires":[]},{"id":"cabe12ae.37ac","type":"function","z":"7e8645a7.57674c","name":"? set flag","func":"let action = flow.get('flag_end_item') || 0;\nif(action === 1) {\n    action = 0;\n    flow.set('flag_end_item', action);\n    msg.payload = 1;\n    return msg;\n}\nreturn null;","outputs":1,"noerr":0,"x":100,"y":1380,"wires":[["fe89f521.2b36b8"]]},{"id":"fe89f521.2b36b8","type":"delay","z":"7e8645a7.57674c","name":"5ms","pauseType":"delay","timeout":"5","timeoutUnits":"milliseconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":230,"y":1380,"wires":[["788dca4b.6ed044","5025cad5.d147e4"]]},{"id":"788dca4b.6ed044","type":"function","z":"7e8645a7.57674c","name":"flag = 1","func":"flow.set('flag', 1);\n","outputs":1,"noerr":0,"x":380,"y":1380,"wires":[[]]},{"id":"52c66c8b.e6f7f4","type":"ui_group","z":"","name":"Control","tab":"948a3a68.0fbbf8","order":1,"disp":true,"width":"6","collapse":false},{"id":"14da9a56.d47c76","type":"ui_group","z":"","name":"Sensors","tab":"948a3a68.0fbbf8","order":2,"disp":true,"width":"6","collapse":false},{"id":"e696c741.2d8e58","type":"ui_group","z":"","name":"Display","tab":"948a3a68.0fbbf8","order":3,"disp":true,"width":"6","collapse":false},{"id":"1e3b7ff5.14d978","type":"mqtt-broker","z":"","name":"MyMQTT","broker":"localhost","port":"1883","clientid":"","usetls":false,"compatmode":true,"keepalive":"60","cleansession":true,"birthTopic":"","birthQos":"0","birthPayload":"","closeTopic":"","closeQos":"0","closePayload":"","willTopic":"","willQos":"0","willPayload":""},{"id":"b7d00bad.eee838","type":"modbus-client","z":"","name":"","clienttype":"tcp","bufferCommands":true,"stateLogEnabled":false,"tcpHost":"127.0.0.1","tcpPort":"502","tcpType":"DEFAULT","serialPort":"/dev/ttyUSB","serialType":"RTU-BUFFERD","serialBaudrate":"9600","serialDatabits":"8","serialStopbits":"1","serialParity":"none","serialConnectionDelay":"100","unit_id":"1","commandDelay":"1","clientTimeout":"1000","reconnectTimeout":"2000"},{"id":"948a3a68.0fbbf8","type":"ui_tab","z":"","name":"Lenta New","icon":"dashboard","order":11,"disabled":false,"hidden":false}]